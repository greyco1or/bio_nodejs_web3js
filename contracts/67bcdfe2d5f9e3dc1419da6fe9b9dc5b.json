{
	"id": "67bcdfe2d5f9e3dc1419da6fe9b9dc5b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.16",
	"solcLongVersion": "0.5.16+commit.9c3226ce",
	"input": {
		"language": "Solidity",
		"sources": {
			"contract.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity 0.5.16;\n\ninterface IBEP20 {\n  /**\n   * @dev Returns the amount of tokens in existence.\n   */\n  function totalSupply() external view returns (uint256);\n\n  /**\n   * @dev Returns the token decimals.\n   */\n  function decimals() external view returns (uint8);\n\n  /**\n   * @dev Returns the token symbol.\n   */\n  function symbol() external view returns (string memory);\n\n  /**\n  * @dev Returns the token name.\n  */\n  function name() external view returns (string memory);\n\n  /**\n   * @dev Returns the bep token owner.\n   */\n  function getOwner() external view returns (address);\n\n  /**\n   * @dev Returns the amount of tokens owned by `account`.\n   */\n  function balanceOf(address account) external view returns (uint256);\n\n  /**\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transfer(address recipient, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Returns the remaining number of tokens that `spender` will be\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\n   * zero by default.\n   *\n   * This value changes when {approve} or {transferFrom} are called.\n   */\n  function allowance(address _owner, address spender) external view returns (uint256);\n\n  /**\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\n   * that someone may use both the old and the new allowance by unfortunate\n   * transaction ordering. One possible solution to mitigate this race\n   * condition is to first reduce the spender's allowance to 0 and set the\n   * desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   *\n   * Emits an {Approval} event.\n   */\n  function approve(address spender, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\n   * allowance mechanism. `amount` is then deducted from the caller's\n   * allowance.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\n   * another (`to`).\n   *\n   * Note that `value` may be zero.\n   */\n  event Transfer(address indexed from, address indexed to, uint256 value);\n\n  /**\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n   * a call to {approve}. `value` is the new allowance.\n   */\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\ncontract Context {\n  // Empty internal constructor, to prevent people from mistakenly deploying\n  // an instance of this contract, which should be used via inheritance.\n  constructor () internal { }\n\n  function _msgSender() internal view returns (address payable) {\n    return msg.sender;\n  }\n\n  function _msgData() internal view returns (bytes memory) {\n    this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n    return msg.data;\n  }\n}\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n  /**\n   * @dev Returns the addition of two unsigned integers, reverting on\n   * overflow.\n   *\n   * Counterpart to Solidity's `+` operator.\n   *\n   * Requirements:\n   * - Addition cannot overflow.\n   */\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    require(c >= a, \"SafeMath: addition overflow\");\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the subtraction of two unsigned integers, reverting on\n   * overflow (when the result is negative).\n   *\n   * Counterpart to Solidity's `-` operator.\n   *\n   * Requirements:\n   * - Subtraction cannot overflow.\n   */\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    return sub(a, b, \"SafeMath: subtraction overflow\");\n  }\n\n  /**\n   * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n   * overflow (when the result is negative).\n   *\n   * Counterpart to Solidity's `-` operator.\n   *\n   * Requirements:\n   * - Subtraction cannot overflow.\n   */\n  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n    require(b <= a, errorMessage);\n    uint256 c = a - b;\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the multiplication of two unsigned integers, reverting on\n   * overflow.\n   *\n   * Counterpart to Solidity's `*` operator.\n   *\n   * Requirements:\n   * - Multiplication cannot overflow.\n   */\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n    // benefit is lost if 'b' is also tested.\n    // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n    if (a == 0) {\n      return 0;\n    }\n\n    uint256 c = a * b;\n    require(c / a == b, \"SafeMath: multiplication overflow\");\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the integer division of two unsigned integers. Reverts on\n   * division by zero. The result is rounded towards zero.\n   *\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\n   * uses an invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    return div(a, b, \"SafeMath: division by zero\");\n  }\n\n  /**\n   * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n   * division by zero. The result is rounded towards zero.\n   *\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\n   * uses an invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n    // Solidity only automatically asserts when dividing by 0\n    require(b > 0, errorMessage);\n    uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n   * Reverts when dividing by zero.\n   *\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\n   * invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n    return mod(a, b, \"SafeMath: modulo by zero\");\n  }\n\n  /**\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n   * Reverts with custom message when dividing by zero.\n   *\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\n   * invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n    require(b != 0, errorMessage);\n    return a % b;\n  }\n}\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\ncontract Ownable is Context {\n  address private _owner;\n\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n  /**\n   * @dev Initializes the contract setting the deployer as the initial owner.\n   */\n  constructor () internal {\n    address msgSender = _msgSender();\n    _owner = msgSender;\n    emit OwnershipTransferred(address(0), msgSender);\n  }\n\n  /**\n   * @dev Returns the address of the current owner.\n   */\n  function owner() public view returns (address) {\n    return _owner;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\n    _;\n  }\n\n  /**\n   * @dev Leaves the contract without owner. It will not be possible to call\n   * `onlyOwner` functions anymore. Can only be called by the current owner.\n   *\n   * NOTE: Renouncing ownership will leave the contract without an owner,\n   * thereby removing any functionality that is only available to the owner.\n   */\n  function renounceOwnership() public onlyOwner {\n    emit OwnershipTransferred(_owner, address(0));\n    _owner = address(0);\n  }\n\n  /**\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\n   * Can only be called by the current owner.\n   */\n  function transferOwnership(address newOwner) public onlyOwner {\n    _transferOwnership(newOwner);\n  }\n\n  /**\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\n   */\n  function _transferOwnership(address newOwner) internal {\n    require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n    emit OwnershipTransferred(_owner, newOwner);\n    _owner = newOwner;\n  }\n}\n\ncontract BEP20TGK is Context, IBEP20, Ownable {\n  using SafeMath for uint256;\n\n  mapping (address => uint256) private _balances;\n\n  mapping (address => mapping (address => uint256)) private _allowances;\n\n  uint256 private _totalSupply;\n  uint8 public _decimals;\n  string public _symbol;\n  string public _name;\n\n  constructor() public {\n    _name = \"kyungmincoin\";\n    _symbol = \"KMC\";\n    _decimals = 18;\n    _totalSupply = 300000000 * 10**18;\n    _balances[msg.sender] = _totalSupply;\n\n    emit Transfer(address(0), msg.sender, _totalSupply);\n  }\n\n  /**\n   * @dev Returns the bep token owner.\n   */\n  function getOwner() external view returns (address) {\n    return owner();\n  }\n\n  /**\n   * @dev Returns the token decimals.\n   */\n  function decimals() external view returns (uint8) {\n    return _decimals;\n  }\n\n  /**\n   * @dev Returns the token symbol.\n   */\n  function symbol() external view returns (string memory) {\n    return _symbol;\n  }\n\n  /**\n  * @dev Returns the token name.\n  */\n  function name() external view returns (string memory) {\n    return _name;\n  }\n\n  /**\n   * @dev See {BEP20-totalSupply}.\n   */\n  function totalSupply() external view returns (uint256) {\n    return _totalSupply;\n  }\n\n  /**\n   * @dev See {BEP20-balanceOf}.\n   */\n  function balanceOf(address account) external view returns (uint256) {\n    return _balances[account];\n  }\n\n  /**\n   * @dev See {BEP20-transfer}.\n   *\n   * Requirements:\n   *\n   * - `recipient` cannot be the zero address.\n   * - the caller must have a balance of at least `amount`.\n   */\n  function transfer(address recipient, uint256 amount) external returns (bool) {\n    _transfer(_msgSender(), recipient, amount);\n    return true;\n  }\n\n  /**\n   * @dev See {BEP20-allowance}.\n   */\n  function allowance(address owner, address spender) external view returns (uint256) {\n    return _allowances[owner][spender];\n  }\n\n  /**\n   * @dev See {BEP20-approve}.\n   *\n   * Requirements:\n   *\n   * - `spender` cannot be the zero address.\n   */\n  function approve(address spender, uint256 amount) external returns (bool) {\n    _approve(_msgSender(), spender, amount);\n    return true;\n  }\n\n  /**\n   * @dev See {BEP20-transferFrom}.\n   *\n   * Emits an {Approval} event indicating the updated allowance. This is not\n   * required by the EIP. See the note at the beginning of {BEP20};\n   *\n   * Requirements:\n   * - `sender` and `recipient` cannot be the zero address.\n   * - `sender` must have a balance of at least `amount`.\n   * - the caller must have allowance for `sender`'s tokens of at least\n   * `amount`.\n   */\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\n    _transfer(sender, recipient, amount);\n    _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\"));\n    return true;\n  }\n\n  /**\n   * @dev Atomically increases the allowance granted to `spender` by the caller.\n   *\n   * This is an alternative to {approve} that can be used as a mitigation for\n   * problems described in {BEP20-approve}.\n   *\n   * Emits an {Approval} event indicating the updated allowance.\n   *\n   * Requirements:\n   *\n   * - `spender` cannot be the zero address.\n   */\n  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\n    return true;\n  }\n\n  /**\n   * @dev Atomically decreases the allowance granted to `spender` by the caller.\n   *\n   * This is an alternative to {approve} that can be used as a mitigation for\n   * problems described in {BEP20-approve}.\n   *\n   * Emits an {Approval} event indicating the updated allowance.\n   *\n   * Requirements:\n   *\n   * - `spender` cannot be the zero address.\n   * - `spender` must have allowance for the caller of at least\n   * `subtractedValue`.\n   */\n  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\"));\n    return true;\n  }\n\n  /**\n   * @dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\n   * the total supply.\n   *\n   * Requirements\n   *\n   * - `msg.sender` must be the token owner\n   */\n  function mint(uint256 amount) public onlyOwner returns (bool) {\n    _mint(_msgSender(), amount);\n    return true;\n  }\n\n  /**\n   * @dev Burn `amount` tokens and decreasing the total supply.\n   */\n  function burn(uint256 amount) public returns (bool) {\n    _burn(_msgSender(), amount);\n    return true;\n  }\n\n  /**\n   * @dev Moves tokens `amount` from `sender` to `recipient`.\n   *\n   * This is internal function is equivalent to {transfer}, and can be used to\n   * e.g. implement automatic token fees, slashing mechanisms, etc.\n   *\n   * Emits a {Transfer} event.\n   *\n   * Requirements:\n   *\n   * - `sender` cannot be the zero address.\n   * - `recipient` cannot be the zero address.\n   * - `sender` must have a balance of at least `amount`.\n   */\n  function _transfer(address sender, address recipient, uint256 amount) internal {\n    require(sender != address(0), \"BEP20: transfer from the zero address\");\n    require(recipient != address(0), \"BEP20: transfer to the zero address\");\n\n    _balances[sender] = _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\");\n    _balances[recipient] = _balances[recipient].add(amount);\n    emit Transfer(sender, recipient, amount);\n  }\n\n  /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n   * the total supply.\n   *\n   * Emits a {Transfer} event with `from` set to the zero address.\n   *\n   * Requirements\n   *\n   * - `to` cannot be the zero address.\n   */\n  function _mint(address account, uint256 amount) internal {\n    require(account != address(0), \"BEP20: mint to the zero address\");\n\n    _totalSupply = _totalSupply.add(amount);\n    _balances[account] = _balances[account].add(amount);\n    emit Transfer(address(0), account, amount);\n  }\n\n  /**\n   * @dev Destroys `amount` tokens from `account`, reducing the\n   * total supply.\n   *\n   * Emits a {Transfer} event with `to` set to the zero address.\n   *\n   * Requirements\n   *\n   * - `account` cannot be the zero address.\n   * - `account` must have at least `amount` tokens.\n   */\n  function _burn(address account, uint256 amount) internal {\n    require(account != address(0), \"BEP20: burn from the zero address\");\n\n    _balances[account] = _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\");\n    _totalSupply = _totalSupply.sub(amount);\n    emit Transfer(account, address(0), amount);\n  }\n\n  /**\n   * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n   *\n   * This is internal function is equivalent to `approve`, and can be used to\n   * e.g. set automatic allowances for certain subsystems, etc.\n   *\n   * Emits an {Approval} event.\n   *\n   * Requirements:\n   *\n   * - `owner` cannot be the zero address.\n   * - `spender` cannot be the zero address.\n   */\n  function _approve(address owner, address spender, uint256 amount) internal {\n    require(owner != address(0), \"BEP20: approve from the zero address\");\n    require(spender != address(0), \"BEP20: approve to the zero address\");\n\n    _allowances[owner][spender] = amount;\n    emit Approval(owner, spender, amount);\n  }\n\n  /**\n   * @dev Destroys `amount` tokens from `account`.`amount` is then deducted\n   * from the caller's allowance.\n   *\n   * See {_burn} and {_approve}.\n   */\n  function _burnFrom(address account, uint256 amount) internal {\n    _burn(account, amount);\n    _approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, \"BEP20: burn amount exceeds allowance\"));\n  }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contract.sol": {
				"BEP20TGK": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "See {BEP20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {BEP20-approve}.   * Requirements:   * - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {BEP20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Burn `amount` tokens and decreasing the total supply."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller.   * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.   * Emits an {Approval} event indicating the updated allowance.   * Requirements:   * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller.   * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.   * Emits an {Approval} event indicating the updated allowance.   * Requirements:   * - `spender` cannot be the zero address."
							},
							"mint(uint256)": {
								"details": "Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply.   * Requirements   * - `msg.sender` must be the token owner"
							},
							"name()": {
								"details": "Returns the token name."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.   * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "See {BEP20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {BEP20-transfer}.   * Requirements:   * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {BEP20-transferFrom}.   * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20};   * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "    /* \"contract.sol\":11005:18749  contract BEP20TGK is Context, IBEP20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contract.sol\":11318:11552  constructor() public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contract.sol\":11318:11552  constructor() public {... */\n  pop\n    /* \"contract.sol\":9564:9581  address msgSender */\n  0x00\n    /* \"contract.sol\":9584:9596  _msgSender() */\n  tag_7\n    /* \"contract.sol\":9584:9594  _msgSender */\n  shl(0x20, tag_8)\n    /* \"contract.sol\":9584:9596  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"contract.sol\":9564:9596  address msgSender = _msgSender() */\n  swap1\n  pop\n    /* \"contract.sol\":9611:9620  msgSender */\n  dup1\n    /* \"contract.sol\":9602:9608  _owner */\n  0x00\n  dup1\n    /* \"contract.sol\":9602:9620  _owner = msgSender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contract.sol\":9664:9673  msgSender */\n  dup1\n    /* \"contract.sol\":9631:9674  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contract.sol\":9660:9661  0 */\n  0x00\n    /* \"contract.sol\":9631:9674  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contract.sol\":9534:9679  constructor () internal {... */\n  pop\n    /* \"contract.sol\":11345:11367  _name = \"kyungmincoin\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0c\n  dup2\n  mstore\n  0x20\n  add\n  0x6b79756e676d696e636f696e0000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contract.sol\":11345:11350  _name */\n  0x06\n    /* \"contract.sol\":11345:11367  _name = \"kyungmincoin\" */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_10\n  swap3\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"contract.sol\":11373:11388  _symbol = \"KMC\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x4b4d430000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contract.sol\":11373:11380  _symbol */\n  0x05\n    /* \"contract.sol\":11373:11388  _symbol = \"KMC\" */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_12\n  swap3\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_12:\n  pop\n    /* \"contract.sol\":11406:11408  18 */\n  0x12\n    /* \"contract.sol\":11394:11403  _decimals */\n  0x04\n  0x00\n    /* \"contract.sol\":11394:11408  _decimals = 18 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contract.sol\":11429:11447  300000000 * 10**18 */\n  0xf8277896582678ac000000\n    /* \"contract.sol\":11414:11426  _totalSupply */\n  0x03\n    /* \"contract.sol\":11414:11447  _totalSupply = 300000000 * 10**18 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contract.sol\":11477:11489  _totalSupply */\n  sload(0x03)\n    /* \"contract.sol\":11453:11462  _balances */\n  0x01\n    /* \"contract.sol\":11453:11474  _balances[msg.sender] */\n  0x00\n    /* \"contract.sol\":11463:11473  msg.sender */\n  caller\n    /* \"contract.sol\":11453:11474  _balances[msg.sender] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contract.sol\":11453:11489  _balances[msg.sender] = _totalSupply */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contract.sol\":11522:11532  msg.sender */\n  caller\n    /* \"contract.sol\":11501:11547  Transfer(address(0), msg.sender, _totalSupply) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contract.sol\":11518:11519  0 */\n  0x00\n    /* \"contract.sol\":11501:11547  Transfer(address(0), msg.sender, _totalSupply) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"contract.sol\":11534:11546  _totalSupply */\n  sload(0x03)\n    /* \"contract.sol\":11501:11547  Transfer(address(0), msg.sender, _totalSupply) */\n  mload(0x40)\n  dup1\n  dup3\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contract.sol\":11005:18749  contract BEP20TGK is Context, IBEP20, Ownable {... */\n  jump(tag_13)\n    /* \"contract.sol\":3632:3722  function _msgSender() internal view returns (address payable) {... */\ntag_8:\n    /* \"contract.sol\":3677:3692  address payable */\n  0x00\n    /* \"contract.sol\":3707:3717  msg.sender */\n  caller\n    /* \"contract.sol\":3700:3717  return msg.sender */\n  swap1\n  pop\n    /* \"contract.sol\":3632:3722  function _msgSender() internal view returns (address payable) {... */\n  swap1\n  jump\t// out\n    /* \"contract.sol\":11005:18749  contract BEP20TGK is Context, IBEP20, Ownable {... */\ntag_11:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_16\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_15)\ntag_16:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_15\n  jumpi\n  swap2\n  dup3\n  add\ntag_17:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_18\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_17)\ntag_18:\ntag_15:\n  pop\n  swap1\n  pop\n  tag_19\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n  swap1\n  jump\t// out\ntag_20:\n  tag_21\n  swap2\n  swap1\ntag_22:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_23\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_22)\ntag_23:\n  pop\n  swap1\n  jump\ntag_21:\n  swap1\n  jump\t// out\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contract.sol\":11005:18749  contract BEP20TGK is Context, IBEP20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"contract.sol\":11005:18749  contract BEP20TGK is Context, IBEP20, Ownable {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x893d20e8\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xb09f1266\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xd28d8852\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x893d20e8\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa0712d68\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x32424aa3\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x32424aa3\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contract.sol\":11996:12073  function name() external view returns (string memory) {... */\n    tag_3:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_28:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_30\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_28)\n    tag_30:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contract.sol\":11996:12073  function name() external view returns (string memory) {... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_31\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_31:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract.sol\":12991:13132  function approve(address spender, uint256 amount) external returns (bool) {... */\n    tag_4:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_33\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_33:\n        /* \"contract.sol\":12991:13132  function approve(address spender, uint256 amount) external returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_34\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract.sol\":12124:12209  function totalSupply() external view returns (uint256) {... */\n    tag_5:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract.sol\":13563:13851  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {... */\n    tag_6:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_38\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_38:\n        /* \"contract.sol\":13563:13851  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_39\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract.sol\":11738:11815  function decimals() external view returns (uint8) {... */\n    tag_7:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract.sol\":11243:11265  uint8 public _decimals */\n    tag_8:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract.sol\":14219:14416  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_9:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_45\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_45:\n        /* \"contract.sol\":14219:14416  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_46\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract.sol\":15507:15614  function burn(uint256 amount) public returns (bool) {... */\n    tag_10:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_48\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_48:\n        /* \"contract.sol\":15507:15614  function burn(uint256 amount) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_49\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract.sol\":12258:12362  function balanceOf(address account) external view returns (uint256) {... */\n    tag_11:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_51\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_51:\n        /* \"contract.sol\":12258:12362  function balanceOf(address account) external view returns (uint256) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_52\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract.sol\":10330:10457  function renounceOwnership() public onlyOwner {... */\n    tag_12:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      stop\n        /* \"contract.sol\":11607:11684  function getOwner() external view returns (address) {... */\n    tag_13:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract.sol\":9747:9818  function owner() public view returns (address) {... */\n    tag_14:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract.sol\":11867:11948  function symbol() external view returns (string memory) {... */\n    tag_15:\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_61:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_63\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_61)\n    tag_63:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contract.sol\":11867:11948  function symbol() external view returns (string memory) {... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_64\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_64:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract.sol\":15310:15427  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n    tag_16:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_66\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_66:\n        /* \"contract.sol\":15310:15427  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_67\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract.sol\":14872:15120  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_17:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_69\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_69:\n        /* \"contract.sol\":14872:15120  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_70\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract.sol\":12546:12693  function transfer(address recipient, uint256 amount) external returns (bool) {... */\n    tag_18:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_72\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_72:\n        /* \"contract.sol\":12546:12693  function transfer(address recipient, uint256 amount) external returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_73\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract.sol\":11269:11290  string public _symbol */\n    tag_19:\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_76:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_78\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_76)\n    tag_78:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contract.sol\":11269:11290  string public _symbol */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_79\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_79:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract.sol\":11294:11313  string public _name */\n    tag_20:\n      tag_80\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_82:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_84\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_82)\n    tag_84:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contract.sol\":11294:11313  string public _name */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_85\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_85:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract.sol\":12742:12870  function allowance(address owner, address spender) external view returns (uint256) {... */\n    tag_21:\n      tag_86\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_87\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_87:\n        /* \"contract.sol\":12742:12870  function allowance(address owner, address spender) external view returns (uint256) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_88\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract.sol\":10596:10697  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_22:\n      tag_89\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_90\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_90:\n        /* \"contract.sol\":10596:10697  function transferOwnership(address newOwner) public onlyOwner {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_91\n      jump\t// in\n    tag_89:\n      stop\n        /* \"contract.sol\":11996:12073  function name() external view returns (string memory) {... */\n    tag_27:\n        /* \"contract.sol\":12035:12048  string memory */\n      0x60\n        /* \"contract.sol\":12063:12068  _name */\n      0x06\n        /* \"contract.sol\":12056:12068  return _name */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_93\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_94\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_93)\n    tag_94:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_95:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_95\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_93:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contract.sol\":11996:12073  function name() external view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contract.sol\":12991:13132  function approve(address spender, uint256 amount) external returns (bool) {... */\n    tag_34:\n        /* \"contract.sol\":13059:13063  bool */\n      0x00\n        /* \"contract.sol\":13071:13110  _approve(_msgSender(), spender, amount) */\n      tag_97\n        /* \"contract.sol\":13080:13092  _msgSender() */\n      tag_98\n        /* \"contract.sol\":13080:13090  _msgSender */\n      tag_99\n        /* \"contract.sol\":13080:13092  _msgSender() */\n      jump\t// in\n    tag_98:\n        /* \"contract.sol\":13094:13101  spender */\n      dup5\n        /* \"contract.sol\":13103:13109  amount */\n      dup5\n        /* \"contract.sol\":13071:13079  _approve */\n      tag_100\n        /* \"contract.sol\":13071:13110  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_97:\n        /* \"contract.sol\":13123:13127  true */\n      0x01\n        /* \"contract.sol\":13116:13127  return true */\n      swap1\n      pop\n        /* \"contract.sol\":12991:13132  function approve(address spender, uint256 amount) external returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contract.sol\":12124:12209  function totalSupply() external view returns (uint256) {... */\n    tag_36:\n        /* \"contract.sol\":12170:12177  uint256 */\n      0x00\n        /* \"contract.sol\":12192:12204  _totalSupply */\n      sload(0x03)\n        /* \"contract.sol\":12185:12204  return _totalSupply */\n      swap1\n      pop\n        /* \"contract.sol\":12124:12209  function totalSupply() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contract.sol\":13563:13851  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {... */\n    tag_39:\n        /* \"contract.sol\":13654:13658  bool */\n      0x00\n        /* \"contract.sol\":13666:13702  _transfer(sender, recipient, amount) */\n      tag_103\n        /* \"contract.sol\":13676:13682  sender */\n      dup5\n        /* \"contract.sol\":13684:13693  recipient */\n      dup5\n        /* \"contract.sol\":13695:13701  amount */\n      dup5\n        /* \"contract.sol\":13666:13675  _transfer */\n      tag_104\n        /* \"contract.sol\":13666:13702  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_103:\n        /* \"contract.sol\":13708:13829  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\")) */\n      tag_105\n        /* \"contract.sol\":13717:13723  sender */\n      dup5\n        /* \"contract.sol\":13725:13737  _msgSender() */\n      tag_106\n        /* \"contract.sol\":13725:13735  _msgSender */\n      tag_99\n        /* \"contract.sol\":13725:13737  _msgSender() */\n      jump\t// in\n    tag_106:\n        /* \"contract.sol\":13739:13828  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      tag_107\n        /* \"contract.sol\":13777:13783  amount */\n      dup6\n        /* \"contract.sol\":13739:13828  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e\n      0x28\n      swap2\n      codecopy\n        /* \"contract.sol\":13739:13750  _allowances */\n      0x02\n        /* \"contract.sol\":13739:13758  _allowances[sender] */\n      0x00\n        /* \"contract.sol\":13751:13757  sender */\n      dup12\n        /* \"contract.sol\":13739:13758  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contract.sol\":13739:13772  _allowances[sender][_msgSender()] */\n      0x00\n        /* \"contract.sol\":13759:13771  _msgSender() */\n      tag_108\n        /* \"contract.sol\":13759:13769  _msgSender */\n      tag_99\n        /* \"contract.sol\":13759:13771  _msgSender() */\n      jump\t// in\n    tag_108:\n        /* \"contract.sol\":13739:13772  _allowances[sender][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contract.sol\":13739:13776  _allowances[sender][_msgSender()].sub */\n      tag_109\n      swap1\n        /* \"contract.sol\":13739:13828  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_107:\n        /* \"contract.sol\":13708:13716  _approve */\n      tag_100\n        /* \"contract.sol\":13708:13829  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_105:\n        /* \"contract.sol\":13842:13846  true */\n      0x01\n        /* \"contract.sol\":13835:13846  return true */\n      swap1\n      pop\n        /* \"contract.sol\":13563:13851  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contract.sol\":11738:11815  function decimals() external view returns (uint8) {... */\n    tag_41:\n        /* \"contract.sol\":11781:11786  uint8 */\n      0x00\n        /* \"contract.sol\":11801:11810  _decimals */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contract.sol\":11794:11810  return _decimals */\n      swap1\n      pop\n        /* \"contract.sol\":11738:11815  function decimals() external view returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contract.sol\":11243:11265  uint8 public _decimals */\n    tag_43:\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contract.sol\":14219:14416  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_46:\n        /* \"contract.sol\":14299:14303  bool */\n      0x00\n        /* \"contract.sol\":14311:14394  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_112\n        /* \"contract.sol\":14320:14332  _msgSender() */\n      tag_113\n        /* \"contract.sol\":14320:14330  _msgSender */\n      tag_99\n        /* \"contract.sol\":14320:14332  _msgSender() */\n      jump\t// in\n    tag_113:\n        /* \"contract.sol\":14334:14341  spender */\n      dup5\n        /* \"contract.sol\":14343:14393  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_114\n        /* \"contract.sol\":14382:14392  addedValue */\n      dup6\n        /* \"contract.sol\":14343:14354  _allowances */\n      0x02\n        /* \"contract.sol\":14343:14368  _allowances[_msgSender()] */\n      0x00\n        /* \"contract.sol\":14355:14367  _msgSender() */\n      tag_115\n        /* \"contract.sol\":14355:14365  _msgSender */\n      tag_99\n        /* \"contract.sol\":14355:14367  _msgSender() */\n      jump\t// in\n    tag_115:\n        /* \"contract.sol\":14343:14368  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contract.sol\":14343:14377  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"contract.sol\":14369:14376  spender */\n      dup10\n        /* \"contract.sol\":14343:14377  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contract.sol\":14343:14381  _allowances[_msgSender()][spender].add */\n      tag_116\n      swap1\n        /* \"contract.sol\":14343:14393  _allowances[_msgSender()][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_114:\n        /* \"contract.sol\":14311:14319  _approve */\n      tag_100\n        /* \"contract.sol\":14311:14394  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      jump\t// in\n    tag_112:\n        /* \"contract.sol\":14407:14411  true */\n      0x01\n        /* \"contract.sol\":14400:14411  return true */\n      swap1\n      pop\n        /* \"contract.sol\":14219:14416  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contract.sol\":15507:15614  function burn(uint256 amount) public returns (bool) {... */\n    tag_49:\n        /* \"contract.sol\":15553:15557  bool */\n      0x00\n        /* \"contract.sol\":15565:15592  _burn(_msgSender(), amount) */\n      tag_118\n        /* \"contract.sol\":15571:15583  _msgSender() */\n      tag_119\n        /* \"contract.sol\":15571:15581  _msgSender */\n      tag_99\n        /* \"contract.sol\":15571:15583  _msgSender() */\n      jump\t// in\n    tag_119:\n        /* \"contract.sol\":15585:15591  amount */\n      dup4\n        /* \"contract.sol\":15565:15570  _burn */\n      tag_120\n        /* \"contract.sol\":15565:15592  _burn(_msgSender(), amount) */\n      jump\t// in\n    tag_118:\n        /* \"contract.sol\":15605:15609  true */\n      0x01\n        /* \"contract.sol\":15598:15609  return true */\n      swap1\n      pop\n        /* \"contract.sol\":15507:15614  function burn(uint256 amount) public returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contract.sol\":12258:12362  function balanceOf(address account) external view returns (uint256) {... */\n    tag_52:\n        /* \"contract.sol\":12317:12324  uint256 */\n      0x00\n        /* \"contract.sol\":12339:12348  _balances */\n      0x01\n        /* \"contract.sol\":12339:12357  _balances[account] */\n      0x00\n        /* \"contract.sol\":12349:12356  account */\n      dup4\n        /* \"contract.sol\":12339:12357  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contract.sol\":12332:12357  return _balances[account] */\n      swap1\n      pop\n        /* \"contract.sol\":12258:12362  function balanceOf(address account) external view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contract.sol\":10330:10457  function renounceOwnership() public onlyOwner {... */\n    tag_54:\n        /* \"contract.sol\":9943:9955  _msgSender() */\n      tag_123\n        /* \"contract.sol\":9943:9953  _msgSender */\n      tag_99\n        /* \"contract.sol\":9943:9955  _msgSender() */\n      jump\t// in\n    tag_123:\n        /* \"contract.sol\":9933:9955  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract.sol\":9933:9939  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract.sol\":9933:9955  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contract.sol\":9925:9992  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_124:\n        /* \"contract.sol\":10424:10425  0 */\n      0x00\n        /* \"contract.sol\":10387:10427  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract.sol\":10408:10414  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract.sol\":10387:10427  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contract.sol\":10450:10451  0 */\n      0x00\n        /* \"contract.sol\":10433:10439  _owner */\n      dup1\n      0x00\n        /* \"contract.sol\":10433:10452  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contract.sol\":10330:10457  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"contract.sol\":11607:11684  function getOwner() external view returns (address) {... */\n    tag_56:\n        /* \"contract.sol\":11650:11657  address */\n      0x00\n        /* \"contract.sol\":11672:11679  owner() */\n      tag_127\n        /* \"contract.sol\":11672:11677  owner */\n      tag_58\n        /* \"contract.sol\":11672:11679  owner() */\n      jump\t// in\n    tag_127:\n        /* \"contract.sol\":11665:11679  return owner() */\n      swap1\n      pop\n        /* \"contract.sol\":11607:11684  function getOwner() external view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contract.sol\":9747:9818  function owner() public view returns (address) {... */\n    tag_58:\n        /* \"contract.sol\":9785:9792  address */\n      0x00\n        /* \"contract.sol\":9807:9813  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract.sol\":9800:9813  return _owner */\n      swap1\n      pop\n        /* \"contract.sol\":9747:9818  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contract.sol\":11867:11948  function symbol() external view returns (string memory) {... */\n    tag_60:\n        /* \"contract.sol\":11908:11921  string memory */\n      0x60\n        /* \"contract.sol\":11936:11943  _symbol */\n      0x05\n        /* \"contract.sol\":11929:11943  return _symbol */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_130\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_131\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_130)\n    tag_131:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_132:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_132\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_130:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contract.sol\":11867:11948  function symbol() external view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contract.sol\":15310:15427  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n    tag_67:\n        /* \"contract.sol\":15366:15370  bool */\n      0x00\n        /* \"contract.sol\":9943:9955  _msgSender() */\n      tag_134\n        /* \"contract.sol\":9943:9953  _msgSender */\n      tag_99\n        /* \"contract.sol\":9943:9955  _msgSender() */\n      jump\t// in\n    tag_134:\n        /* \"contract.sol\":9933:9955  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract.sol\":9933:9939  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract.sol\":9933:9955  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contract.sol\":9925:9992  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_135:\n        /* \"contract.sol\":15378:15405  _mint(_msgSender(), amount) */\n      tag_137\n        /* \"contract.sol\":15384:15396  _msgSender() */\n      tag_138\n        /* \"contract.sol\":15384:15394  _msgSender */\n      tag_99\n        /* \"contract.sol\":15384:15396  _msgSender() */\n      jump\t// in\n    tag_138:\n        /* \"contract.sol\":15398:15404  amount */\n      dup4\n        /* \"contract.sol\":15378:15383  _mint */\n      tag_139\n        /* \"contract.sol\":15378:15405  _mint(_msgSender(), amount) */\n      jump\t// in\n    tag_137:\n        /* \"contract.sol\":15418:15422  true */\n      0x01\n        /* \"contract.sol\":15411:15422  return true */\n      swap1\n      pop\n        /* \"contract.sol\":15310:15427  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contract.sol\":14872:15120  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_70:\n        /* \"contract.sol\":14957:14961  bool */\n      0x00\n        /* \"contract.sol\":14969:15098  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\")) */\n      tag_141\n        /* \"contract.sol\":14978:14990  _msgSender() */\n      tag_142\n        /* \"contract.sol\":14978:14988  _msgSender */\n      tag_99\n        /* \"contract.sol\":14978:14990  _msgSender() */\n      jump\t// in\n    tag_142:\n        /* \"contract.sol\":14992:14999  spender */\n      dup5\n        /* \"contract.sol\":15001:15097  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      tag_143\n        /* \"contract.sol\":15040:15055  subtractedValue */\n      dup6\n        /* \"contract.sol\":15001:15097  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22\n      0x25\n      swap2\n      codecopy\n        /* \"contract.sol\":15001:15012  _allowances */\n      0x02\n        /* \"contract.sol\":15001:15026  _allowances[_msgSender()] */\n      0x00\n        /* \"contract.sol\":15013:15025  _msgSender() */\n      tag_144\n        /* \"contract.sol\":15013:15023  _msgSender */\n      tag_99\n        /* \"contract.sol\":15013:15025  _msgSender() */\n      jump\t// in\n    tag_144:\n        /* \"contract.sol\":15001:15026  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contract.sol\":15001:15035  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"contract.sol\":15027:15034  spender */\n      dup11\n        /* \"contract.sol\":15001:15035  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contract.sol\":15001:15039  _allowances[_msgSender()][spender].sub */\n      tag_109\n      swap1\n        /* \"contract.sol\":15001:15097  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_143:\n        /* \"contract.sol\":14969:14977  _approve */\n      tag_100\n        /* \"contract.sol\":14969:15098  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\")) */\n      jump\t// in\n    tag_141:\n        /* \"contract.sol\":15111:15115  true */\n      0x01\n        /* \"contract.sol\":15104:15115  return true */\n      swap1\n      pop\n        /* \"contract.sol\":14872:15120  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contract.sol\":12546:12693  function transfer(address recipient, uint256 amount) external returns (bool) {... */\n    tag_73:\n        /* \"contract.sol\":12617:12621  bool */\n      0x00\n        /* \"contract.sol\":12629:12671  _transfer(_msgSender(), recipient, amount) */\n      tag_146\n        /* \"contract.sol\":12639:12651  _msgSender() */\n      tag_147\n        /* \"contract.sol\":12639:12649  _msgSender */\n      tag_99\n        /* \"contract.sol\":12639:12651  _msgSender() */\n      jump\t// in\n    tag_147:\n        /* \"contract.sol\":12653:12662  recipient */\n      dup5\n        /* \"contract.sol\":12664:12670  amount */\n      dup5\n        /* \"contract.sol\":12629:12638  _transfer */\n      tag_104\n        /* \"contract.sol\":12629:12671  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n    tag_146:\n        /* \"contract.sol\":12684:12688  true */\n      0x01\n        /* \"contract.sol\":12677:12688  return true */\n      swap1\n      pop\n        /* \"contract.sol\":12546:12693  function transfer(address recipient, uint256 amount) external returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contract.sol\":11269:11290  string public _symbol */\n    tag_75:\n      0x05\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_148\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_149\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_148)\n    tag_149:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_150:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_150\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_148:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contract.sol\":11294:11313  string public _name */\n    tag_81:\n      0x06\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_151\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_152\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_151)\n    tag_152:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_153:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_153\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_151:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contract.sol\":12742:12870  function allowance(address owner, address spender) external view returns (uint256) {... */\n    tag_88:\n        /* \"contract.sol\":12816:12823  uint256 */\n      0x00\n        /* \"contract.sol\":12838:12849  _allowances */\n      0x02\n        /* \"contract.sol\":12838:12856  _allowances[owner] */\n      0x00\n        /* \"contract.sol\":12850:12855  owner */\n      dup5\n        /* \"contract.sol\":12838:12856  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contract.sol\":12838:12865  _allowances[owner][spender] */\n      0x00\n        /* \"contract.sol\":12857:12864  spender */\n      dup4\n        /* \"contract.sol\":12838:12865  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contract.sol\":12831:12865  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"contract.sol\":12742:12870  function allowance(address owner, address spender) external view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contract.sol\":10596:10697  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_91:\n        /* \"contract.sol\":9943:9955  _msgSender() */\n      tag_156\n        /* \"contract.sol\":9943:9953  _msgSender */\n      tag_99\n        /* \"contract.sol\":9943:9955  _msgSender() */\n      jump\t// in\n    tag_156:\n        /* \"contract.sol\":9933:9955  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract.sol\":9933:9939  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract.sol\":9933:9955  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contract.sol\":9925:9992  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_157\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_157:\n        /* \"contract.sol\":10664:10692  _transferOwnership(newOwner) */\n      tag_159\n        /* \"contract.sol\":10683:10691  newOwner */\n      dup2\n        /* \"contract.sol\":10664:10682  _transferOwnership */\n      tag_160\n        /* \"contract.sol\":10664:10692  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_159:\n        /* \"contract.sol\":10596:10697  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contract.sol\":3632:3722  function _msgSender() internal view returns (address payable) {... */\n    tag_99:\n        /* \"contract.sol\":3677:3692  address payable */\n      0x00\n        /* \"contract.sol\":3707:3717  msg.sender */\n      caller\n        /* \"contract.sol\":3700:3717  return msg.sender */\n      swap1\n      pop\n        /* \"contract.sol\":3632:3722  function _msgSender() internal view returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"contract.sol\":18050:18364  function _approve(address owner, address spender, uint256 amount) internal {... */\n    tag_100:\n        /* \"contract.sol\":18156:18157  0 */\n      0x00\n        /* \"contract.sol\":18139:18158  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract.sol\":18139:18144  owner */\n      dup4\n        /* \"contract.sol\":18139:18158  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contract.sol\":18131:18199  require(owner != address(0), \"BEP20: approve from the zero address\") */\n      tag_163\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_163:\n        /* \"contract.sol\":18232:18233  0 */\n      0x00\n        /* \"contract.sol\":18213:18234  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract.sol\":18213:18220  spender */\n      dup3\n        /* \"contract.sol\":18213:18234  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contract.sol\":18205:18273  require(spender != address(0), \"BEP20: approve to the zero address\") */\n      tag_164\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_164:\n        /* \"contract.sol\":18310:18316  amount */\n      dup1\n        /* \"contract.sol\":18280:18291  _allowances */\n      0x02\n        /* \"contract.sol\":18280:18298  _allowances[owner] */\n      0x00\n        /* \"contract.sol\":18292:18297  owner */\n      dup6\n        /* \"contract.sol\":18280:18298  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contract.sol\":18280:18307  _allowances[owner][spender] */\n      0x00\n        /* \"contract.sol\":18299:18306  spender */\n      dup5\n        /* \"contract.sol\":18280:18307  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contract.sol\":18280:18316  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contract.sol\":18343:18350  spender */\n      dup2\n        /* \"contract.sol\":18327:18359  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract.sol\":18336:18341  owner */\n      dup4\n        /* \"contract.sol\":18327:18359  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contract.sol\":18352:18358  amount */\n      dup4\n        /* \"contract.sol\":18327:18359  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contract.sol\":18050:18364  function _approve(address owner, address spender, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contract.sol\":16058:16500  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n    tag_104:\n        /* \"contract.sol\":16169:16170  0 */\n      0x00\n        /* \"contract.sol\":16151:16171  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract.sol\":16151:16157  sender */\n      dup4\n        /* \"contract.sol\":16151:16171  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contract.sol\":16143:16213  require(sender != address(0), \"BEP20: transfer from the zero address\") */\n      tag_166\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_166:\n        /* \"contract.sol\":16248:16249  0 */\n      0x00\n        /* \"contract.sol\":16227:16250  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract.sol\":16227:16236  recipient */\n      dup3\n        /* \"contract.sol\":16227:16250  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contract.sol\":16219:16290  require(recipient != address(0), \"BEP20: transfer to the zero address\") */\n      tag_167\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_167:\n        /* \"contract.sol\":16317:16388  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      tag_168\n        /* \"contract.sol\":16339:16345  amount */\n      dup2\n        /* \"contract.sol\":16317:16388  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73\n      0x26\n      swap2\n      codecopy\n        /* \"contract.sol\":16317:16326  _balances */\n      0x01\n        /* \"contract.sol\":16317:16334  _balances[sender] */\n      0x00\n        /* \"contract.sol\":16327:16333  sender */\n      dup8\n        /* \"contract.sol\":16317:16334  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contract.sol\":16317:16338  _balances[sender].sub */\n      tag_109\n      swap1\n        /* \"contract.sol\":16317:16388  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_168:\n        /* \"contract.sol\":16297:16306  _balances */\n      0x01\n        /* \"contract.sol\":16297:16314  _balances[sender] */\n      0x00\n        /* \"contract.sol\":16307:16313  sender */\n      dup6\n        /* \"contract.sol\":16297:16314  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contract.sol\":16297:16388  _balances[sender] = _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contract.sol\":16417:16449  _balances[recipient].add(amount) */\n      tag_169\n        /* \"contract.sol\":16442:16448  amount */\n      dup2\n        /* \"contract.sol\":16417:16426  _balances */\n      0x01\n        /* \"contract.sol\":16417:16437  _balances[recipient] */\n      0x00\n        /* \"contract.sol\":16427:16436  recipient */\n      dup6\n        /* \"contract.sol\":16417:16437  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contract.sol\":16417:16441  _balances[recipient].add */\n      tag_116\n      swap1\n        /* \"contract.sol\":16417:16449  _balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_169:\n        /* \"contract.sol\":16394:16403  _balances */\n      0x01\n        /* \"contract.sol\":16394:16414  _balances[recipient] */\n      0x00\n        /* \"contract.sol\":16404:16413  recipient */\n      dup5\n        /* \"contract.sol\":16394:16414  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contract.sol\":16394:16449  _balances[recipient] = _balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contract.sol\":16477:16486  recipient */\n      dup2\n        /* \"contract.sol\":16460:16495  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract.sol\":16469:16475  sender */\n      dup4\n        /* \"contract.sol\":16460:16495  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contract.sol\":16488:16494  amount */\n      dup4\n        /* \"contract.sol\":16460:16495  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contract.sol\":16058:16500  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contract.sol\":5529:5702  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_109:\n        /* \"contract.sol\":5615:5622  uint256 */\n      0x00\n        /* \"contract.sol\":5643:5644  a */\n      dup4\n        /* \"contract.sol\":5638:5639  b */\n      dup4\n        /* \"contract.sol\":5638:5644  b <= a */\n      gt\n      iszero\n        /* \"contract.sol\":5646:5658  errorMessage */\n      dup3\n        /* \"contract.sol\":5630:5659  require(b <= a, errorMessage) */\n      swap1\n      tag_171\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_172:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_174\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_172)\n    tag_174:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contract.sol\":5630:5659  require(b <= a, errorMessage) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_175\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_175:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_171:\n      pop\n        /* \"contract.sol\":5665:5674  uint256 c */\n      0x00\n        /* \"contract.sol\":5681:5682  b */\n      dup4\n        /* \"contract.sol\":5677:5678  a */\n      dup6\n        /* \"contract.sol\":5677:5682  a - b */\n      sub\n        /* \"contract.sol\":5665:5682  uint256 c = a - b */\n      swap1\n      pop\n        /* \"contract.sol\":5696:5697  c */\n      dup1\n        /* \"contract.sol\":5689:5697  return c */\n      swap2\n      pop\n      pop\n        /* \"contract.sol\":5529:5702  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contract.sol\":4731:4893  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_116:\n        /* \"contract.sol\":4789:4796  uint256 */\n      0x00\n        /* \"contract.sol\":4804:4813  uint256 c */\n      dup1\n        /* \"contract.sol\":4820:4821  b */\n      dup3\n        /* \"contract.sol\":4816:4817  a */\n      dup5\n        /* \"contract.sol\":4816:4821  a + b */\n      add\n        /* \"contract.sol\":4804:4821  uint256 c = a + b */\n      swap1\n      pop\n        /* \"contract.sol\":4840:4841  a */\n      dup4\n        /* \"contract.sol\":4835:4836  c */\n      dup2\n        /* \"contract.sol\":4835:4841  c >= a */\n      lt\n      iszero\n        /* \"contract.sol\":4827:4873  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_177\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_177:\n        /* \"contract.sol\":4887:4888  c */\n      dup1\n        /* \"contract.sol\":4880:4888  return c */\n      swap2\n      pop\n      pop\n        /* \"contract.sol\":4731:4893  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contract.sol\":17329:17653  function _burn(address account, uint256 amount) internal {... */\n    tag_120:\n        /* \"contract.sol\":17419:17420  0 */\n      0x00\n        /* \"contract.sol\":17400:17421  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract.sol\":17400:17407  account */\n      dup3\n        /* \"contract.sol\":17400:17421  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contract.sol\":17392:17459  require(account != address(0), \"BEP20: burn from the zero address\") */\n      tag_179\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_179:\n        /* \"contract.sol\":17487:17555  _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\") */\n      tag_180\n        /* \"contract.sol\":17510:17516  amount */\n      dup2\n        /* \"contract.sol\":17487:17555  _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      data_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032\n      0x22\n      swap2\n      codecopy\n        /* \"contract.sol\":17487:17496  _balances */\n      0x01\n        /* \"contract.sol\":17487:17505  _balances[account] */\n      0x00\n        /* \"contract.sol\":17497:17504  account */\n      dup7\n        /* \"contract.sol\":17487:17505  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contract.sol\":17487:17509  _balances[account].sub */\n      tag_109\n      swap1\n        /* \"contract.sol\":17487:17555  _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_180:\n        /* \"contract.sol\":17466:17475  _balances */\n      0x01\n        /* \"contract.sol\":17466:17484  _balances[account] */\n      0x00\n        /* \"contract.sol\":17476:17483  account */\n      dup5\n        /* \"contract.sol\":17466:17484  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contract.sol\":17466:17555  _balances[account] = _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contract.sol\":17576:17600  _totalSupply.sub(amount) */\n      tag_181\n        /* \"contract.sol\":17593:17599  amount */\n      dup2\n        /* \"contract.sol\":17576:17588  _totalSupply */\n      sload(0x03)\n        /* \"contract.sol\":17576:17592  _totalSupply.sub */\n      tag_182\n      swap1\n        /* \"contract.sol\":17576:17600  _totalSupply.sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_181:\n        /* \"contract.sol\":17561:17573  _totalSupply */\n      0x03\n        /* \"contract.sol\":17561:17600  _totalSupply = _totalSupply.sub(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contract.sol\":17637:17638  0 */\n      0x00\n        /* \"contract.sol\":17611:17648  Transfer(account, address(0), amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract.sol\":17620:17627  account */\n      dup3\n        /* \"contract.sol\":17611:17648  Transfer(account, address(0), amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contract.sol\":17641:17647  amount */\n      dup4\n        /* \"contract.sol\":17611:17648  Transfer(account, address(0), amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contract.sol\":17329:17653  function _burn(address account, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contract.sol\":16750:17034  function _mint(address account, uint256 amount) internal {... */\n    tag_139:\n        /* \"contract.sol\":16840:16841  0 */\n      0x00\n        /* \"contract.sol\":16821:16842  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract.sol\":16821:16828  account */\n      dup3\n        /* \"contract.sol\":16821:16842  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contract.sol\":16813:16878  require(account != address(0), \"BEP20: mint to the zero address\") */\n      tag_184\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x42455032303a206d696e7420746f20746865207a65726f206164647265737300\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_184:\n        /* \"contract.sol\":16900:16924  _totalSupply.add(amount) */\n      tag_185\n        /* \"contract.sol\":16917:16923  amount */\n      dup2\n        /* \"contract.sol\":16900:16912  _totalSupply */\n      sload(0x03)\n        /* \"contract.sol\":16900:16916  _totalSupply.add */\n      tag_116\n      swap1\n        /* \"contract.sol\":16900:16924  _totalSupply.add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_185:\n        /* \"contract.sol\":16885:16897  _totalSupply */\n      0x03\n        /* \"contract.sol\":16885:16924  _totalSupply = _totalSupply.add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contract.sol\":16951:16981  _balances[account].add(amount) */\n      tag_186\n        /* \"contract.sol\":16974:16980  amount */\n      dup2\n        /* \"contract.sol\":16951:16960  _balances */\n      0x01\n        /* \"contract.sol\":16951:16969  _balances[account] */\n      0x00\n        /* \"contract.sol\":16961:16968  account */\n      dup6\n        /* \"contract.sol\":16951:16969  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contract.sol\":16951:16973  _balances[account].add */\n      tag_116\n      swap1\n        /* \"contract.sol\":16951:16981  _balances[account].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_186:\n        /* \"contract.sol\":16930:16939  _balances */\n      0x01\n        /* \"contract.sol\":16930:16948  _balances[account] */\n      0x00\n        /* \"contract.sol\":16940:16947  account */\n      dup5\n        /* \"contract.sol\":16930:16948  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contract.sol\":16930:16981  _balances[account] = _balances[account].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contract.sol\":17013:17020  account */\n      dup2\n        /* \"contract.sol\":16992:17029  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract.sol\":17009:17010  0 */\n      0x00\n        /* \"contract.sol\":16992:17029  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contract.sol\":17022:17028  amount */\n      dup4\n        /* \"contract.sol\":16992:17029  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contract.sol\":16750:17034  function _mint(address account, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contract.sol\":10790:11001  function _transferOwnership(address newOwner) internal {... */\n    tag_160:\n        /* \"contract.sol\":10879:10880  0 */\n      0x00\n        /* \"contract.sol\":10859:10881  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract.sol\":10859:10867  newOwner */\n      dup2\n        /* \"contract.sol\":10859:10881  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contract.sol\":10851:10924  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_188\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_188:\n        /* \"contract.sol\":10964:10972  newOwner */\n      dup1\n        /* \"contract.sol\":10935:10973  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract.sol\":10956:10962  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract.sol\":10935:10973  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contract.sol\":10988:10996  newOwner */\n      dup1\n        /* \"contract.sol\":10979:10985  _owner */\n      0x00\n      dup1\n        /* \"contract.sol\":10979:10996  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contract.sol\":10790:11001  function _transferOwnership(address newOwner) internal {... */\n      pop\n      jump\t// out\n        /* \"contract.sol\":5137:5265  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_182:\n        /* \"contract.sol\":5195:5202  uint256 */\n      0x00\n        /* \"contract.sol\":5217:5260  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_190\n        /* \"contract.sol\":5221:5222  a */\n      dup4\n        /* \"contract.sol\":5224:5225  b */\n      dup4\n        /* \"contract.sol\":5217:5260  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"contract.sol\":5217:5220  sub */\n      tag_109\n        /* \"contract.sol\":5217:5260  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n    tag_190:\n        /* \"contract.sol\":5210:5260  return sub(a, b, \"SafeMath: subtraction overflow\") */\n      swap1\n      pop\n        /* \"contract.sol\":5137:5265  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    stop\n    data_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57 42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4 42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e 42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73 42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2 42455032303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22 42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n    data_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855 42455032303a206275726e2066726f6d20746865207a65726f2061646472657373\n    data_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032 42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365\n    data_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5 42455032303a20617070726f766520746f20746865207a65726f2061646472657373\n\n    auxdata: 0xa265627a7a7231582010816e0a7b418216511c1da886571600109ef0a0bbf1536a121ea7044460c3bf64736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506000620000246200024060201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506040518060400160405280600c81526020017f6b79756e676d696e636f696e0000000000000000000000000000000000000000815250600690805190602001906200010f92919062000248565b506040518060400160405280600381526020017f4b4d430000000000000000000000000000000000000000000000000000000000815250600590805190602001906200015d92919062000248565b506012600460006101000a81548160ff021916908360ff1602179055506af8277896582678ac000000600381905550600354600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6003546040518082815260200191505060405180910390a3620002f7565b600033905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200028b57805160ff1916838001178555620002bc565b82800160010185558215620002bc579182015b82811115620002bb5782518255916020019190600101906200029e565b5b509050620002cb9190620002cf565b5090565b620002f491905b80821115620002f0576000816000905550600101620002d6565b5090565b90565b611e5380620003076000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c8063893d20e8116100ad578063a9059cbb11610071578063a9059cbb146105d7578063b09f12661461063d578063d28d8852146106c0578063dd62ed3e14610743578063f2fde38b146107bb5761012c565b8063893d20e8146104145780638da5cb5b1461045e57806395d89b41146104a8578063a0712d681461052b578063a457c2d7146105715761012c565b806332424aa3116100f457806332424aa3146102e2578063395093511461030657806342966c681461036c57806370a08231146103b2578063715018a61461040a5761012c565b806306fdde0314610131578063095ea7b3146101b457806318160ddd1461021a57806323b872dd14610238578063313ce567146102be575b600080fd5b6101396107ff565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561017957808201518184015260208101905061015e565b50505050905090810190601f1680156101a65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610200600480360360408110156101ca57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108a1565b604051808215151515815260200191505060405180910390f35b6102226108bf565b6040518082815260200191505060405180910390f35b6102a46004803603606081101561024e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108c9565b604051808215151515815260200191505060405180910390f35b6102c66109a2565b604051808260ff1660ff16815260200191505060405180910390f35b6102ea6109b9565b604051808260ff1660ff16815260200191505060405180910390f35b6103526004803603604081101561031c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506109cc565b604051808215151515815260200191505060405180910390f35b6103986004803603602081101561038257600080fd5b8101908080359060200190929190505050610a7f565b604051808215151515815260200191505060405180910390f35b6103f4600480360360208110156103c857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a9b565b6040518082815260200191505060405180910390f35b610412610ae4565b005b61041c610c6c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610466610c7b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104b0610ca4565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104f05780820151818401526020810190506104d5565b50505050905090810190601f16801561051d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6105576004803603602081101561054157600080fd5b8101908080359060200190929190505050610d46565b604051808215151515815260200191505060405180910390f35b6105bd6004803603604081101561058757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e2b565b604051808215151515815260200191505060405180910390f35b610623600480360360408110156105ed57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ef8565b604051808215151515815260200191505060405180910390f35b610645610f16565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561068557808201518184015260208101905061066a565b50505050905090810190601f1680156106b25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6106c8610fb4565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156107085780820151818401526020810190506106ed565b50505050905090810190601f1680156107355780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6107a56004803603604081101561075957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611052565b6040518082815260200191505060405180910390f35b6107fd600480360360208110156107d157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506110d9565b005b606060068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108975780601f1061086c57610100808354040283529160200191610897565b820191906000526020600020905b81548152906001019060200180831161087a57829003601f168201915b5050505050905090565b60006108b56108ae6111ae565b84846111b6565b6001905092915050565b6000600354905090565b60006108d68484846113ad565b610997846108e26111ae565b61099285604051806060016040528060288152602001611d2460289139600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006109486111ae565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116679092919063ffffffff16565b6111b6565b600190509392505050565b6000600460009054906101000a900460ff16905090565b600460009054906101000a900460ff1681565b6000610a756109d96111ae565b84610a7085600260006109ea6111ae565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461172790919063ffffffff16565b6111b6565b6001905092915050565b6000610a92610a8c6111ae565b836117af565b60019050919050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610aec6111ae565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610bad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000610c76610c7b565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060058054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d3c5780601f10610d1157610100808354040283529160200191610d3c565b820191906000526020600020905b815481529060010190602001808311610d1f57829003601f168201915b5050505050905090565b6000610d506111ae565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610e11576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610e22610e1c6111ae565b83611969565b60019050919050565b6000610eee610e386111ae565b84610ee985604051806060016040528060258152602001611d956025913960026000610e626111ae565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116679092919063ffffffff16565b6111b6565b6001905092915050565b6000610f0c610f056111ae565b84846113ad565b6001905092915050565b60058054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610fac5780601f10610f8157610100808354040283529160200191610fac565b820191906000526020600020905b815481529060010190602001808311610f8f57829003601f168201915b505050505081565b60068054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561104a5780601f1061101f5761010080835404028352916020019161104a565b820191906000526020600020905b81548152906001019060200180831161102d57829003601f168201915b505050505081565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6110e16111ae565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146111a2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6111ab81611b26565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561123c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180611cda6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156112c2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180611dfd6022913960400191505060405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611433576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180611cb56025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156114b9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180611d726023913960400191505060405180910390fd5b61152581604051806060016040528060268152602001611d4c60269139600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116679092919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506115ba81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461172790919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290611714576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156116d95780820151818401526020810190506116be565b50505050905090810190601f1680156117065780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b6000808284019050838110156117a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611835576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180611dba6021913960400191505060405180910390fd5b6118a181604051806060016040528060228152602001611ddb60229139600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116679092919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506118f981600354611c6a90919063ffffffff16565b600381905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611a0c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f42455032303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b611a218160035461172790919063ffffffff16565b600381905550611a7981600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461172790919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611bac576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180611cfe6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000611cac83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611667565b90509291505056fe42455032303a207472616e736665722066726f6d20746865207a65726f206164647265737342455032303a20617070726f76652066726f6d20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737342455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a207472616e7366657220746f20746865207a65726f206164647265737342455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f42455032303a206275726e2066726f6d20746865207a65726f206164647265737342455032303a206275726e20616d6f756e7420657863656564732062616c616e636542455032303a20617070726f766520746f20746865207a65726f2061646472657373a265627a7a7231582010816e0a7b418216511c1da886571600109ef0a0bbf1536a121ea7044460c3bf64736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH3 0x24 PUSH3 0x240 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6B79756E676D696E636F696E0000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x6 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x10F SWAP3 SWAP2 SWAP1 PUSH3 0x248 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4B4D430000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x5 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x15D SWAP3 SWAP2 SWAP1 PUSH3 0x248 JUMP JUMPDEST POP PUSH1 0x12 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH11 0xF8277896582678AC000000 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH3 0x2F7 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x28B JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x2BC JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x2BC JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x2BB JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x29E JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x2CB SWAP2 SWAP1 PUSH3 0x2CF JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x2F4 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x2F0 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x2D6 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1E53 DUP1 PUSH3 0x307 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x5D7 JUMPI DUP1 PUSH4 0xB09F1266 EQ PUSH2 0x63D JUMPI DUP1 PUSH4 0xD28D8852 EQ PUSH2 0x6C0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x743 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x7BB JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x414 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x45E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4A8 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x52B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x571 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x32424AA3 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x32424AA3 EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x306 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3B2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x40A JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2BE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x7FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x179 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x15E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1A6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x222 PUSH2 0x8BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x24E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C6 PUSH2 0x9A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EA PUSH2 0x9B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x352 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x31C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x9CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x398 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x382 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x412 PUSH2 0xAE4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x41C PUSH2 0xC6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x466 PUSH2 0xC7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B0 PUSH2 0xCA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4F0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4D5 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x51D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x557 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x541 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5BD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x587 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x623 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xEF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x645 PUSH2 0xF16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x685 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x66A JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x6B2 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C8 PUSH2 0xFB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x708 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x6ED JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x735 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x759 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1052 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7FD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x10D9 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x897 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x86C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x897 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x87A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8B5 PUSH2 0x8AE PUSH2 0x11AE JUMP JUMPDEST DUP5 DUP5 PUSH2 0x11B6 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8D6 DUP5 DUP5 DUP5 PUSH2 0x13AD JUMP JUMPDEST PUSH2 0x997 DUP5 PUSH2 0x8E2 PUSH2 0x11AE JUMP JUMPDEST PUSH2 0x992 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D24 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x948 PUSH2 0x11AE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1667 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x11B6 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA75 PUSH2 0x9D9 PUSH2 0x11AE JUMP JUMPDEST DUP5 PUSH2 0xA70 DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x9EA PUSH2 0x11AE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1727 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x11B6 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA92 PUSH2 0xA8C PUSH2 0x11AE JUMP JUMPDEST DUP4 PUSH2 0x17AF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAEC PUSH2 0x11AE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBAD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC76 PUSH2 0xC7B JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xD3C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD11 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD3C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD1F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD50 PUSH2 0x11AE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE11 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE22 PUSH2 0xE1C PUSH2 0x11AE JUMP JUMPDEST DUP4 PUSH2 0x1969 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEEE PUSH2 0xE38 PUSH2 0x11AE JUMP JUMPDEST DUP5 PUSH2 0xEE9 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D95 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0xE62 PUSH2 0x11AE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1667 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x11B6 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF0C PUSH2 0xF05 PUSH2 0x11AE JUMP JUMPDEST DUP5 DUP5 PUSH2 0x13AD JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xFAC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF81 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xFAC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF8F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x104A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x101F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x104A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x102D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10E1 PUSH2 0x11AE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11AB DUP2 PUSH2 0x1B26 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x123C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1CDA PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x12C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1DFD PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1433 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1CB5 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x14B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1D72 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1525 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D4C PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1667 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x15BA DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1727 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x1714 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16D9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x16BE JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1706 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x17A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1835 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1DBA PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x18A1 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1DDB PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1667 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x18F9 DUP2 PUSH1 0x3 SLOAD PUSH2 0x1C6A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1A0C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A21 DUP2 PUSH1 0x3 SLOAD PUSH2 0x1727 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x1A79 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1727 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1BAC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1CFE PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CAC DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x1667 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E736665722066726F6D20746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x65737342455032303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F206164647265737342455032303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E74206578636565647320616C6C6F77616E63654245 POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636542455032303A207472616E73 PUSH7 0x657220746F2074 PUSH9 0x65207A65726F206164 PUSH5 0x7265737342 GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726F42455032 ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737342455032303A206275726E20616D6F75 PUSH15 0x7420657863656564732062616C616E PUSH4 0x65424550 ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x657373A265627A7A7231582010816E0A7B4182 AND MLOAD SHR SAR 0xA8 DUP7 JUMPI AND STOP LT SWAP15 CREATE LOG0 0xBB CALL MSTORE8 PUSH11 0x121EA7044460C3BF64736F PUSH13 0x63430005100032000000000000 ",
							"sourceMap": "11005:7744:0:-;;;11318:234;8:9:-1;5:2;;;30:1;27;20:12;5:2;11318:234:0;9564:17;9584:12;:10;;;:12;;:::i;:::-;9564:32;;9611:9;9602:6;;:18;;;;;;;;;;;;;;;;;;9664:9;9631:43;;9660:1;9631:43;;;;;;;;;;;;9534:145;11345:22;;;;;;;;;;;;;;;;;:5;:22;;;;;;;;;;;;:::i;:::-;;11373:15;;;;;;;;;;;;;;;;;:7;:15;;;;;;;;;;;;:::i;:::-;;11406:2;11394:9;;:14;;;;;;;;;;;;;;;;;;11429:18;11414:12;:33;;;;11477:12;;11453:9;:21;11463:10;11453:21;;;;;;;;;;;;;;;:36;;;;11522:10;11501:46;;11518:1;11501:46;;;11534:12;;11501:46;;;;;;;;;;;;;;;;;;11005:7744;;3632:90;3677:15;3707:10;3700:17;;3632:90;:::o;11005:7744::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061012c5760003560e01c8063893d20e8116100ad578063a9059cbb11610071578063a9059cbb146105d7578063b09f12661461063d578063d28d8852146106c0578063dd62ed3e14610743578063f2fde38b146107bb5761012c565b8063893d20e8146104145780638da5cb5b1461045e57806395d89b41146104a8578063a0712d681461052b578063a457c2d7146105715761012c565b806332424aa3116100f457806332424aa3146102e2578063395093511461030657806342966c681461036c57806370a08231146103b2578063715018a61461040a5761012c565b806306fdde0314610131578063095ea7b3146101b457806318160ddd1461021a57806323b872dd14610238578063313ce567146102be575b600080fd5b6101396107ff565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561017957808201518184015260208101905061015e565b50505050905090810190601f1680156101a65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610200600480360360408110156101ca57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108a1565b604051808215151515815260200191505060405180910390f35b6102226108bf565b6040518082815260200191505060405180910390f35b6102a46004803603606081101561024e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108c9565b604051808215151515815260200191505060405180910390f35b6102c66109a2565b604051808260ff1660ff16815260200191505060405180910390f35b6102ea6109b9565b604051808260ff1660ff16815260200191505060405180910390f35b6103526004803603604081101561031c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506109cc565b604051808215151515815260200191505060405180910390f35b6103986004803603602081101561038257600080fd5b8101908080359060200190929190505050610a7f565b604051808215151515815260200191505060405180910390f35b6103f4600480360360208110156103c857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a9b565b6040518082815260200191505060405180910390f35b610412610ae4565b005b61041c610c6c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610466610c7b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104b0610ca4565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104f05780820151818401526020810190506104d5565b50505050905090810190601f16801561051d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6105576004803603602081101561054157600080fd5b8101908080359060200190929190505050610d46565b604051808215151515815260200191505060405180910390f35b6105bd6004803603604081101561058757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e2b565b604051808215151515815260200191505060405180910390f35b610623600480360360408110156105ed57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ef8565b604051808215151515815260200191505060405180910390f35b610645610f16565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561068557808201518184015260208101905061066a565b50505050905090810190601f1680156106b25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6106c8610fb4565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156107085780820151818401526020810190506106ed565b50505050905090810190601f1680156107355780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6107a56004803603604081101561075957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611052565b6040518082815260200191505060405180910390f35b6107fd600480360360208110156107d157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506110d9565b005b606060068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108975780601f1061086c57610100808354040283529160200191610897565b820191906000526020600020905b81548152906001019060200180831161087a57829003601f168201915b5050505050905090565b60006108b56108ae6111ae565b84846111b6565b6001905092915050565b6000600354905090565b60006108d68484846113ad565b610997846108e26111ae565b61099285604051806060016040528060288152602001611d2460289139600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006109486111ae565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116679092919063ffffffff16565b6111b6565b600190509392505050565b6000600460009054906101000a900460ff16905090565b600460009054906101000a900460ff1681565b6000610a756109d96111ae565b84610a7085600260006109ea6111ae565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461172790919063ffffffff16565b6111b6565b6001905092915050565b6000610a92610a8c6111ae565b836117af565b60019050919050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610aec6111ae565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610bad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000610c76610c7b565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060058054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d3c5780601f10610d1157610100808354040283529160200191610d3c565b820191906000526020600020905b815481529060010190602001808311610d1f57829003601f168201915b5050505050905090565b6000610d506111ae565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610e11576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610e22610e1c6111ae565b83611969565b60019050919050565b6000610eee610e386111ae565b84610ee985604051806060016040528060258152602001611d956025913960026000610e626111ae565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116679092919063ffffffff16565b6111b6565b6001905092915050565b6000610f0c610f056111ae565b84846113ad565b6001905092915050565b60058054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610fac5780601f10610f8157610100808354040283529160200191610fac565b820191906000526020600020905b815481529060010190602001808311610f8f57829003601f168201915b505050505081565b60068054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561104a5780601f1061101f5761010080835404028352916020019161104a565b820191906000526020600020905b81548152906001019060200180831161102d57829003601f168201915b505050505081565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6110e16111ae565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146111a2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6111ab81611b26565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561123c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180611cda6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156112c2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180611dfd6022913960400191505060405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611433576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180611cb56025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156114b9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180611d726023913960400191505060405180910390fd5b61152581604051806060016040528060268152602001611d4c60269139600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116679092919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506115ba81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461172790919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290611714576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156116d95780820151818401526020810190506116be565b50505050905090810190601f1680156117065780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b6000808284019050838110156117a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611835576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180611dba6021913960400191505060405180910390fd5b6118a181604051806060016040528060228152602001611ddb60229139600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116679092919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506118f981600354611c6a90919063ffffffff16565b600381905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611a0c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f42455032303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b611a218160035461172790919063ffffffff16565b600381905550611a7981600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461172790919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611bac576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180611cfe6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000611cac83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611667565b90509291505056fe42455032303a207472616e736665722066726f6d20746865207a65726f206164647265737342455032303a20617070726f76652066726f6d20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737342455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a207472616e7366657220746f20746865207a65726f206164647265737342455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f42455032303a206275726e2066726f6d20746865207a65726f206164647265737342455032303a206275726e20616d6f756e7420657863656564732062616c616e636542455032303a20617070726f766520746f20746865207a65726f2061646472657373a265627a7a7231582010816e0a7b418216511c1da886571600109ef0a0bbf1536a121ea7044460c3bf64736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x5D7 JUMPI DUP1 PUSH4 0xB09F1266 EQ PUSH2 0x63D JUMPI DUP1 PUSH4 0xD28D8852 EQ PUSH2 0x6C0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x743 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x7BB JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x414 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x45E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4A8 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x52B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x571 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x32424AA3 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x32424AA3 EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x306 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3B2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x40A JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2BE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x7FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x179 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x15E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1A6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x222 PUSH2 0x8BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x24E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C6 PUSH2 0x9A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EA PUSH2 0x9B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x352 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x31C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x9CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x398 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x382 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x412 PUSH2 0xAE4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x41C PUSH2 0xC6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x466 PUSH2 0xC7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B0 PUSH2 0xCA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4F0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4D5 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x51D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x557 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x541 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5BD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x587 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x623 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xEF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x645 PUSH2 0xF16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x685 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x66A JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x6B2 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C8 PUSH2 0xFB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x708 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x6ED JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x735 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x759 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1052 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7FD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x10D9 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x897 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x86C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x897 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x87A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8B5 PUSH2 0x8AE PUSH2 0x11AE JUMP JUMPDEST DUP5 DUP5 PUSH2 0x11B6 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8D6 DUP5 DUP5 DUP5 PUSH2 0x13AD JUMP JUMPDEST PUSH2 0x997 DUP5 PUSH2 0x8E2 PUSH2 0x11AE JUMP JUMPDEST PUSH2 0x992 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D24 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x948 PUSH2 0x11AE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1667 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x11B6 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA75 PUSH2 0x9D9 PUSH2 0x11AE JUMP JUMPDEST DUP5 PUSH2 0xA70 DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x9EA PUSH2 0x11AE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1727 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x11B6 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA92 PUSH2 0xA8C PUSH2 0x11AE JUMP JUMPDEST DUP4 PUSH2 0x17AF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAEC PUSH2 0x11AE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBAD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC76 PUSH2 0xC7B JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xD3C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD11 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD3C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD1F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD50 PUSH2 0x11AE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE11 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE22 PUSH2 0xE1C PUSH2 0x11AE JUMP JUMPDEST DUP4 PUSH2 0x1969 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEEE PUSH2 0xE38 PUSH2 0x11AE JUMP JUMPDEST DUP5 PUSH2 0xEE9 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D95 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0xE62 PUSH2 0x11AE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1667 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x11B6 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF0C PUSH2 0xF05 PUSH2 0x11AE JUMP JUMPDEST DUP5 DUP5 PUSH2 0x13AD JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xFAC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF81 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xFAC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF8F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x104A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x101F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x104A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x102D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10E1 PUSH2 0x11AE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11AB DUP2 PUSH2 0x1B26 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x123C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1CDA PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x12C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1DFD PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1433 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1CB5 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x14B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1D72 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1525 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D4C PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1667 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x15BA DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1727 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x1714 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16D9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x16BE JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1706 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x17A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1835 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1DBA PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x18A1 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1DDB PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1667 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x18F9 DUP2 PUSH1 0x3 SLOAD PUSH2 0x1C6A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1A0C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A21 DUP2 PUSH1 0x3 SLOAD PUSH2 0x1727 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x1A79 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1727 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1BAC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1CFE PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CAC DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x1667 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E736665722066726F6D20746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x65737342455032303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F206164647265737342455032303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E74206578636565647320616C6C6F77616E63654245 POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636542455032303A207472616E73 PUSH7 0x657220746F2074 PUSH9 0x65207A65726F206164 PUSH5 0x7265737342 GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726F42455032 ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737342455032303A206275726E20616D6F75 PUSH15 0x7420657863656564732062616C616E PUSH4 0x65424550 ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x657373A265627A7A7231582010816E0A7B4182 AND MLOAD SHR SAR 0xA8 DUP7 JUMPI AND STOP LT SWAP15 CREATE LOG0 0xBB CALL MSTORE8 PUSH11 0x121EA7044460C3BF64736F PUSH13 0x63430005100032000000000000 ",
							"sourceMap": "11005:7744:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11005:7744:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11996:77;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11996:77:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12991:141;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12991:141:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;12124:85;;;:::i;:::-;;;;;;;;;;;;;;;;;;;13563:288;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13563:288:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;11738:77;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;11243:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;14219:197;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14219:197:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;15507:107;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15507:107:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;12258:104;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12258:104:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10330:127;;;:::i;:::-;;11607:77;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;9747:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;11867:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11867:81:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15310:117;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15310:117:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;14872:248;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14872:248:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;12546:147;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12546:147:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;11269:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11269:21:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11294:19;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11294:19:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12742:128;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12742:128:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10596:101;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10596:101:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;11996:77;12035:13;12063:5;12056:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11996:77;:::o;12991:141::-;13059:4;13071:39;13080:12;:10;:12::i;:::-;13094:7;13103:6;13071:8;:39::i;:::-;13123:4;13116:11;;12991:141;;;;:::o;12124:85::-;12170:7;12192:12;;12185:19;;12124:85;:::o;13563:288::-;13654:4;13666:36;13676:6;13684:9;13695:6;13666:9;:36::i;:::-;13708:121;13717:6;13725:12;:10;:12::i;:::-;13739:89;13777:6;13739:89;;;;;;;;;;;;;;;;;:11;:19;13751:6;13739:19;;;;;;;;;;;;;;;:33;13759:12;:10;:12::i;:::-;13739:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;13708:8;:121::i;:::-;13842:4;13835:11;;13563:288;;;;;:::o;11738:77::-;11781:5;11801:9;;;;;;;;;;;11794:16;;11738:77;:::o;11243:22::-;;;;;;;;;;;;;:::o;14219:197::-;14299:4;14311:83;14320:12;:10;:12::i;:::-;14334:7;14343:50;14382:10;14343:11;:25;14355:12;:10;:12::i;:::-;14343:25;;;;;;;;;;;;;;;:34;14369:7;14343:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;14311:8;:83::i;:::-;14407:4;14400:11;;14219:197;;;;:::o;15507:107::-;15553:4;15565:27;15571:12;:10;:12::i;:::-;15585:6;15565:5;:27::i;:::-;15605:4;15598:11;;15507:107;;;:::o;12258:104::-;12317:7;12339:9;:18;12349:7;12339:18;;;;;;;;;;;;;;;;12332:25;;12258:104;;;:::o;10330:127::-;9943:12;:10;:12::i;:::-;9933:22;;:6;;;;;;;;;;;:22;;;9925:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10424:1;10387:40;;10408:6;;;;;;;;;;;10387:40;;;;;;;;;;;;10450:1;10433:6;;:19;;;;;;;;;;;;;;;;;;10330:127::o;11607:77::-;11650:7;11672;:5;:7::i;:::-;11665:14;;11607:77;:::o;9747:71::-;9785:7;9807:6;;;;;;;;;;;9800:13;;9747:71;:::o;11867:81::-;11908:13;11936:7;11929:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11867:81;:::o;15310:117::-;15366:4;9943:12;:10;:12::i;:::-;9933:22;;:6;;;;;;;;;;;:22;;;9925:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15378:27;15384:12;:10;:12::i;:::-;15398:6;15378:5;:27::i;:::-;15418:4;15411:11;;15310:117;;;:::o;14872:248::-;14957:4;14969:129;14978:12;:10;:12::i;:::-;14992:7;15001:96;15040:15;15001:96;;;;;;;;;;;;;;;;;:11;:25;15013:12;:10;:12::i;:::-;15001:25;;;;;;;;;;;;;;;:34;15027:7;15001:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;14969:8;:129::i;:::-;15111:4;15104:11;;14872:248;;;;:::o;12546:147::-;12617:4;12629:42;12639:12;:10;:12::i;:::-;12653:9;12664:6;12629:9;:42::i;:::-;12684:4;12677:11;;12546:147;;;;:::o;11269:21::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;11294:19::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;12742:128::-;12816:7;12838:11;:18;12850:5;12838:18;;;;;;;;;;;;;;;:27;12857:7;12838:27;;;;;;;;;;;;;;;;12831:34;;12742:128;;;;:::o;10596:101::-;9943:12;:10;:12::i;:::-;9933:22;;:6;;;;;;;;;;;:22;;;9925:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10664:28;10683:8;10664:18;:28::i;:::-;10596:101;:::o;3632:90::-;3677:15;3707:10;3700:17;;3632:90;:::o;18050:314::-;18156:1;18139:19;;:5;:19;;;;18131:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18232:1;18213:21;;:7;:21;;;;18205:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18310:6;18280:11;:18;18292:5;18280:18;;;;;;;;;;;;;;;:27;18299:7;18280:27;;;;;;;;;;;;;;;:36;;;;18343:7;18327:32;;18336:5;18327:32;;;18352:6;18327:32;;;;;;;;;;;;;;;;;;18050:314;;;:::o;16058:442::-;16169:1;16151:20;;:6;:20;;;;16143:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16248:1;16227:23;;:9;:23;;;;16219:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16317;16339:6;16317:71;;;;;;;;;;;;;;;;;:9;:17;16327:6;16317:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;16297:9;:17;16307:6;16297:17;;;;;;;;;;;;;;;:91;;;;16417:32;16442:6;16417:9;:20;16427:9;16417:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;16394:9;:20;16404:9;16394:20;;;;;;;;;;;;;;;:55;;;;16477:9;16460:35;;16469:6;16460:35;;;16488:6;16460:35;;;;;;;;;;;;;;;;;;16058:442;;;:::o;5529:173::-;5615:7;5643:1;5638;:6;;5646:12;5630:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5630:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5665:9;5681:1;5677;:5;5665:17;;5696:1;5689:8;;;5529:173;;;;;:::o;4731:162::-;4789:7;4804:9;4820:1;4816;:5;4804:17;;4840:1;4835;:6;;4827:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4887:1;4880:8;;;4731:162;;;;:::o;17329:324::-;17419:1;17400:21;;:7;:21;;;;17392:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17487:68;17510:6;17487:68;;;;;;;;;;;;;;;;;:9;:18;17497:7;17487:18;;;;;;;;;;;;;;;;:22;;:68;;;;;:::i;:::-;17466:9;:18;17476:7;17466:18;;;;;;;;;;;;;;;:89;;;;17576:24;17593:6;17576:12;;:16;;:24;;;;:::i;:::-;17561:12;:39;;;;17637:1;17611:37;;17620:7;17611:37;;;17641:6;17611:37;;;;;;;;;;;;;;;;;;17329:324;;:::o;16750:284::-;16840:1;16821:21;;:7;:21;;;;16813:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16900:24;16917:6;16900:12;;:16;;:24;;;;:::i;:::-;16885:12;:39;;;;16951:30;16974:6;16951:9;:18;16961:7;16951:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;16930:9;:18;16940:7;16930:18;;;;;;;;;;;;;;;:51;;;;17013:7;16992:37;;17009:1;16992:37;;;17022:6;16992:37;;;;;;;;;;;;;;;;;;16750:284;;:::o;10790:211::-;10879:1;10859:22;;:8;:22;;;;10851:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10964:8;10935:38;;10956:6;;;;;;;;;;;10935:38;;;;;;;;;;;;10988:8;10979:6;;:17;;;;;;;;;;;;;;;;;;10790:211;:::o;5137:128::-;5195:7;5217:43;5221:1;5224;5217:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;5210:50;;5137:128;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1552600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_decimals()": "1076",
								"_name()": "infinite",
								"_symbol()": "infinite",
								"allowance(address,address)": "1409",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1285",
								"burn(uint256)": "infinite",
								"decimals()": "1173",
								"decreaseAllowance(address,uint256)": "infinite",
								"getOwner()": "1119",
								"increaseAllowance(address,uint256)": "infinite",
								"mint(uint256)": "infinite",
								"name()": "infinite",
								"owner()": "1106",
								"renounceOwnership()": "24408",
								"symbol()": "infinite",
								"totalSupply()": "1081",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_burnFrom(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 11005,
									"end": 18749,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "MSTORE"
								},
								{
									"begin": 11318,
									"end": 11552,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 11318,
									"end": 11552,
									"name": "POP"
								},
								{
									"begin": 9564,
									"end": 9581,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 9584,
									"end": 9596,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 9584,
									"end": 9594,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 9584,
									"end": 9594,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 9584,
									"end": 9594,
									"name": "SHL"
								},
								{
									"begin": 9584,
									"end": 9596,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 9584,
									"end": 9596,
									"name": "SHR"
								},
								{
									"begin": 9584,
									"end": 9596,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 9584,
									"end": 9596,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 9584,
									"end": 9596,
									"name": "JUMPDEST"
								},
								{
									"begin": 9564,
									"end": 9596,
									"name": "SWAP1"
								},
								{
									"begin": 9564,
									"end": 9596,
									"name": "POP"
								},
								{
									"begin": 9611,
									"end": 9620,
									"name": "DUP1"
								},
								{
									"begin": 9602,
									"end": 9608,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 9602,
									"end": 9608,
									"name": "DUP1"
								},
								{
									"begin": 9602,
									"end": 9620,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 9602,
									"end": 9620,
									"name": "EXP"
								},
								{
									"begin": 9602,
									"end": 9620,
									"name": "DUP2"
								},
								{
									"begin": 9602,
									"end": 9620,
									"name": "SLOAD"
								},
								{
									"begin": 9602,
									"end": 9620,
									"name": "DUP2"
								},
								{
									"begin": 9602,
									"end": 9620,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9602,
									"end": 9620,
									"name": "MUL"
								},
								{
									"begin": 9602,
									"end": 9620,
									"name": "NOT"
								},
								{
									"begin": 9602,
									"end": 9620,
									"name": "AND"
								},
								{
									"begin": 9602,
									"end": 9620,
									"name": "SWAP1"
								},
								{
									"begin": 9602,
									"end": 9620,
									"name": "DUP4"
								},
								{
									"begin": 9602,
									"end": 9620,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9602,
									"end": 9620,
									"name": "AND"
								},
								{
									"begin": 9602,
									"end": 9620,
									"name": "MUL"
								},
								{
									"begin": 9602,
									"end": 9620,
									"name": "OR"
								},
								{
									"begin": 9602,
									"end": 9620,
									"name": "SWAP1"
								},
								{
									"begin": 9602,
									"end": 9620,
									"name": "SSTORE"
								},
								{
									"begin": 9602,
									"end": 9620,
									"name": "POP"
								},
								{
									"begin": 9664,
									"end": 9673,
									"name": "DUP1"
								},
								{
									"begin": 9631,
									"end": 9674,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9631,
									"end": 9674,
									"name": "AND"
								},
								{
									"begin": 9660,
									"end": 9661,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 9631,
									"end": 9674,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9631,
									"end": 9674,
									"name": "AND"
								},
								{
									"begin": 9631,
									"end": 9674,
									"name": "PUSH",
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 9631,
									"end": 9674,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 9631,
									"end": 9674,
									"name": "MLOAD"
								},
								{
									"begin": 9631,
									"end": 9674,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 9631,
									"end": 9674,
									"name": "MLOAD"
								},
								{
									"begin": 9631,
									"end": 9674,
									"name": "DUP1"
								},
								{
									"begin": 9631,
									"end": 9674,
									"name": "SWAP2"
								},
								{
									"begin": 9631,
									"end": 9674,
									"name": "SUB"
								},
								{
									"begin": 9631,
									"end": 9674,
									"name": "SWAP1"
								},
								{
									"begin": 9631,
									"end": 9674,
									"name": "LOG3"
								},
								{
									"begin": 9534,
									"end": 9679,
									"name": "POP"
								},
								{
									"begin": 11345,
									"end": 11367,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11345,
									"end": 11367,
									"name": "MLOAD"
								},
								{
									"begin": 11345,
									"end": 11367,
									"name": "DUP1"
								},
								{
									"begin": 11345,
									"end": 11367,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11345,
									"end": 11367,
									"name": "ADD"
								},
								{
									"begin": 11345,
									"end": 11367,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11345,
									"end": 11367,
									"name": "MSTORE"
								},
								{
									"begin": 11345,
									"end": 11367,
									"name": "DUP1"
								},
								{
									"begin": 11345,
									"end": 11367,
									"name": "PUSH",
									"value": "C"
								},
								{
									"begin": 11345,
									"end": 11367,
									"name": "DUP2"
								},
								{
									"begin": 11345,
									"end": 11367,
									"name": "MSTORE"
								},
								{
									"begin": 11345,
									"end": 11367,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11345,
									"end": 11367,
									"name": "ADD"
								},
								{
									"begin": 11345,
									"end": 11367,
									"name": "PUSH",
									"value": "6B79756E676D696E636F696E0000000000000000000000000000000000000000"
								},
								{
									"begin": 11345,
									"end": 11367,
									"name": "DUP2"
								},
								{
									"begin": 11345,
									"end": 11367,
									"name": "MSTORE"
								},
								{
									"begin": 11345,
									"end": 11367,
									"name": "POP"
								},
								{
									"begin": 11345,
									"end": 11350,
									"name": "PUSH",
									"value": "6"
								},
								{
									"begin": 11345,
									"end": 11367,
									"name": "SWAP1"
								},
								{
									"begin": 11345,
									"end": 11367,
									"name": "DUP1"
								},
								{
									"begin": 11345,
									"end": 11367,
									"name": "MLOAD"
								},
								{
									"begin": 11345,
									"end": 11367,
									"name": "SWAP1"
								},
								{
									"begin": 11345,
									"end": 11367,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11345,
									"end": 11367,
									"name": "ADD"
								},
								{
									"begin": 11345,
									"end": 11367,
									"name": "SWAP1"
								},
								{
									"begin": 11345,
									"end": 11367,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 11345,
									"end": 11367,
									"name": "SWAP3"
								},
								{
									"begin": 11345,
									"end": 11367,
									"name": "SWAP2"
								},
								{
									"begin": 11345,
									"end": 11367,
									"name": "SWAP1"
								},
								{
									"begin": 11345,
									"end": 11367,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 11345,
									"end": 11367,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 11345,
									"end": 11367,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 11345,
									"end": 11367,
									"name": "JUMPDEST"
								},
								{
									"begin": 11345,
									"end": 11367,
									"name": "POP"
								},
								{
									"begin": 11373,
									"end": 11388,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11373,
									"end": 11388,
									"name": "MLOAD"
								},
								{
									"begin": 11373,
									"end": 11388,
									"name": "DUP1"
								},
								{
									"begin": 11373,
									"end": 11388,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11373,
									"end": 11388,
									"name": "ADD"
								},
								{
									"begin": 11373,
									"end": 11388,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11373,
									"end": 11388,
									"name": "MSTORE"
								},
								{
									"begin": 11373,
									"end": 11388,
									"name": "DUP1"
								},
								{
									"begin": 11373,
									"end": 11388,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 11373,
									"end": 11388,
									"name": "DUP2"
								},
								{
									"begin": 11373,
									"end": 11388,
									"name": "MSTORE"
								},
								{
									"begin": 11373,
									"end": 11388,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11373,
									"end": 11388,
									"name": "ADD"
								},
								{
									"begin": 11373,
									"end": 11388,
									"name": "PUSH",
									"value": "4B4D430000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11373,
									"end": 11388,
									"name": "DUP2"
								},
								{
									"begin": 11373,
									"end": 11388,
									"name": "MSTORE"
								},
								{
									"begin": 11373,
									"end": 11388,
									"name": "POP"
								},
								{
									"begin": 11373,
									"end": 11380,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 11373,
									"end": 11388,
									"name": "SWAP1"
								},
								{
									"begin": 11373,
									"end": 11388,
									"name": "DUP1"
								},
								{
									"begin": 11373,
									"end": 11388,
									"name": "MLOAD"
								},
								{
									"begin": 11373,
									"end": 11388,
									"name": "SWAP1"
								},
								{
									"begin": 11373,
									"end": 11388,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11373,
									"end": 11388,
									"name": "ADD"
								},
								{
									"begin": 11373,
									"end": 11388,
									"name": "SWAP1"
								},
								{
									"begin": 11373,
									"end": 11388,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 11373,
									"end": 11388,
									"name": "SWAP3"
								},
								{
									"begin": 11373,
									"end": 11388,
									"name": "SWAP2"
								},
								{
									"begin": 11373,
									"end": 11388,
									"name": "SWAP1"
								},
								{
									"begin": 11373,
									"end": 11388,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 11373,
									"end": 11388,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 11373,
									"end": 11388,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 11373,
									"end": 11388,
									"name": "JUMPDEST"
								},
								{
									"begin": 11373,
									"end": 11388,
									"name": "POP"
								},
								{
									"begin": 11406,
									"end": 11408,
									"name": "PUSH",
									"value": "12"
								},
								{
									"begin": 11394,
									"end": 11403,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 11394,
									"end": 11403,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11394,
									"end": 11408,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 11394,
									"end": 11408,
									"name": "EXP"
								},
								{
									"begin": 11394,
									"end": 11408,
									"name": "DUP2"
								},
								{
									"begin": 11394,
									"end": 11408,
									"name": "SLOAD"
								},
								{
									"begin": 11394,
									"end": 11408,
									"name": "DUP2"
								},
								{
									"begin": 11394,
									"end": 11408,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 11394,
									"end": 11408,
									"name": "MUL"
								},
								{
									"begin": 11394,
									"end": 11408,
									"name": "NOT"
								},
								{
									"begin": 11394,
									"end": 11408,
									"name": "AND"
								},
								{
									"begin": 11394,
									"end": 11408,
									"name": "SWAP1"
								},
								{
									"begin": 11394,
									"end": 11408,
									"name": "DUP4"
								},
								{
									"begin": 11394,
									"end": 11408,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 11394,
									"end": 11408,
									"name": "AND"
								},
								{
									"begin": 11394,
									"end": 11408,
									"name": "MUL"
								},
								{
									"begin": 11394,
									"end": 11408,
									"name": "OR"
								},
								{
									"begin": 11394,
									"end": 11408,
									"name": "SWAP1"
								},
								{
									"begin": 11394,
									"end": 11408,
									"name": "SSTORE"
								},
								{
									"begin": 11394,
									"end": 11408,
									"name": "POP"
								},
								{
									"begin": 11429,
									"end": 11447,
									"name": "PUSH",
									"value": "F8277896582678AC000000"
								},
								{
									"begin": 11414,
									"end": 11426,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 11414,
									"end": 11447,
									"name": "DUP2"
								},
								{
									"begin": 11414,
									"end": 11447,
									"name": "SWAP1"
								},
								{
									"begin": 11414,
									"end": 11447,
									"name": "SSTORE"
								},
								{
									"begin": 11414,
									"end": 11447,
									"name": "POP"
								},
								{
									"begin": 11477,
									"end": 11489,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 11477,
									"end": 11489,
									"name": "SLOAD"
								},
								{
									"begin": 11453,
									"end": 11462,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11453,
									"end": 11474,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11463,
									"end": 11473,
									"name": "CALLER"
								},
								{
									"begin": 11453,
									"end": 11474,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11453,
									"end": 11474,
									"name": "AND"
								},
								{
									"begin": 11453,
									"end": 11474,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11453,
									"end": 11474,
									"name": "AND"
								},
								{
									"begin": 11453,
									"end": 11474,
									"name": "DUP2"
								},
								{
									"begin": 11453,
									"end": 11474,
									"name": "MSTORE"
								},
								{
									"begin": 11453,
									"end": 11474,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11453,
									"end": 11474,
									"name": "ADD"
								},
								{
									"begin": 11453,
									"end": 11474,
									"name": "SWAP1"
								},
								{
									"begin": 11453,
									"end": 11474,
									"name": "DUP2"
								},
								{
									"begin": 11453,
									"end": 11474,
									"name": "MSTORE"
								},
								{
									"begin": 11453,
									"end": 11474,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11453,
									"end": 11474,
									"name": "ADD"
								},
								{
									"begin": 11453,
									"end": 11474,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11453,
									"end": 11474,
									"name": "KECCAK256"
								},
								{
									"begin": 11453,
									"end": 11489,
									"name": "DUP2"
								},
								{
									"begin": 11453,
									"end": 11489,
									"name": "SWAP1"
								},
								{
									"begin": 11453,
									"end": 11489,
									"name": "SSTORE"
								},
								{
									"begin": 11453,
									"end": 11489,
									"name": "POP"
								},
								{
									"begin": 11522,
									"end": 11532,
									"name": "CALLER"
								},
								{
									"begin": 11501,
									"end": 11547,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11501,
									"end": 11547,
									"name": "AND"
								},
								{
									"begin": 11518,
									"end": 11519,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11501,
									"end": 11547,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11501,
									"end": 11547,
									"name": "AND"
								},
								{
									"begin": 11501,
									"end": 11547,
									"name": "PUSH",
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 11534,
									"end": 11546,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 11534,
									"end": 11546,
									"name": "SLOAD"
								},
								{
									"begin": 11501,
									"end": 11547,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11501,
									"end": 11547,
									"name": "MLOAD"
								},
								{
									"begin": 11501,
									"end": 11547,
									"name": "DUP1"
								},
								{
									"begin": 11501,
									"end": 11547,
									"name": "DUP3"
								},
								{
									"begin": 11501,
									"end": 11547,
									"name": "DUP2"
								},
								{
									"begin": 11501,
									"end": 11547,
									"name": "MSTORE"
								},
								{
									"begin": 11501,
									"end": 11547,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11501,
									"end": 11547,
									"name": "ADD"
								},
								{
									"begin": 11501,
									"end": 11547,
									"name": "SWAP2"
								},
								{
									"begin": 11501,
									"end": 11547,
									"name": "POP"
								},
								{
									"begin": 11501,
									"end": 11547,
									"name": "POP"
								},
								{
									"begin": 11501,
									"end": 11547,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11501,
									"end": 11547,
									"name": "MLOAD"
								},
								{
									"begin": 11501,
									"end": 11547,
									"name": "DUP1"
								},
								{
									"begin": 11501,
									"end": 11547,
									"name": "SWAP2"
								},
								{
									"begin": 11501,
									"end": 11547,
									"name": "SUB"
								},
								{
									"begin": 11501,
									"end": 11547,
									"name": "SWAP1"
								},
								{
									"begin": 11501,
									"end": 11547,
									"name": "LOG3"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "JUMP"
								},
								{
									"begin": 3632,
									"end": 3722,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 3632,
									"end": 3722,
									"name": "JUMPDEST"
								},
								{
									"begin": 3677,
									"end": 3692,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 3707,
									"end": 3717,
									"name": "CALLER"
								},
								{
									"begin": 3700,
									"end": 3717,
									"name": "SWAP1"
								},
								{
									"begin": 3700,
									"end": 3717,
									"name": "POP"
								},
								{
									"begin": 3632,
									"end": 3722,
									"name": "SWAP1"
								},
								{
									"begin": 3632,
									"end": 3722,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "JUMPDEST"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "DUP3"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "DUP1"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "SLOAD"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "DUP2"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "AND"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "ISZERO"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "MUL"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "SUB"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "AND"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "SWAP1"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "DIV"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "SWAP1"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "MSTORE"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "KECCAK256"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "SWAP1"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "ADD"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "SWAP1"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "DIV"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "DUP2"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "ADD"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "SWAP3"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "DUP3"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "LT"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "PUSH [tag]",
									"value": "16"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "JUMPI"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "DUP1"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "MLOAD"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "NOT"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "AND"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "DUP4"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "DUP1"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "ADD"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "OR"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "DUP6"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "SSTORE"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "JUMP"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "tag",
									"value": "16"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "JUMPDEST"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "DUP3"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "DUP1"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "ADD"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "ADD"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "DUP6"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "SSTORE"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "DUP3"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "ISZERO"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "JUMPI"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "SWAP2"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "DUP3"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "ADD"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "tag",
									"value": "17"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "JUMPDEST"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "DUP3"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "DUP2"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "GT"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "ISZERO"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "PUSH [tag]",
									"value": "18"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "JUMPI"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "DUP3"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "MLOAD"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "DUP3"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "SSTORE"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "SWAP2"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "ADD"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "SWAP2"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "SWAP1"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "ADD"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "SWAP1"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "PUSH [tag]",
									"value": "17"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "JUMP"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "tag",
									"value": "18"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "JUMPDEST"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "tag",
									"value": "15"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "JUMPDEST"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "POP"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "SWAP1"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "POP"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "PUSH [tag]",
									"value": "19"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "SWAP2"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "SWAP1"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "PUSH [tag]",
									"value": "20"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "tag",
									"value": "19"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "JUMPDEST"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "POP"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "SWAP1"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "tag",
									"value": "20"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "JUMPDEST"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "PUSH [tag]",
									"value": "21"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "SWAP2"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "SWAP1"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "tag",
									"value": "22"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "JUMPDEST"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "DUP1"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "DUP3"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "GT"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "ISZERO"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "PUSH [tag]",
									"value": "23"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "JUMPI"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "DUP2"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "SWAP1"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "SSTORE"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "POP"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "ADD"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "PUSH [tag]",
									"value": "22"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "JUMP"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "tag",
									"value": "23"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "JUMPDEST"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "POP"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "SWAP1"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "JUMP"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "tag",
									"value": "21"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "JUMPDEST"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "SWAP1"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "JUMPDEST"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "DUP1"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "CODECOPY"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11005,
									"end": 18749,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a7231582010816e0a7b418216511c1da886571600109ef0a0bbf1536a121ea7044460c3bf64736f6c63430005100032",
									".code": [
										{
											"begin": 11005,
											"end": 18749,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "MSTORE"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "POP"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "LT"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "JUMPI"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "SHR"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "DUP1"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "PUSH",
											"value": "893D20E8"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "GT"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "JUMPI"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "DUP1"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "GT"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "JUMPI"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "DUP1"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "EQ"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "JUMPI"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "DUP1"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "PUSH",
											"value": "B09F1266"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "EQ"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "JUMPI"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "DUP1"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "PUSH",
											"value": "D28D8852"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "EQ"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "JUMPI"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "DUP1"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "EQ"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "JUMPI"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "DUP1"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "EQ"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "JUMPI"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "JUMP"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "JUMPDEST"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "DUP1"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "PUSH",
											"value": "893D20E8"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "EQ"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "JUMPI"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "DUP1"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "EQ"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "JUMPI"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "DUP1"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "EQ"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "JUMPI"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "DUP1"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "PUSH",
											"value": "A0712D68"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "EQ"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "JUMPI"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "DUP1"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "PUSH",
											"value": "A457C2D7"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "EQ"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "JUMPI"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "JUMP"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "JUMPDEST"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "DUP1"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "PUSH",
											"value": "32424AA3"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "GT"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "JUMPI"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "DUP1"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "PUSH",
											"value": "32424AA3"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "EQ"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "JUMPI"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "DUP1"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "PUSH",
											"value": "39509351"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "EQ"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "JUMPI"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "DUP1"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "PUSH",
											"value": "42966C68"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "EQ"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "JUMPI"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "DUP1"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "EQ"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "JUMPI"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "DUP1"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "PUSH",
											"value": "715018A6"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "EQ"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "JUMPI"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "JUMP"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "JUMPDEST"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "DUP1"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "EQ"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "JUMPI"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "DUP1"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "EQ"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "JUMPI"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "DUP1"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "EQ"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "JUMPI"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "DUP1"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "EQ"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "JUMPI"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "DUP1"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "EQ"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "JUMPI"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "JUMPDEST"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "DUP1"
										},
										{
											"begin": 11005,
											"end": 18749,
											"name": "REVERT"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "JUMPDEST"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "JUMPDEST"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "MLOAD"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "DUP1"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "DUP1"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "ADD"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "DUP3"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "DUP2"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "SUB"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "DUP3"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "MSTORE"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "DUP4"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "DUP2"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "DUP2"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "MLOAD"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "DUP2"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "MSTORE"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "ADD"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "SWAP2"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "POP"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "DUP1"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "MLOAD"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "SWAP1"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "ADD"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "SWAP1"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "DUP1"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "DUP4"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "POP"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "POP"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "POP"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "SWAP1"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "POP"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "SWAP1"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "DUP2"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "ADD"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "SWAP1"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "AND"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "DUP1"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "ISZERO"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "JUMPI"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "DUP1"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "DUP3"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "SUB"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "DUP1"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "MLOAD"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "DUP4"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "SUB"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "EXP"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "SUB"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "NOT"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "AND"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "DUP2"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "MSTORE"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "ADD"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "SWAP2"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "POP"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "JUMPDEST"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "POP"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "SWAP3"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "POP"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "POP"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "POP"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "MLOAD"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "DUP1"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "SWAP2"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "SUB"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "SWAP1"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "RETURN"
										},
										{
											"begin": 12991,
											"end": 13132,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 12991,
											"end": 13132,
											"name": "JUMPDEST"
										},
										{
											"begin": 12991,
											"end": 13132,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 12991,
											"end": 13132,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12991,
											"end": 13132,
											"name": "DUP1"
										},
										{
											"begin": 12991,
											"end": 13132,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 12991,
											"end": 13132,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 12991,
											"end": 13132,
											"name": "DUP2"
										},
										{
											"begin": 12991,
											"end": 13132,
											"name": "ADD"
										},
										{
											"begin": 12991,
											"end": 13132,
											"name": "SWAP1"
										},
										{
											"begin": 12991,
											"end": 13132,
											"name": "DUP1"
										},
										{
											"begin": 12991,
											"end": 13132,
											"name": "DUP1"
										},
										{
											"begin": 12991,
											"end": 13132,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12991,
											"end": 13132,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12991,
											"end": 13132,
											"name": "AND"
										},
										{
											"begin": 12991,
											"end": 13132,
											"name": "SWAP1"
										},
										{
											"begin": 12991,
											"end": 13132,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12991,
											"end": 13132,
											"name": "ADD"
										},
										{
											"begin": 12991,
											"end": 13132,
											"name": "SWAP1"
										},
										{
											"begin": 12991,
											"end": 13132,
											"name": "SWAP3"
										},
										{
											"begin": 12991,
											"end": 13132,
											"name": "SWAP2"
										},
										{
											"begin": 12991,
											"end": 13132,
											"name": "SWAP1"
										},
										{
											"begin": 12991,
											"end": 13132,
											"name": "DUP1"
										},
										{
											"begin": 12991,
											"end": 13132,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12991,
											"end": 13132,
											"name": "SWAP1"
										},
										{
											"begin": 12991,
											"end": 13132,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12991,
											"end": 13132,
											"name": "ADD"
										},
										{
											"begin": 12991,
											"end": 13132,
											"name": "SWAP1"
										},
										{
											"begin": 12991,
											"end": 13132,
											"name": "SWAP3"
										},
										{
											"begin": 12991,
											"end": 13132,
											"name": "SWAP2"
										},
										{
											"begin": 12991,
											"end": 13132,
											"name": "SWAP1"
										},
										{
											"begin": 12991,
											"end": 13132,
											"name": "POP"
										},
										{
											"begin": 12991,
											"end": 13132,
											"name": "POP"
										},
										{
											"begin": 12991,
											"end": 13132,
											"name": "POP"
										},
										{
											"begin": 12991,
											"end": 13132,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 12991,
											"end": 13132,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12991,
											"end": 13132,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 12991,
											"end": 13132,
											"name": "JUMPDEST"
										},
										{
											"begin": 12991,
											"end": 13132,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12991,
											"end": 13132,
											"name": "MLOAD"
										},
										{
											"begin": 12991,
											"end": 13132,
											"name": "DUP1"
										},
										{
											"begin": 12991,
											"end": 13132,
											"name": "DUP3"
										},
										{
											"begin": 12991,
											"end": 13132,
											"name": "ISZERO"
										},
										{
											"begin": 12991,
											"end": 13132,
											"name": "ISZERO"
										},
										{
											"begin": 12991,
											"end": 13132,
											"name": "ISZERO"
										},
										{
											"begin": 12991,
											"end": 13132,
											"name": "ISZERO"
										},
										{
											"begin": 12991,
											"end": 13132,
											"name": "DUP2"
										},
										{
											"begin": 12991,
											"end": 13132,
											"name": "MSTORE"
										},
										{
											"begin": 12991,
											"end": 13132,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12991,
											"end": 13132,
											"name": "ADD"
										},
										{
											"begin": 12991,
											"end": 13132,
											"name": "SWAP2"
										},
										{
											"begin": 12991,
											"end": 13132,
											"name": "POP"
										},
										{
											"begin": 12991,
											"end": 13132,
											"name": "POP"
										},
										{
											"begin": 12991,
											"end": 13132,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12991,
											"end": 13132,
											"name": "MLOAD"
										},
										{
											"begin": 12991,
											"end": 13132,
											"name": "DUP1"
										},
										{
											"begin": 12991,
											"end": 13132,
											"name": "SWAP2"
										},
										{
											"begin": 12991,
											"end": 13132,
											"name": "SUB"
										},
										{
											"begin": 12991,
											"end": 13132,
											"name": "SWAP1"
										},
										{
											"begin": 12991,
											"end": 13132,
											"name": "RETURN"
										},
										{
											"begin": 12124,
											"end": 12209,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 12124,
											"end": 12209,
											"name": "JUMPDEST"
										},
										{
											"begin": 12124,
											"end": 12209,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 12124,
											"end": 12209,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 12124,
											"end": 12209,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12124,
											"end": 12209,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 12124,
											"end": 12209,
											"name": "JUMPDEST"
										},
										{
											"begin": 12124,
											"end": 12209,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12124,
											"end": 12209,
											"name": "MLOAD"
										},
										{
											"begin": 12124,
											"end": 12209,
											"name": "DUP1"
										},
										{
											"begin": 12124,
											"end": 12209,
											"name": "DUP3"
										},
										{
											"begin": 12124,
											"end": 12209,
											"name": "DUP2"
										},
										{
											"begin": 12124,
											"end": 12209,
											"name": "MSTORE"
										},
										{
											"begin": 12124,
											"end": 12209,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12124,
											"end": 12209,
											"name": "ADD"
										},
										{
											"begin": 12124,
											"end": 12209,
											"name": "SWAP2"
										},
										{
											"begin": 12124,
											"end": 12209,
											"name": "POP"
										},
										{
											"begin": 12124,
											"end": 12209,
											"name": "POP"
										},
										{
											"begin": 12124,
											"end": 12209,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12124,
											"end": 12209,
											"name": "MLOAD"
										},
										{
											"begin": 12124,
											"end": 12209,
											"name": "DUP1"
										},
										{
											"begin": 12124,
											"end": 12209,
											"name": "SWAP2"
										},
										{
											"begin": 12124,
											"end": 12209,
											"name": "SUB"
										},
										{
											"begin": 12124,
											"end": 12209,
											"name": "SWAP1"
										},
										{
											"begin": 12124,
											"end": 12209,
											"name": "RETURN"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "JUMPDEST"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "DUP1"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "DUP2"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "ADD"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "SWAP1"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "DUP1"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "DUP1"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "AND"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "SWAP1"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "ADD"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "SWAP1"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "SWAP3"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "SWAP2"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "SWAP1"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "DUP1"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "AND"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "SWAP1"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "ADD"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "SWAP1"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "SWAP3"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "SWAP2"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "SWAP1"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "DUP1"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "SWAP1"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "ADD"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "SWAP1"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "SWAP3"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "SWAP2"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "SWAP1"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "POP"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "POP"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "POP"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "JUMPDEST"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "MLOAD"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "DUP1"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "DUP3"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "ISZERO"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "ISZERO"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "ISZERO"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "ISZERO"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "DUP2"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "MSTORE"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "ADD"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "SWAP2"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "POP"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "POP"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "MLOAD"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "DUP1"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "SWAP2"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "SUB"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "SWAP1"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "RETURN"
										},
										{
											"begin": 11738,
											"end": 11815,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 11738,
											"end": 11815,
											"name": "JUMPDEST"
										},
										{
											"begin": 11738,
											"end": 11815,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 11738,
											"end": 11815,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 11738,
											"end": 11815,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11738,
											"end": 11815,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 11738,
											"end": 11815,
											"name": "JUMPDEST"
										},
										{
											"begin": 11738,
											"end": 11815,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11738,
											"end": 11815,
											"name": "MLOAD"
										},
										{
											"begin": 11738,
											"end": 11815,
											"name": "DUP1"
										},
										{
											"begin": 11738,
											"end": 11815,
											"name": "DUP3"
										},
										{
											"begin": 11738,
											"end": 11815,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11738,
											"end": 11815,
											"name": "AND"
										},
										{
											"begin": 11738,
											"end": 11815,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11738,
											"end": 11815,
											"name": "AND"
										},
										{
											"begin": 11738,
											"end": 11815,
											"name": "DUP2"
										},
										{
											"begin": 11738,
											"end": 11815,
											"name": "MSTORE"
										},
										{
											"begin": 11738,
											"end": 11815,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11738,
											"end": 11815,
											"name": "ADD"
										},
										{
											"begin": 11738,
											"end": 11815,
											"name": "SWAP2"
										},
										{
											"begin": 11738,
											"end": 11815,
											"name": "POP"
										},
										{
											"begin": 11738,
											"end": 11815,
											"name": "POP"
										},
										{
											"begin": 11738,
											"end": 11815,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11738,
											"end": 11815,
											"name": "MLOAD"
										},
										{
											"begin": 11738,
											"end": 11815,
											"name": "DUP1"
										},
										{
											"begin": 11738,
											"end": 11815,
											"name": "SWAP2"
										},
										{
											"begin": 11738,
											"end": 11815,
											"name": "SUB"
										},
										{
											"begin": 11738,
											"end": 11815,
											"name": "SWAP1"
										},
										{
											"begin": 11738,
											"end": 11815,
											"name": "RETURN"
										},
										{
											"begin": 11243,
											"end": 11265,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 11243,
											"end": 11265,
											"name": "JUMPDEST"
										},
										{
											"begin": 11243,
											"end": 11265,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 11243,
											"end": 11265,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 11243,
											"end": 11265,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11243,
											"end": 11265,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 11243,
											"end": 11265,
											"name": "JUMPDEST"
										},
										{
											"begin": 11243,
											"end": 11265,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11243,
											"end": 11265,
											"name": "MLOAD"
										},
										{
											"begin": 11243,
											"end": 11265,
											"name": "DUP1"
										},
										{
											"begin": 11243,
											"end": 11265,
											"name": "DUP3"
										},
										{
											"begin": 11243,
											"end": 11265,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11243,
											"end": 11265,
											"name": "AND"
										},
										{
											"begin": 11243,
											"end": 11265,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11243,
											"end": 11265,
											"name": "AND"
										},
										{
											"begin": 11243,
											"end": 11265,
											"name": "DUP2"
										},
										{
											"begin": 11243,
											"end": 11265,
											"name": "MSTORE"
										},
										{
											"begin": 11243,
											"end": 11265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11243,
											"end": 11265,
											"name": "ADD"
										},
										{
											"begin": 11243,
											"end": 11265,
											"name": "SWAP2"
										},
										{
											"begin": 11243,
											"end": 11265,
											"name": "POP"
										},
										{
											"begin": 11243,
											"end": 11265,
											"name": "POP"
										},
										{
											"begin": 11243,
											"end": 11265,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11243,
											"end": 11265,
											"name": "MLOAD"
										},
										{
											"begin": 11243,
											"end": 11265,
											"name": "DUP1"
										},
										{
											"begin": 11243,
											"end": 11265,
											"name": "SWAP2"
										},
										{
											"begin": 11243,
											"end": 11265,
											"name": "SUB"
										},
										{
											"begin": 11243,
											"end": 11265,
											"name": "SWAP1"
										},
										{
											"begin": 11243,
											"end": 11265,
											"name": "RETURN"
										},
										{
											"begin": 14219,
											"end": 14416,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 14219,
											"end": 14416,
											"name": "JUMPDEST"
										},
										{
											"begin": 14219,
											"end": 14416,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 14219,
											"end": 14416,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14219,
											"end": 14416,
											"name": "DUP1"
										},
										{
											"begin": 14219,
											"end": 14416,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 14219,
											"end": 14416,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 14219,
											"end": 14416,
											"name": "DUP2"
										},
										{
											"begin": 14219,
											"end": 14416,
											"name": "ADD"
										},
										{
											"begin": 14219,
											"end": 14416,
											"name": "SWAP1"
										},
										{
											"begin": 14219,
											"end": 14416,
											"name": "DUP1"
										},
										{
											"begin": 14219,
											"end": 14416,
											"name": "DUP1"
										},
										{
											"begin": 14219,
											"end": 14416,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14219,
											"end": 14416,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14219,
											"end": 14416,
											"name": "AND"
										},
										{
											"begin": 14219,
											"end": 14416,
											"name": "SWAP1"
										},
										{
											"begin": 14219,
											"end": 14416,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14219,
											"end": 14416,
											"name": "ADD"
										},
										{
											"begin": 14219,
											"end": 14416,
											"name": "SWAP1"
										},
										{
											"begin": 14219,
											"end": 14416,
											"name": "SWAP3"
										},
										{
											"begin": 14219,
											"end": 14416,
											"name": "SWAP2"
										},
										{
											"begin": 14219,
											"end": 14416,
											"name": "SWAP1"
										},
										{
											"begin": 14219,
											"end": 14416,
											"name": "DUP1"
										},
										{
											"begin": 14219,
											"end": 14416,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14219,
											"end": 14416,
											"name": "SWAP1"
										},
										{
											"begin": 14219,
											"end": 14416,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14219,
											"end": 14416,
											"name": "ADD"
										},
										{
											"begin": 14219,
											"end": 14416,
											"name": "SWAP1"
										},
										{
											"begin": 14219,
											"end": 14416,
											"name": "SWAP3"
										},
										{
											"begin": 14219,
											"end": 14416,
											"name": "SWAP2"
										},
										{
											"begin": 14219,
											"end": 14416,
											"name": "SWAP1"
										},
										{
											"begin": 14219,
											"end": 14416,
											"name": "POP"
										},
										{
											"begin": 14219,
											"end": 14416,
											"name": "POP"
										},
										{
											"begin": 14219,
											"end": 14416,
											"name": "POP"
										},
										{
											"begin": 14219,
											"end": 14416,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 14219,
											"end": 14416,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14219,
											"end": 14416,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 14219,
											"end": 14416,
											"name": "JUMPDEST"
										},
										{
											"begin": 14219,
											"end": 14416,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14219,
											"end": 14416,
											"name": "MLOAD"
										},
										{
											"begin": 14219,
											"end": 14416,
											"name": "DUP1"
										},
										{
											"begin": 14219,
											"end": 14416,
											"name": "DUP3"
										},
										{
											"begin": 14219,
											"end": 14416,
											"name": "ISZERO"
										},
										{
											"begin": 14219,
											"end": 14416,
											"name": "ISZERO"
										},
										{
											"begin": 14219,
											"end": 14416,
											"name": "ISZERO"
										},
										{
											"begin": 14219,
											"end": 14416,
											"name": "ISZERO"
										},
										{
											"begin": 14219,
											"end": 14416,
											"name": "DUP2"
										},
										{
											"begin": 14219,
											"end": 14416,
											"name": "MSTORE"
										},
										{
											"begin": 14219,
											"end": 14416,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14219,
											"end": 14416,
											"name": "ADD"
										},
										{
											"begin": 14219,
											"end": 14416,
											"name": "SWAP2"
										},
										{
											"begin": 14219,
											"end": 14416,
											"name": "POP"
										},
										{
											"begin": 14219,
											"end": 14416,
											"name": "POP"
										},
										{
											"begin": 14219,
											"end": 14416,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14219,
											"end": 14416,
											"name": "MLOAD"
										},
										{
											"begin": 14219,
											"end": 14416,
											"name": "DUP1"
										},
										{
											"begin": 14219,
											"end": 14416,
											"name": "SWAP2"
										},
										{
											"begin": 14219,
											"end": 14416,
											"name": "SUB"
										},
										{
											"begin": 14219,
											"end": 14416,
											"name": "SWAP1"
										},
										{
											"begin": 14219,
											"end": 14416,
											"name": "RETURN"
										},
										{
											"begin": 15507,
											"end": 15614,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 15507,
											"end": 15614,
											"name": "JUMPDEST"
										},
										{
											"begin": 15507,
											"end": 15614,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 15507,
											"end": 15614,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 15507,
											"end": 15614,
											"name": "DUP1"
										},
										{
											"begin": 15507,
											"end": 15614,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 15507,
											"end": 15614,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 15507,
											"end": 15614,
											"name": "DUP2"
										},
										{
											"begin": 15507,
											"end": 15614,
											"name": "ADD"
										},
										{
											"begin": 15507,
											"end": 15614,
											"name": "SWAP1"
										},
										{
											"begin": 15507,
											"end": 15614,
											"name": "DUP1"
										},
										{
											"begin": 15507,
											"end": 15614,
											"name": "DUP1"
										},
										{
											"begin": 15507,
											"end": 15614,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 15507,
											"end": 15614,
											"name": "SWAP1"
										},
										{
											"begin": 15507,
											"end": 15614,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15507,
											"end": 15614,
											"name": "ADD"
										},
										{
											"begin": 15507,
											"end": 15614,
											"name": "SWAP1"
										},
										{
											"begin": 15507,
											"end": 15614,
											"name": "SWAP3"
										},
										{
											"begin": 15507,
											"end": 15614,
											"name": "SWAP2"
										},
										{
											"begin": 15507,
											"end": 15614,
											"name": "SWAP1"
										},
										{
											"begin": 15507,
											"end": 15614,
											"name": "POP"
										},
										{
											"begin": 15507,
											"end": 15614,
											"name": "POP"
										},
										{
											"begin": 15507,
											"end": 15614,
											"name": "POP"
										},
										{
											"begin": 15507,
											"end": 15614,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 15507,
											"end": 15614,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15507,
											"end": 15614,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 15507,
											"end": 15614,
											"name": "JUMPDEST"
										},
										{
											"begin": 15507,
											"end": 15614,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15507,
											"end": 15614,
											"name": "MLOAD"
										},
										{
											"begin": 15507,
											"end": 15614,
											"name": "DUP1"
										},
										{
											"begin": 15507,
											"end": 15614,
											"name": "DUP3"
										},
										{
											"begin": 15507,
											"end": 15614,
											"name": "ISZERO"
										},
										{
											"begin": 15507,
											"end": 15614,
											"name": "ISZERO"
										},
										{
											"begin": 15507,
											"end": 15614,
											"name": "ISZERO"
										},
										{
											"begin": 15507,
											"end": 15614,
											"name": "ISZERO"
										},
										{
											"begin": 15507,
											"end": 15614,
											"name": "DUP2"
										},
										{
											"begin": 15507,
											"end": 15614,
											"name": "MSTORE"
										},
										{
											"begin": 15507,
											"end": 15614,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15507,
											"end": 15614,
											"name": "ADD"
										},
										{
											"begin": 15507,
											"end": 15614,
											"name": "SWAP2"
										},
										{
											"begin": 15507,
											"end": 15614,
											"name": "POP"
										},
										{
											"begin": 15507,
											"end": 15614,
											"name": "POP"
										},
										{
											"begin": 15507,
											"end": 15614,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15507,
											"end": 15614,
											"name": "MLOAD"
										},
										{
											"begin": 15507,
											"end": 15614,
											"name": "DUP1"
										},
										{
											"begin": 15507,
											"end": 15614,
											"name": "SWAP2"
										},
										{
											"begin": 15507,
											"end": 15614,
											"name": "SUB"
										},
										{
											"begin": 15507,
											"end": 15614,
											"name": "SWAP1"
										},
										{
											"begin": 15507,
											"end": 15614,
											"name": "RETURN"
										},
										{
											"begin": 12258,
											"end": 12362,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 12258,
											"end": 12362,
											"name": "JUMPDEST"
										},
										{
											"begin": 12258,
											"end": 12362,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 12258,
											"end": 12362,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12258,
											"end": 12362,
											"name": "DUP1"
										},
										{
											"begin": 12258,
											"end": 12362,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 12258,
											"end": 12362,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 12258,
											"end": 12362,
											"name": "DUP2"
										},
										{
											"begin": 12258,
											"end": 12362,
											"name": "ADD"
										},
										{
											"begin": 12258,
											"end": 12362,
											"name": "SWAP1"
										},
										{
											"begin": 12258,
											"end": 12362,
											"name": "DUP1"
										},
										{
											"begin": 12258,
											"end": 12362,
											"name": "DUP1"
										},
										{
											"begin": 12258,
											"end": 12362,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12258,
											"end": 12362,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12258,
											"end": 12362,
											"name": "AND"
										},
										{
											"begin": 12258,
											"end": 12362,
											"name": "SWAP1"
										},
										{
											"begin": 12258,
											"end": 12362,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12258,
											"end": 12362,
											"name": "ADD"
										},
										{
											"begin": 12258,
											"end": 12362,
											"name": "SWAP1"
										},
										{
											"begin": 12258,
											"end": 12362,
											"name": "SWAP3"
										},
										{
											"begin": 12258,
											"end": 12362,
											"name": "SWAP2"
										},
										{
											"begin": 12258,
											"end": 12362,
											"name": "SWAP1"
										},
										{
											"begin": 12258,
											"end": 12362,
											"name": "POP"
										},
										{
											"begin": 12258,
											"end": 12362,
											"name": "POP"
										},
										{
											"begin": 12258,
											"end": 12362,
											"name": "POP"
										},
										{
											"begin": 12258,
											"end": 12362,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 12258,
											"end": 12362,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12258,
											"end": 12362,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 12258,
											"end": 12362,
											"name": "JUMPDEST"
										},
										{
											"begin": 12258,
											"end": 12362,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12258,
											"end": 12362,
											"name": "MLOAD"
										},
										{
											"begin": 12258,
											"end": 12362,
											"name": "DUP1"
										},
										{
											"begin": 12258,
											"end": 12362,
											"name": "DUP3"
										},
										{
											"begin": 12258,
											"end": 12362,
											"name": "DUP2"
										},
										{
											"begin": 12258,
											"end": 12362,
											"name": "MSTORE"
										},
										{
											"begin": 12258,
											"end": 12362,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12258,
											"end": 12362,
											"name": "ADD"
										},
										{
											"begin": 12258,
											"end": 12362,
											"name": "SWAP2"
										},
										{
											"begin": 12258,
											"end": 12362,
											"name": "POP"
										},
										{
											"begin": 12258,
											"end": 12362,
											"name": "POP"
										},
										{
											"begin": 12258,
											"end": 12362,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12258,
											"end": 12362,
											"name": "MLOAD"
										},
										{
											"begin": 12258,
											"end": 12362,
											"name": "DUP1"
										},
										{
											"begin": 12258,
											"end": 12362,
											"name": "SWAP2"
										},
										{
											"begin": 12258,
											"end": 12362,
											"name": "SUB"
										},
										{
											"begin": 12258,
											"end": 12362,
											"name": "SWAP1"
										},
										{
											"begin": 12258,
											"end": 12362,
											"name": "RETURN"
										},
										{
											"begin": 10330,
											"end": 10457,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 10330,
											"end": 10457,
											"name": "JUMPDEST"
										},
										{
											"begin": 10330,
											"end": 10457,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 10330,
											"end": 10457,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 10330,
											"end": 10457,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10330,
											"end": 10457,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 10330,
											"end": 10457,
											"name": "JUMPDEST"
										},
										{
											"begin": 10330,
											"end": 10457,
											"name": "STOP"
										},
										{
											"begin": 11607,
											"end": 11684,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 11607,
											"end": 11684,
											"name": "JUMPDEST"
										},
										{
											"begin": 11607,
											"end": 11684,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 11607,
											"end": 11684,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 11607,
											"end": 11684,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11607,
											"end": 11684,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 11607,
											"end": 11684,
											"name": "JUMPDEST"
										},
										{
											"begin": 11607,
											"end": 11684,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11607,
											"end": 11684,
											"name": "MLOAD"
										},
										{
											"begin": 11607,
											"end": 11684,
											"name": "DUP1"
										},
										{
											"begin": 11607,
											"end": 11684,
											"name": "DUP3"
										},
										{
											"begin": 11607,
											"end": 11684,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11607,
											"end": 11684,
											"name": "AND"
										},
										{
											"begin": 11607,
											"end": 11684,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11607,
											"end": 11684,
											"name": "AND"
										},
										{
											"begin": 11607,
											"end": 11684,
											"name": "DUP2"
										},
										{
											"begin": 11607,
											"end": 11684,
											"name": "MSTORE"
										},
										{
											"begin": 11607,
											"end": 11684,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11607,
											"end": 11684,
											"name": "ADD"
										},
										{
											"begin": 11607,
											"end": 11684,
											"name": "SWAP2"
										},
										{
											"begin": 11607,
											"end": 11684,
											"name": "POP"
										},
										{
											"begin": 11607,
											"end": 11684,
											"name": "POP"
										},
										{
											"begin": 11607,
											"end": 11684,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11607,
											"end": 11684,
											"name": "MLOAD"
										},
										{
											"begin": 11607,
											"end": 11684,
											"name": "DUP1"
										},
										{
											"begin": 11607,
											"end": 11684,
											"name": "SWAP2"
										},
										{
											"begin": 11607,
											"end": 11684,
											"name": "SUB"
										},
										{
											"begin": 11607,
											"end": 11684,
											"name": "SWAP1"
										},
										{
											"begin": 11607,
											"end": 11684,
											"name": "RETURN"
										},
										{
											"begin": 9747,
											"end": 9818,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 9747,
											"end": 9818,
											"name": "JUMPDEST"
										},
										{
											"begin": 9747,
											"end": 9818,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 9747,
											"end": 9818,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 9747,
											"end": 9818,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9747,
											"end": 9818,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 9747,
											"end": 9818,
											"name": "JUMPDEST"
										},
										{
											"begin": 9747,
											"end": 9818,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9747,
											"end": 9818,
											"name": "MLOAD"
										},
										{
											"begin": 9747,
											"end": 9818,
											"name": "DUP1"
										},
										{
											"begin": 9747,
											"end": 9818,
											"name": "DUP3"
										},
										{
											"begin": 9747,
											"end": 9818,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9747,
											"end": 9818,
											"name": "AND"
										},
										{
											"begin": 9747,
											"end": 9818,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9747,
											"end": 9818,
											"name": "AND"
										},
										{
											"begin": 9747,
											"end": 9818,
											"name": "DUP2"
										},
										{
											"begin": 9747,
											"end": 9818,
											"name": "MSTORE"
										},
										{
											"begin": 9747,
											"end": 9818,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9747,
											"end": 9818,
											"name": "ADD"
										},
										{
											"begin": 9747,
											"end": 9818,
											"name": "SWAP2"
										},
										{
											"begin": 9747,
											"end": 9818,
											"name": "POP"
										},
										{
											"begin": 9747,
											"end": 9818,
											"name": "POP"
										},
										{
											"begin": 9747,
											"end": 9818,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9747,
											"end": 9818,
											"name": "MLOAD"
										},
										{
											"begin": 9747,
											"end": 9818,
											"name": "DUP1"
										},
										{
											"begin": 9747,
											"end": 9818,
											"name": "SWAP2"
										},
										{
											"begin": 9747,
											"end": 9818,
											"name": "SUB"
										},
										{
											"begin": 9747,
											"end": 9818,
											"name": "SWAP1"
										},
										{
											"begin": 9747,
											"end": 9818,
											"name": "RETURN"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "JUMPDEST"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "JUMPDEST"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "MLOAD"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "DUP1"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "DUP1"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "ADD"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "DUP3"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "DUP2"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "SUB"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "DUP3"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "MSTORE"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "DUP4"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "DUP2"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "DUP2"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "MLOAD"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "DUP2"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "MSTORE"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "ADD"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "SWAP2"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "POP"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "DUP1"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "MLOAD"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "SWAP1"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "ADD"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "SWAP1"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "DUP1"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "DUP4"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "POP"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "POP"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "POP"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "SWAP1"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "POP"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "SWAP1"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "DUP2"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "ADD"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "SWAP1"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "AND"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "DUP1"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "ISZERO"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "JUMPI"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "DUP1"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "DUP3"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "SUB"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "DUP1"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "MLOAD"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "DUP4"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "SUB"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "EXP"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "SUB"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "NOT"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "AND"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "DUP2"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "MSTORE"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "ADD"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "SWAP2"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "POP"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "JUMPDEST"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "POP"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "SWAP3"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "POP"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "POP"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "POP"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "MLOAD"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "DUP1"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "SWAP2"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "SUB"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "SWAP1"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "RETURN"
										},
										{
											"begin": 15310,
											"end": 15427,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 15310,
											"end": 15427,
											"name": "JUMPDEST"
										},
										{
											"begin": 15310,
											"end": 15427,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 15310,
											"end": 15427,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 15310,
											"end": 15427,
											"name": "DUP1"
										},
										{
											"begin": 15310,
											"end": 15427,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 15310,
											"end": 15427,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 15310,
											"end": 15427,
											"name": "DUP2"
										},
										{
											"begin": 15310,
											"end": 15427,
											"name": "ADD"
										},
										{
											"begin": 15310,
											"end": 15427,
											"name": "SWAP1"
										},
										{
											"begin": 15310,
											"end": 15427,
											"name": "DUP1"
										},
										{
											"begin": 15310,
											"end": 15427,
											"name": "DUP1"
										},
										{
											"begin": 15310,
											"end": 15427,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 15310,
											"end": 15427,
											"name": "SWAP1"
										},
										{
											"begin": 15310,
											"end": 15427,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15310,
											"end": 15427,
											"name": "ADD"
										},
										{
											"begin": 15310,
											"end": 15427,
											"name": "SWAP1"
										},
										{
											"begin": 15310,
											"end": 15427,
											"name": "SWAP3"
										},
										{
											"begin": 15310,
											"end": 15427,
											"name": "SWAP2"
										},
										{
											"begin": 15310,
											"end": 15427,
											"name": "SWAP1"
										},
										{
											"begin": 15310,
											"end": 15427,
											"name": "POP"
										},
										{
											"begin": 15310,
											"end": 15427,
											"name": "POP"
										},
										{
											"begin": 15310,
											"end": 15427,
											"name": "POP"
										},
										{
											"begin": 15310,
											"end": 15427,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 15310,
											"end": 15427,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15310,
											"end": 15427,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 15310,
											"end": 15427,
											"name": "JUMPDEST"
										},
										{
											"begin": 15310,
											"end": 15427,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15310,
											"end": 15427,
											"name": "MLOAD"
										},
										{
											"begin": 15310,
											"end": 15427,
											"name": "DUP1"
										},
										{
											"begin": 15310,
											"end": 15427,
											"name": "DUP3"
										},
										{
											"begin": 15310,
											"end": 15427,
											"name": "ISZERO"
										},
										{
											"begin": 15310,
											"end": 15427,
											"name": "ISZERO"
										},
										{
											"begin": 15310,
											"end": 15427,
											"name": "ISZERO"
										},
										{
											"begin": 15310,
											"end": 15427,
											"name": "ISZERO"
										},
										{
											"begin": 15310,
											"end": 15427,
											"name": "DUP2"
										},
										{
											"begin": 15310,
											"end": 15427,
											"name": "MSTORE"
										},
										{
											"begin": 15310,
											"end": 15427,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15310,
											"end": 15427,
											"name": "ADD"
										},
										{
											"begin": 15310,
											"end": 15427,
											"name": "SWAP2"
										},
										{
											"begin": 15310,
											"end": 15427,
											"name": "POP"
										},
										{
											"begin": 15310,
											"end": 15427,
											"name": "POP"
										},
										{
											"begin": 15310,
											"end": 15427,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15310,
											"end": 15427,
											"name": "MLOAD"
										},
										{
											"begin": 15310,
											"end": 15427,
											"name": "DUP1"
										},
										{
											"begin": 15310,
											"end": 15427,
											"name": "SWAP2"
										},
										{
											"begin": 15310,
											"end": 15427,
											"name": "SUB"
										},
										{
											"begin": 15310,
											"end": 15427,
											"name": "SWAP1"
										},
										{
											"begin": 15310,
											"end": 15427,
											"name": "RETURN"
										},
										{
											"begin": 14872,
											"end": 15120,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 14872,
											"end": 15120,
											"name": "JUMPDEST"
										},
										{
											"begin": 14872,
											"end": 15120,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 14872,
											"end": 15120,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14872,
											"end": 15120,
											"name": "DUP1"
										},
										{
											"begin": 14872,
											"end": 15120,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 14872,
											"end": 15120,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 14872,
											"end": 15120,
											"name": "DUP2"
										},
										{
											"begin": 14872,
											"end": 15120,
											"name": "ADD"
										},
										{
											"begin": 14872,
											"end": 15120,
											"name": "SWAP1"
										},
										{
											"begin": 14872,
											"end": 15120,
											"name": "DUP1"
										},
										{
											"begin": 14872,
											"end": 15120,
											"name": "DUP1"
										},
										{
											"begin": 14872,
											"end": 15120,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14872,
											"end": 15120,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14872,
											"end": 15120,
											"name": "AND"
										},
										{
											"begin": 14872,
											"end": 15120,
											"name": "SWAP1"
										},
										{
											"begin": 14872,
											"end": 15120,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14872,
											"end": 15120,
											"name": "ADD"
										},
										{
											"begin": 14872,
											"end": 15120,
											"name": "SWAP1"
										},
										{
											"begin": 14872,
											"end": 15120,
											"name": "SWAP3"
										},
										{
											"begin": 14872,
											"end": 15120,
											"name": "SWAP2"
										},
										{
											"begin": 14872,
											"end": 15120,
											"name": "SWAP1"
										},
										{
											"begin": 14872,
											"end": 15120,
											"name": "DUP1"
										},
										{
											"begin": 14872,
											"end": 15120,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14872,
											"end": 15120,
											"name": "SWAP1"
										},
										{
											"begin": 14872,
											"end": 15120,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14872,
											"end": 15120,
											"name": "ADD"
										},
										{
											"begin": 14872,
											"end": 15120,
											"name": "SWAP1"
										},
										{
											"begin": 14872,
											"end": 15120,
											"name": "SWAP3"
										},
										{
											"begin": 14872,
											"end": 15120,
											"name": "SWAP2"
										},
										{
											"begin": 14872,
											"end": 15120,
											"name": "SWAP1"
										},
										{
											"begin": 14872,
											"end": 15120,
											"name": "POP"
										},
										{
											"begin": 14872,
											"end": 15120,
											"name": "POP"
										},
										{
											"begin": 14872,
											"end": 15120,
											"name": "POP"
										},
										{
											"begin": 14872,
											"end": 15120,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 14872,
											"end": 15120,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14872,
											"end": 15120,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 14872,
											"end": 15120,
											"name": "JUMPDEST"
										},
										{
											"begin": 14872,
											"end": 15120,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14872,
											"end": 15120,
											"name": "MLOAD"
										},
										{
											"begin": 14872,
											"end": 15120,
											"name": "DUP1"
										},
										{
											"begin": 14872,
											"end": 15120,
											"name": "DUP3"
										},
										{
											"begin": 14872,
											"end": 15120,
											"name": "ISZERO"
										},
										{
											"begin": 14872,
											"end": 15120,
											"name": "ISZERO"
										},
										{
											"begin": 14872,
											"end": 15120,
											"name": "ISZERO"
										},
										{
											"begin": 14872,
											"end": 15120,
											"name": "ISZERO"
										},
										{
											"begin": 14872,
											"end": 15120,
											"name": "DUP2"
										},
										{
											"begin": 14872,
											"end": 15120,
											"name": "MSTORE"
										},
										{
											"begin": 14872,
											"end": 15120,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14872,
											"end": 15120,
											"name": "ADD"
										},
										{
											"begin": 14872,
											"end": 15120,
											"name": "SWAP2"
										},
										{
											"begin": 14872,
											"end": 15120,
											"name": "POP"
										},
										{
											"begin": 14872,
											"end": 15120,
											"name": "POP"
										},
										{
											"begin": 14872,
											"end": 15120,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14872,
											"end": 15120,
											"name": "MLOAD"
										},
										{
											"begin": 14872,
											"end": 15120,
											"name": "DUP1"
										},
										{
											"begin": 14872,
											"end": 15120,
											"name": "SWAP2"
										},
										{
											"begin": 14872,
											"end": 15120,
											"name": "SUB"
										},
										{
											"begin": 14872,
											"end": 15120,
											"name": "SWAP1"
										},
										{
											"begin": 14872,
											"end": 15120,
											"name": "RETURN"
										},
										{
											"begin": 12546,
											"end": 12693,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 12546,
											"end": 12693,
											"name": "JUMPDEST"
										},
										{
											"begin": 12546,
											"end": 12693,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 12546,
											"end": 12693,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12546,
											"end": 12693,
											"name": "DUP1"
										},
										{
											"begin": 12546,
											"end": 12693,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 12546,
											"end": 12693,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 12546,
											"end": 12693,
											"name": "DUP2"
										},
										{
											"begin": 12546,
											"end": 12693,
											"name": "ADD"
										},
										{
											"begin": 12546,
											"end": 12693,
											"name": "SWAP1"
										},
										{
											"begin": 12546,
											"end": 12693,
											"name": "DUP1"
										},
										{
											"begin": 12546,
											"end": 12693,
											"name": "DUP1"
										},
										{
											"begin": 12546,
											"end": 12693,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12546,
											"end": 12693,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12546,
											"end": 12693,
											"name": "AND"
										},
										{
											"begin": 12546,
											"end": 12693,
											"name": "SWAP1"
										},
										{
											"begin": 12546,
											"end": 12693,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12546,
											"end": 12693,
											"name": "ADD"
										},
										{
											"begin": 12546,
											"end": 12693,
											"name": "SWAP1"
										},
										{
											"begin": 12546,
											"end": 12693,
											"name": "SWAP3"
										},
										{
											"begin": 12546,
											"end": 12693,
											"name": "SWAP2"
										},
										{
											"begin": 12546,
											"end": 12693,
											"name": "SWAP1"
										},
										{
											"begin": 12546,
											"end": 12693,
											"name": "DUP1"
										},
										{
											"begin": 12546,
											"end": 12693,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12546,
											"end": 12693,
											"name": "SWAP1"
										},
										{
											"begin": 12546,
											"end": 12693,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12546,
											"end": 12693,
											"name": "ADD"
										},
										{
											"begin": 12546,
											"end": 12693,
											"name": "SWAP1"
										},
										{
											"begin": 12546,
											"end": 12693,
											"name": "SWAP3"
										},
										{
											"begin": 12546,
											"end": 12693,
											"name": "SWAP2"
										},
										{
											"begin": 12546,
											"end": 12693,
											"name": "SWAP1"
										},
										{
											"begin": 12546,
											"end": 12693,
											"name": "POP"
										},
										{
											"begin": 12546,
											"end": 12693,
											"name": "POP"
										},
										{
											"begin": 12546,
											"end": 12693,
											"name": "POP"
										},
										{
											"begin": 12546,
											"end": 12693,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 12546,
											"end": 12693,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12546,
											"end": 12693,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 12546,
											"end": 12693,
											"name": "JUMPDEST"
										},
										{
											"begin": 12546,
											"end": 12693,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12546,
											"end": 12693,
											"name": "MLOAD"
										},
										{
											"begin": 12546,
											"end": 12693,
											"name": "DUP1"
										},
										{
											"begin": 12546,
											"end": 12693,
											"name": "DUP3"
										},
										{
											"begin": 12546,
											"end": 12693,
											"name": "ISZERO"
										},
										{
											"begin": 12546,
											"end": 12693,
											"name": "ISZERO"
										},
										{
											"begin": 12546,
											"end": 12693,
											"name": "ISZERO"
										},
										{
											"begin": 12546,
											"end": 12693,
											"name": "ISZERO"
										},
										{
											"begin": 12546,
											"end": 12693,
											"name": "DUP2"
										},
										{
											"begin": 12546,
											"end": 12693,
											"name": "MSTORE"
										},
										{
											"begin": 12546,
											"end": 12693,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12546,
											"end": 12693,
											"name": "ADD"
										},
										{
											"begin": 12546,
											"end": 12693,
											"name": "SWAP2"
										},
										{
											"begin": 12546,
											"end": 12693,
											"name": "POP"
										},
										{
											"begin": 12546,
											"end": 12693,
											"name": "POP"
										},
										{
											"begin": 12546,
											"end": 12693,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12546,
											"end": 12693,
											"name": "MLOAD"
										},
										{
											"begin": 12546,
											"end": 12693,
											"name": "DUP1"
										},
										{
											"begin": 12546,
											"end": 12693,
											"name": "SWAP2"
										},
										{
											"begin": 12546,
											"end": 12693,
											"name": "SUB"
										},
										{
											"begin": 12546,
											"end": 12693,
											"name": "SWAP1"
										},
										{
											"begin": 12546,
											"end": 12693,
											"name": "RETURN"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "JUMPDEST"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "JUMPDEST"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "MLOAD"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "DUP1"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "DUP1"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "ADD"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "DUP3"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "DUP2"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "SUB"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "DUP3"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "MSTORE"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "DUP4"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "DUP2"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "DUP2"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "MLOAD"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "DUP2"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "MSTORE"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "ADD"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "SWAP2"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "POP"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "DUP1"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "MLOAD"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "SWAP1"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "ADD"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "SWAP1"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "DUP1"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "DUP4"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "POP"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "POP"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "POP"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "SWAP1"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "POP"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "SWAP1"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "DUP2"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "ADD"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "SWAP1"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "AND"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "DUP1"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "ISZERO"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "JUMPI"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "DUP1"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "DUP3"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "SUB"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "DUP1"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "MLOAD"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "DUP4"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "SUB"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "EXP"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "SUB"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "NOT"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "AND"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "DUP2"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "MSTORE"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "ADD"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "SWAP2"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "POP"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "JUMPDEST"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "POP"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "SWAP3"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "POP"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "POP"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "POP"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "MLOAD"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "DUP1"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "SWAP2"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "SUB"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "SWAP1"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "RETURN"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "JUMPDEST"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "JUMPDEST"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "MLOAD"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "DUP1"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "DUP1"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "ADD"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "DUP3"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "DUP2"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "SUB"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "DUP3"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "MSTORE"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "DUP4"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "DUP2"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "DUP2"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "MLOAD"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "DUP2"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "MSTORE"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "ADD"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "SWAP2"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "POP"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "DUP1"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "MLOAD"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "SWAP1"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "ADD"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "SWAP1"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "DUP1"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "DUP4"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "POP"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "POP"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "POP"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "SWAP1"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "POP"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "SWAP1"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "DUP2"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "ADD"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "SWAP1"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "AND"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "DUP1"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "ISZERO"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "JUMPI"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "DUP1"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "DUP3"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "SUB"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "DUP1"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "MLOAD"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "DUP4"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "SUB"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "EXP"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "SUB"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "NOT"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "AND"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "DUP2"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "MSTORE"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "ADD"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "SWAP2"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "POP"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "JUMPDEST"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "POP"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "SWAP3"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "POP"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "POP"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "POP"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "MLOAD"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "DUP1"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "SWAP2"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "SUB"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "SWAP1"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "RETURN"
										},
										{
											"begin": 12742,
											"end": 12870,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 12742,
											"end": 12870,
											"name": "JUMPDEST"
										},
										{
											"begin": 12742,
											"end": 12870,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 12742,
											"end": 12870,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12742,
											"end": 12870,
											"name": "DUP1"
										},
										{
											"begin": 12742,
											"end": 12870,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 12742,
											"end": 12870,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 12742,
											"end": 12870,
											"name": "DUP2"
										},
										{
											"begin": 12742,
											"end": 12870,
											"name": "ADD"
										},
										{
											"begin": 12742,
											"end": 12870,
											"name": "SWAP1"
										},
										{
											"begin": 12742,
											"end": 12870,
											"name": "DUP1"
										},
										{
											"begin": 12742,
											"end": 12870,
											"name": "DUP1"
										},
										{
											"begin": 12742,
											"end": 12870,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12742,
											"end": 12870,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12742,
											"end": 12870,
											"name": "AND"
										},
										{
											"begin": 12742,
											"end": 12870,
											"name": "SWAP1"
										},
										{
											"begin": 12742,
											"end": 12870,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12742,
											"end": 12870,
											"name": "ADD"
										},
										{
											"begin": 12742,
											"end": 12870,
											"name": "SWAP1"
										},
										{
											"begin": 12742,
											"end": 12870,
											"name": "SWAP3"
										},
										{
											"begin": 12742,
											"end": 12870,
											"name": "SWAP2"
										},
										{
											"begin": 12742,
											"end": 12870,
											"name": "SWAP1"
										},
										{
											"begin": 12742,
											"end": 12870,
											"name": "DUP1"
										},
										{
											"begin": 12742,
											"end": 12870,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12742,
											"end": 12870,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12742,
											"end": 12870,
											"name": "AND"
										},
										{
											"begin": 12742,
											"end": 12870,
											"name": "SWAP1"
										},
										{
											"begin": 12742,
											"end": 12870,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12742,
											"end": 12870,
											"name": "ADD"
										},
										{
											"begin": 12742,
											"end": 12870,
											"name": "SWAP1"
										},
										{
											"begin": 12742,
											"end": 12870,
											"name": "SWAP3"
										},
										{
											"begin": 12742,
											"end": 12870,
											"name": "SWAP2"
										},
										{
											"begin": 12742,
											"end": 12870,
											"name": "SWAP1"
										},
										{
											"begin": 12742,
											"end": 12870,
											"name": "POP"
										},
										{
											"begin": 12742,
											"end": 12870,
											"name": "POP"
										},
										{
											"begin": 12742,
											"end": 12870,
											"name": "POP"
										},
										{
											"begin": 12742,
											"end": 12870,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 12742,
											"end": 12870,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12742,
											"end": 12870,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 12742,
											"end": 12870,
											"name": "JUMPDEST"
										},
										{
											"begin": 12742,
											"end": 12870,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12742,
											"end": 12870,
											"name": "MLOAD"
										},
										{
											"begin": 12742,
											"end": 12870,
											"name": "DUP1"
										},
										{
											"begin": 12742,
											"end": 12870,
											"name": "DUP3"
										},
										{
											"begin": 12742,
											"end": 12870,
											"name": "DUP2"
										},
										{
											"begin": 12742,
											"end": 12870,
											"name": "MSTORE"
										},
										{
											"begin": 12742,
											"end": 12870,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12742,
											"end": 12870,
											"name": "ADD"
										},
										{
											"begin": 12742,
											"end": 12870,
											"name": "SWAP2"
										},
										{
											"begin": 12742,
											"end": 12870,
											"name": "POP"
										},
										{
											"begin": 12742,
											"end": 12870,
											"name": "POP"
										},
										{
											"begin": 12742,
											"end": 12870,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12742,
											"end": 12870,
											"name": "MLOAD"
										},
										{
											"begin": 12742,
											"end": 12870,
											"name": "DUP1"
										},
										{
											"begin": 12742,
											"end": 12870,
											"name": "SWAP2"
										},
										{
											"begin": 12742,
											"end": 12870,
											"name": "SUB"
										},
										{
											"begin": 12742,
											"end": 12870,
											"name": "SWAP1"
										},
										{
											"begin": 12742,
											"end": 12870,
											"name": "RETURN"
										},
										{
											"begin": 10596,
											"end": 10697,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 10596,
											"end": 10697,
											"name": "JUMPDEST"
										},
										{
											"begin": 10596,
											"end": 10697,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 10596,
											"end": 10697,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10596,
											"end": 10697,
											"name": "DUP1"
										},
										{
											"begin": 10596,
											"end": 10697,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 10596,
											"end": 10697,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 10596,
											"end": 10697,
											"name": "DUP2"
										},
										{
											"begin": 10596,
											"end": 10697,
											"name": "ADD"
										},
										{
											"begin": 10596,
											"end": 10697,
											"name": "SWAP1"
										},
										{
											"begin": 10596,
											"end": 10697,
											"name": "DUP1"
										},
										{
											"begin": 10596,
											"end": 10697,
											"name": "DUP1"
										},
										{
											"begin": 10596,
											"end": 10697,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10596,
											"end": 10697,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10596,
											"end": 10697,
											"name": "AND"
										},
										{
											"begin": 10596,
											"end": 10697,
											"name": "SWAP1"
										},
										{
											"begin": 10596,
											"end": 10697,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10596,
											"end": 10697,
											"name": "ADD"
										},
										{
											"begin": 10596,
											"end": 10697,
											"name": "SWAP1"
										},
										{
											"begin": 10596,
											"end": 10697,
											"name": "SWAP3"
										},
										{
											"begin": 10596,
											"end": 10697,
											"name": "SWAP2"
										},
										{
											"begin": 10596,
											"end": 10697,
											"name": "SWAP1"
										},
										{
											"begin": 10596,
											"end": 10697,
											"name": "POP"
										},
										{
											"begin": 10596,
											"end": 10697,
											"name": "POP"
										},
										{
											"begin": 10596,
											"end": 10697,
											"name": "POP"
										},
										{
											"begin": 10596,
											"end": 10697,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 10596,
											"end": 10697,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10596,
											"end": 10697,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 10596,
											"end": 10697,
											"name": "JUMPDEST"
										},
										{
											"begin": 10596,
											"end": 10697,
											"name": "STOP"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "JUMPDEST"
										},
										{
											"begin": 12035,
											"end": 12048,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 12063,
											"end": 12068,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "DUP1"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "SLOAD"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "DUP2"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "AND"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "ISZERO"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "MUL"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "SUB"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "AND"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "SWAP1"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "DIV"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "DUP1"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "ADD"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "DUP1"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "SWAP2"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "DIV"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "MUL"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "ADD"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "MLOAD"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "SWAP1"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "DUP2"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "ADD"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "MSTORE"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "DUP1"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "SWAP3"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "SWAP2"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "SWAP1"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "DUP2"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "DUP2"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "MSTORE"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "ADD"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "DUP3"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "DUP1"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "SLOAD"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "DUP2"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "AND"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "ISZERO"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "MUL"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "SUB"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "AND"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "SWAP1"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "DIV"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "DUP1"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "ISZERO"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "JUMPI"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "DUP1"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "LT"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "JUMPI"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "DUP1"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "DUP4"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "SLOAD"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "DIV"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "MUL"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "DUP4"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "MSTORE"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "SWAP2"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "ADD"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "SWAP2"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "JUMP"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "JUMPDEST"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "DUP3"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "ADD"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "SWAP2"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "SWAP1"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "MSTORE"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "KECCAK256"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "SWAP1"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "JUMPDEST"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "DUP2"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "SLOAD"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "DUP2"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "MSTORE"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "SWAP1"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "ADD"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "SWAP1"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "ADD"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "DUP1"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "DUP4"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "GT"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "JUMPI"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "DUP3"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "SWAP1"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "SUB"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "AND"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "DUP3"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "ADD"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "SWAP2"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "JUMPDEST"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "POP"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "POP"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "POP"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "POP"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "POP"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "SWAP1"
										},
										{
											"begin": 12056,
											"end": 12068,
											"name": "POP"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "SWAP1"
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12991,
											"end": 13132,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 12991,
											"end": 13132,
											"name": "JUMPDEST"
										},
										{
											"begin": 13059,
											"end": 13063,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13071,
											"end": 13110,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 13080,
											"end": 13092,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 13080,
											"end": 13090,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 13080,
											"end": 13092,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13080,
											"end": 13092,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 13080,
											"end": 13092,
											"name": "JUMPDEST"
										},
										{
											"begin": 13094,
											"end": 13101,
											"name": "DUP5"
										},
										{
											"begin": 13103,
											"end": 13109,
											"name": "DUP5"
										},
										{
											"begin": 13071,
											"end": 13079,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 13071,
											"end": 13110,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13071,
											"end": 13110,
											"name": "tag",
											"value": "97"
										},
										{
											"begin": 13071,
											"end": 13110,
											"name": "JUMPDEST"
										},
										{
											"begin": 13123,
											"end": 13127,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13116,
											"end": 13127,
											"name": "SWAP1"
										},
										{
											"begin": 13116,
											"end": 13127,
											"name": "POP"
										},
										{
											"begin": 12991,
											"end": 13132,
											"name": "SWAP3"
										},
										{
											"begin": 12991,
											"end": 13132,
											"name": "SWAP2"
										},
										{
											"begin": 12991,
											"end": 13132,
											"name": "POP"
										},
										{
											"begin": 12991,
											"end": 13132,
											"name": "POP"
										},
										{
											"begin": 12991,
											"end": 13132,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12124,
											"end": 12209,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 12124,
											"end": 12209,
											"name": "JUMPDEST"
										},
										{
											"begin": 12170,
											"end": 12177,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12192,
											"end": 12204,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 12192,
											"end": 12204,
											"name": "SLOAD"
										},
										{
											"begin": 12185,
											"end": 12204,
											"name": "SWAP1"
										},
										{
											"begin": 12185,
											"end": 12204,
											"name": "POP"
										},
										{
											"begin": 12124,
											"end": 12209,
											"name": "SWAP1"
										},
										{
											"begin": 12124,
											"end": 12209,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "JUMPDEST"
										},
										{
											"begin": 13654,
											"end": 13658,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13666,
											"end": 13702,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 13676,
											"end": 13682,
											"name": "DUP5"
										},
										{
											"begin": 13684,
											"end": 13693,
											"name": "DUP5"
										},
										{
											"begin": 13695,
											"end": 13701,
											"name": "DUP5"
										},
										{
											"begin": 13666,
											"end": 13675,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 13666,
											"end": 13702,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13666,
											"end": 13702,
											"name": "tag",
											"value": "103"
										},
										{
											"begin": 13666,
											"end": 13702,
											"name": "JUMPDEST"
										},
										{
											"begin": 13708,
											"end": 13829,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 13717,
											"end": 13723,
											"name": "DUP5"
										},
										{
											"begin": 13725,
											"end": 13737,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 13725,
											"end": 13735,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 13725,
											"end": 13737,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13725,
											"end": 13737,
											"name": "tag",
											"value": "106"
										},
										{
											"begin": 13725,
											"end": 13737,
											"name": "JUMPDEST"
										},
										{
											"begin": 13739,
											"end": 13828,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 13777,
											"end": 13783,
											"name": "DUP6"
										},
										{
											"begin": 13739,
											"end": 13828,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13739,
											"end": 13828,
											"name": "MLOAD"
										},
										{
											"begin": 13739,
											"end": 13828,
											"name": "DUP1"
										},
										{
											"begin": 13739,
											"end": 13828,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 13739,
											"end": 13828,
											"name": "ADD"
										},
										{
											"begin": 13739,
											"end": 13828,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13739,
											"end": 13828,
											"name": "MSTORE"
										},
										{
											"begin": 13739,
											"end": 13828,
											"name": "DUP1"
										},
										{
											"begin": 13739,
											"end": 13828,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 13739,
											"end": 13828,
											"name": "DUP2"
										},
										{
											"begin": 13739,
											"end": 13828,
											"name": "MSTORE"
										},
										{
											"begin": 13739,
											"end": 13828,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13739,
											"end": 13828,
											"name": "ADD"
										},
										{
											"begin": 13739,
											"end": 13828,
											"name": "PUSH data",
											"value": "4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E"
										},
										{
											"begin": 13739,
											"end": 13828,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 13739,
											"end": 13828,
											"name": "SWAP2"
										},
										{
											"begin": 13739,
											"end": 13828,
											"name": "CODECOPY"
										},
										{
											"begin": 13739,
											"end": 13750,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 13739,
											"end": 13758,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13751,
											"end": 13757,
											"name": "DUP12"
										},
										{
											"begin": 13739,
											"end": 13758,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13739,
											"end": 13758,
											"name": "AND"
										},
										{
											"begin": 13739,
											"end": 13758,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13739,
											"end": 13758,
											"name": "AND"
										},
										{
											"begin": 13739,
											"end": 13758,
											"name": "DUP2"
										},
										{
											"begin": 13739,
											"end": 13758,
											"name": "MSTORE"
										},
										{
											"begin": 13739,
											"end": 13758,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13739,
											"end": 13758,
											"name": "ADD"
										},
										{
											"begin": 13739,
											"end": 13758,
											"name": "SWAP1"
										},
										{
											"begin": 13739,
											"end": 13758,
											"name": "DUP2"
										},
										{
											"begin": 13739,
											"end": 13758,
											"name": "MSTORE"
										},
										{
											"begin": 13739,
											"end": 13758,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13739,
											"end": 13758,
											"name": "ADD"
										},
										{
											"begin": 13739,
											"end": 13758,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13739,
											"end": 13758,
											"name": "KECCAK256"
										},
										{
											"begin": 13739,
											"end": 13772,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13759,
											"end": 13771,
											"name": "PUSH [tag]",
											"value": "108"
										},
										{
											"begin": 13759,
											"end": 13769,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 13759,
											"end": 13771,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13759,
											"end": 13771,
											"name": "tag",
											"value": "108"
										},
										{
											"begin": 13759,
											"end": 13771,
											"name": "JUMPDEST"
										},
										{
											"begin": 13739,
											"end": 13772,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13739,
											"end": 13772,
											"name": "AND"
										},
										{
											"begin": 13739,
											"end": 13772,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13739,
											"end": 13772,
											"name": "AND"
										},
										{
											"begin": 13739,
											"end": 13772,
											"name": "DUP2"
										},
										{
											"begin": 13739,
											"end": 13772,
											"name": "MSTORE"
										},
										{
											"begin": 13739,
											"end": 13772,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13739,
											"end": 13772,
											"name": "ADD"
										},
										{
											"begin": 13739,
											"end": 13772,
											"name": "SWAP1"
										},
										{
											"begin": 13739,
											"end": 13772,
											"name": "DUP2"
										},
										{
											"begin": 13739,
											"end": 13772,
											"name": "MSTORE"
										},
										{
											"begin": 13739,
											"end": 13772,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13739,
											"end": 13772,
											"name": "ADD"
										},
										{
											"begin": 13739,
											"end": 13772,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13739,
											"end": 13772,
											"name": "KECCAK256"
										},
										{
											"begin": 13739,
											"end": 13772,
											"name": "SLOAD"
										},
										{
											"begin": 13739,
											"end": 13776,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 13739,
											"end": 13776,
											"name": "SWAP1"
										},
										{
											"begin": 13739,
											"end": 13828,
											"name": "SWAP3"
										},
										{
											"begin": 13739,
											"end": 13828,
											"name": "SWAP2"
										},
										{
											"begin": 13739,
											"end": 13828,
											"name": "SWAP1"
										},
										{
											"begin": 13739,
											"end": 13828,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 13739,
											"end": 13828,
											"name": "AND"
										},
										{
											"begin": 13739,
											"end": 13828,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13739,
											"end": 13828,
											"name": "tag",
											"value": "107"
										},
										{
											"begin": 13739,
											"end": 13828,
											"name": "JUMPDEST"
										},
										{
											"begin": 13708,
											"end": 13716,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 13708,
											"end": 13829,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13708,
											"end": 13829,
											"name": "tag",
											"value": "105"
										},
										{
											"begin": 13708,
											"end": 13829,
											"name": "JUMPDEST"
										},
										{
											"begin": 13842,
											"end": 13846,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13835,
											"end": 13846,
											"name": "SWAP1"
										},
										{
											"begin": 13835,
											"end": 13846,
											"name": "POP"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "SWAP4"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "SWAP3"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "POP"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "POP"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "POP"
										},
										{
											"begin": 13563,
											"end": 13851,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11738,
											"end": 11815,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 11738,
											"end": 11815,
											"name": "JUMPDEST"
										},
										{
											"begin": 11781,
											"end": 11786,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11801,
											"end": 11810,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11801,
											"end": 11810,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11801,
											"end": 11810,
											"name": "SWAP1"
										},
										{
											"begin": 11801,
											"end": 11810,
											"name": "SLOAD"
										},
										{
											"begin": 11801,
											"end": 11810,
											"name": "SWAP1"
										},
										{
											"begin": 11801,
											"end": 11810,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11801,
											"end": 11810,
											"name": "EXP"
										},
										{
											"begin": 11801,
											"end": 11810,
											"name": "SWAP1"
										},
										{
											"begin": 11801,
											"end": 11810,
											"name": "DIV"
										},
										{
											"begin": 11801,
											"end": 11810,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11801,
											"end": 11810,
											"name": "AND"
										},
										{
											"begin": 11794,
											"end": 11810,
											"name": "SWAP1"
										},
										{
											"begin": 11794,
											"end": 11810,
											"name": "POP"
										},
										{
											"begin": 11738,
											"end": 11815,
											"name": "SWAP1"
										},
										{
											"begin": 11738,
											"end": 11815,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11243,
											"end": 11265,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 11243,
											"end": 11265,
											"name": "JUMPDEST"
										},
										{
											"begin": 11243,
											"end": 11265,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11243,
											"end": 11265,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11243,
											"end": 11265,
											"name": "SWAP1"
										},
										{
											"begin": 11243,
											"end": 11265,
											"name": "SLOAD"
										},
										{
											"begin": 11243,
											"end": 11265,
											"name": "SWAP1"
										},
										{
											"begin": 11243,
											"end": 11265,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11243,
											"end": 11265,
											"name": "EXP"
										},
										{
											"begin": 11243,
											"end": 11265,
											"name": "SWAP1"
										},
										{
											"begin": 11243,
											"end": 11265,
											"name": "DIV"
										},
										{
											"begin": 11243,
											"end": 11265,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11243,
											"end": 11265,
											"name": "AND"
										},
										{
											"begin": 11243,
											"end": 11265,
											"name": "DUP2"
										},
										{
											"begin": 11243,
											"end": 11265,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14219,
											"end": 14416,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 14219,
											"end": 14416,
											"name": "JUMPDEST"
										},
										{
											"begin": 14299,
											"end": 14303,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14311,
											"end": 14394,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 14320,
											"end": 14332,
											"name": "PUSH [tag]",
											"value": "113"
										},
										{
											"begin": 14320,
											"end": 14330,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 14320,
											"end": 14332,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14320,
											"end": 14332,
											"name": "tag",
											"value": "113"
										},
										{
											"begin": 14320,
											"end": 14332,
											"name": "JUMPDEST"
										},
										{
											"begin": 14334,
											"end": 14341,
											"name": "DUP5"
										},
										{
											"begin": 14343,
											"end": 14393,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 14382,
											"end": 14392,
											"name": "DUP6"
										},
										{
											"begin": 14343,
											"end": 14354,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 14343,
											"end": 14368,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14355,
											"end": 14367,
											"name": "PUSH [tag]",
											"value": "115"
										},
										{
											"begin": 14355,
											"end": 14365,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 14355,
											"end": 14367,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14355,
											"end": 14367,
											"name": "tag",
											"value": "115"
										},
										{
											"begin": 14355,
											"end": 14367,
											"name": "JUMPDEST"
										},
										{
											"begin": 14343,
											"end": 14368,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14343,
											"end": 14368,
											"name": "AND"
										},
										{
											"begin": 14343,
											"end": 14368,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14343,
											"end": 14368,
											"name": "AND"
										},
										{
											"begin": 14343,
											"end": 14368,
											"name": "DUP2"
										},
										{
											"begin": 14343,
											"end": 14368,
											"name": "MSTORE"
										},
										{
											"begin": 14343,
											"end": 14368,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14343,
											"end": 14368,
											"name": "ADD"
										},
										{
											"begin": 14343,
											"end": 14368,
											"name": "SWAP1"
										},
										{
											"begin": 14343,
											"end": 14368,
											"name": "DUP2"
										},
										{
											"begin": 14343,
											"end": 14368,
											"name": "MSTORE"
										},
										{
											"begin": 14343,
											"end": 14368,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14343,
											"end": 14368,
											"name": "ADD"
										},
										{
											"begin": 14343,
											"end": 14368,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14343,
											"end": 14368,
											"name": "KECCAK256"
										},
										{
											"begin": 14343,
											"end": 14377,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14369,
											"end": 14376,
											"name": "DUP10"
										},
										{
											"begin": 14343,
											"end": 14377,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14343,
											"end": 14377,
											"name": "AND"
										},
										{
											"begin": 14343,
											"end": 14377,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14343,
											"end": 14377,
											"name": "AND"
										},
										{
											"begin": 14343,
											"end": 14377,
											"name": "DUP2"
										},
										{
											"begin": 14343,
											"end": 14377,
											"name": "MSTORE"
										},
										{
											"begin": 14343,
											"end": 14377,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14343,
											"end": 14377,
											"name": "ADD"
										},
										{
											"begin": 14343,
											"end": 14377,
											"name": "SWAP1"
										},
										{
											"begin": 14343,
											"end": 14377,
											"name": "DUP2"
										},
										{
											"begin": 14343,
											"end": 14377,
											"name": "MSTORE"
										},
										{
											"begin": 14343,
											"end": 14377,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14343,
											"end": 14377,
											"name": "ADD"
										},
										{
											"begin": 14343,
											"end": 14377,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14343,
											"end": 14377,
											"name": "KECCAK256"
										},
										{
											"begin": 14343,
											"end": 14377,
											"name": "SLOAD"
										},
										{
											"begin": 14343,
											"end": 14381,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 14343,
											"end": 14381,
											"name": "SWAP1"
										},
										{
											"begin": 14343,
											"end": 14393,
											"name": "SWAP2"
										},
										{
											"begin": 14343,
											"end": 14393,
											"name": "SWAP1"
										},
										{
											"begin": 14343,
											"end": 14393,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14343,
											"end": 14393,
											"name": "AND"
										},
										{
											"begin": 14343,
											"end": 14393,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14343,
											"end": 14393,
											"name": "tag",
											"value": "114"
										},
										{
											"begin": 14343,
											"end": 14393,
											"name": "JUMPDEST"
										},
										{
											"begin": 14311,
											"end": 14319,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 14311,
											"end": 14394,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14311,
											"end": 14394,
											"name": "tag",
											"value": "112"
										},
										{
											"begin": 14311,
											"end": 14394,
											"name": "JUMPDEST"
										},
										{
											"begin": 14407,
											"end": 14411,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 14400,
											"end": 14411,
											"name": "SWAP1"
										},
										{
											"begin": 14400,
											"end": 14411,
											"name": "POP"
										},
										{
											"begin": 14219,
											"end": 14416,
											"name": "SWAP3"
										},
										{
											"begin": 14219,
											"end": 14416,
											"name": "SWAP2"
										},
										{
											"begin": 14219,
											"end": 14416,
											"name": "POP"
										},
										{
											"begin": 14219,
											"end": 14416,
											"name": "POP"
										},
										{
											"begin": 14219,
											"end": 14416,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 15507,
											"end": 15614,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 15507,
											"end": 15614,
											"name": "JUMPDEST"
										},
										{
											"begin": 15553,
											"end": 15557,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15565,
											"end": 15592,
											"name": "PUSH [tag]",
											"value": "118"
										},
										{
											"begin": 15571,
											"end": 15583,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 15571,
											"end": 15581,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 15571,
											"end": 15583,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15571,
											"end": 15583,
											"name": "tag",
											"value": "119"
										},
										{
											"begin": 15571,
											"end": 15583,
											"name": "JUMPDEST"
										},
										{
											"begin": 15585,
											"end": 15591,
											"name": "DUP4"
										},
										{
											"begin": 15565,
											"end": 15570,
											"name": "PUSH [tag]",
											"value": "120"
										},
										{
											"begin": 15565,
											"end": 15592,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15565,
											"end": 15592,
											"name": "tag",
											"value": "118"
										},
										{
											"begin": 15565,
											"end": 15592,
											"name": "JUMPDEST"
										},
										{
											"begin": 15605,
											"end": 15609,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 15598,
											"end": 15609,
											"name": "SWAP1"
										},
										{
											"begin": 15598,
											"end": 15609,
											"name": "POP"
										},
										{
											"begin": 15507,
											"end": 15614,
											"name": "SWAP2"
										},
										{
											"begin": 15507,
											"end": 15614,
											"name": "SWAP1"
										},
										{
											"begin": 15507,
											"end": 15614,
											"name": "POP"
										},
										{
											"begin": 15507,
											"end": 15614,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12258,
											"end": 12362,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 12258,
											"end": 12362,
											"name": "JUMPDEST"
										},
										{
											"begin": 12317,
											"end": 12324,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12339,
											"end": 12348,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12339,
											"end": 12357,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12349,
											"end": 12356,
											"name": "DUP4"
										},
										{
											"begin": 12339,
											"end": 12357,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12339,
											"end": 12357,
											"name": "AND"
										},
										{
											"begin": 12339,
											"end": 12357,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12339,
											"end": 12357,
											"name": "AND"
										},
										{
											"begin": 12339,
											"end": 12357,
											"name": "DUP2"
										},
										{
											"begin": 12339,
											"end": 12357,
											"name": "MSTORE"
										},
										{
											"begin": 12339,
											"end": 12357,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12339,
											"end": 12357,
											"name": "ADD"
										},
										{
											"begin": 12339,
											"end": 12357,
											"name": "SWAP1"
										},
										{
											"begin": 12339,
											"end": 12357,
											"name": "DUP2"
										},
										{
											"begin": 12339,
											"end": 12357,
											"name": "MSTORE"
										},
										{
											"begin": 12339,
											"end": 12357,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12339,
											"end": 12357,
											"name": "ADD"
										},
										{
											"begin": 12339,
											"end": 12357,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12339,
											"end": 12357,
											"name": "KECCAK256"
										},
										{
											"begin": 12339,
											"end": 12357,
											"name": "SLOAD"
										},
										{
											"begin": 12332,
											"end": 12357,
											"name": "SWAP1"
										},
										{
											"begin": 12332,
											"end": 12357,
											"name": "POP"
										},
										{
											"begin": 12258,
											"end": 12362,
											"name": "SWAP2"
										},
										{
											"begin": 12258,
											"end": 12362,
											"name": "SWAP1"
										},
										{
											"begin": 12258,
											"end": 12362,
											"name": "POP"
										},
										{
											"begin": 12258,
											"end": 12362,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10330,
											"end": 10457,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 10330,
											"end": 10457,
											"name": "JUMPDEST"
										},
										{
											"begin": 9943,
											"end": 9955,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 9943,
											"end": 9953,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 9943,
											"end": 9955,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9943,
											"end": 9955,
											"name": "tag",
											"value": "123"
										},
										{
											"begin": 9943,
											"end": 9955,
											"name": "JUMPDEST"
										},
										{
											"begin": 9933,
											"end": 9955,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9933,
											"end": 9955,
											"name": "AND"
										},
										{
											"begin": 9933,
											"end": 9939,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9933,
											"end": 9939,
											"name": "DUP1"
										},
										{
											"begin": 9933,
											"end": 9939,
											"name": "SWAP1"
										},
										{
											"begin": 9933,
											"end": 9939,
											"name": "SLOAD"
										},
										{
											"begin": 9933,
											"end": 9939,
											"name": "SWAP1"
										},
										{
											"begin": 9933,
											"end": 9939,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9933,
											"end": 9939,
											"name": "EXP"
										},
										{
											"begin": 9933,
											"end": 9939,
											"name": "SWAP1"
										},
										{
											"begin": 9933,
											"end": 9939,
											"name": "DIV"
										},
										{
											"begin": 9933,
											"end": 9939,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9933,
											"end": 9939,
											"name": "AND"
										},
										{
											"begin": 9933,
											"end": 9955,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9933,
											"end": 9955,
											"name": "AND"
										},
										{
											"begin": 9933,
											"end": 9955,
											"name": "EQ"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "JUMPI"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "MLOAD"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "DUP2"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "MSTORE"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "ADD"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "DUP1"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "DUP1"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "ADD"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "DUP3"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "DUP2"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "SUB"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "DUP3"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "MSTORE"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "DUP2"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "MSTORE"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "ADD"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "DUP1"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "DUP2"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "MSTORE"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "POP"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "ADD"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "SWAP2"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "POP"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "POP"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "MLOAD"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "DUP1"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "SWAP2"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "SUB"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "SWAP1"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "REVERT"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "tag",
											"value": "124"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "JUMPDEST"
										},
										{
											"begin": 10424,
											"end": 10425,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10387,
											"end": 10427,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10387,
											"end": 10427,
											"name": "AND"
										},
										{
											"begin": 10408,
											"end": 10414,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10408,
											"end": 10414,
											"name": "DUP1"
										},
										{
											"begin": 10408,
											"end": 10414,
											"name": "SWAP1"
										},
										{
											"begin": 10408,
											"end": 10414,
											"name": "SLOAD"
										},
										{
											"begin": 10408,
											"end": 10414,
											"name": "SWAP1"
										},
										{
											"begin": 10408,
											"end": 10414,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10408,
											"end": 10414,
											"name": "EXP"
										},
										{
											"begin": 10408,
											"end": 10414,
											"name": "SWAP1"
										},
										{
											"begin": 10408,
											"end": 10414,
											"name": "DIV"
										},
										{
											"begin": 10408,
											"end": 10414,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10408,
											"end": 10414,
											"name": "AND"
										},
										{
											"begin": 10387,
											"end": 10427,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10387,
											"end": 10427,
											"name": "AND"
										},
										{
											"begin": 10387,
											"end": 10427,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 10387,
											"end": 10427,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10387,
											"end": 10427,
											"name": "MLOAD"
										},
										{
											"begin": 10387,
											"end": 10427,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10387,
											"end": 10427,
											"name": "MLOAD"
										},
										{
											"begin": 10387,
											"end": 10427,
											"name": "DUP1"
										},
										{
											"begin": 10387,
											"end": 10427,
											"name": "SWAP2"
										},
										{
											"begin": 10387,
											"end": 10427,
											"name": "SUB"
										},
										{
											"begin": 10387,
											"end": 10427,
											"name": "SWAP1"
										},
										{
											"begin": 10387,
											"end": 10427,
											"name": "LOG3"
										},
										{
											"begin": 10450,
											"end": 10451,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10433,
											"end": 10439,
											"name": "DUP1"
										},
										{
											"begin": 10433,
											"end": 10439,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10433,
											"end": 10452,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10433,
											"end": 10452,
											"name": "EXP"
										},
										{
											"begin": 10433,
											"end": 10452,
											"name": "DUP2"
										},
										{
											"begin": 10433,
											"end": 10452,
											"name": "SLOAD"
										},
										{
											"begin": 10433,
											"end": 10452,
											"name": "DUP2"
										},
										{
											"begin": 10433,
											"end": 10452,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10433,
											"end": 10452,
											"name": "MUL"
										},
										{
											"begin": 10433,
											"end": 10452,
											"name": "NOT"
										},
										{
											"begin": 10433,
											"end": 10452,
											"name": "AND"
										},
										{
											"begin": 10433,
											"end": 10452,
											"name": "SWAP1"
										},
										{
											"begin": 10433,
											"end": 10452,
											"name": "DUP4"
										},
										{
											"begin": 10433,
											"end": 10452,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10433,
											"end": 10452,
											"name": "AND"
										},
										{
											"begin": 10433,
											"end": 10452,
											"name": "MUL"
										},
										{
											"begin": 10433,
											"end": 10452,
											"name": "OR"
										},
										{
											"begin": 10433,
											"end": 10452,
											"name": "SWAP1"
										},
										{
											"begin": 10433,
											"end": 10452,
											"name": "SSTORE"
										},
										{
											"begin": 10433,
											"end": 10452,
											"name": "POP"
										},
										{
											"begin": 10330,
											"end": 10457,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11607,
											"end": 11684,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 11607,
											"end": 11684,
											"name": "JUMPDEST"
										},
										{
											"begin": 11650,
											"end": 11657,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11672,
											"end": 11679,
											"name": "PUSH [tag]",
											"value": "127"
										},
										{
											"begin": 11672,
											"end": 11677,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 11672,
											"end": 11679,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11672,
											"end": 11679,
											"name": "tag",
											"value": "127"
										},
										{
											"begin": 11672,
											"end": 11679,
											"name": "JUMPDEST"
										},
										{
											"begin": 11665,
											"end": 11679,
											"name": "SWAP1"
										},
										{
											"begin": 11665,
											"end": 11679,
											"name": "POP"
										},
										{
											"begin": 11607,
											"end": 11684,
											"name": "SWAP1"
										},
										{
											"begin": 11607,
											"end": 11684,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 9747,
											"end": 9818,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 9747,
											"end": 9818,
											"name": "JUMPDEST"
										},
										{
											"begin": 9785,
											"end": 9792,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9807,
											"end": 9813,
											"name": "DUP1"
										},
										{
											"begin": 9807,
											"end": 9813,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9807,
											"end": 9813,
											"name": "SWAP1"
										},
										{
											"begin": 9807,
											"end": 9813,
											"name": "SLOAD"
										},
										{
											"begin": 9807,
											"end": 9813,
											"name": "SWAP1"
										},
										{
											"begin": 9807,
											"end": 9813,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9807,
											"end": 9813,
											"name": "EXP"
										},
										{
											"begin": 9807,
											"end": 9813,
											"name": "SWAP1"
										},
										{
											"begin": 9807,
											"end": 9813,
											"name": "DIV"
										},
										{
											"begin": 9807,
											"end": 9813,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9807,
											"end": 9813,
											"name": "AND"
										},
										{
											"begin": 9800,
											"end": 9813,
											"name": "SWAP1"
										},
										{
											"begin": 9800,
											"end": 9813,
											"name": "POP"
										},
										{
											"begin": 9747,
											"end": 9818,
											"name": "SWAP1"
										},
										{
											"begin": 9747,
											"end": 9818,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "JUMPDEST"
										},
										{
											"begin": 11908,
											"end": 11921,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 11936,
											"end": 11943,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "DUP1"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "SLOAD"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "DUP2"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "AND"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "ISZERO"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "MUL"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "SUB"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "AND"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "SWAP1"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "DIV"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "DUP1"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "ADD"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "DUP1"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "SWAP2"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "DIV"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "MUL"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "ADD"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "MLOAD"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "SWAP1"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "DUP2"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "ADD"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "MSTORE"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "DUP1"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "SWAP3"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "SWAP2"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "SWAP1"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "DUP2"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "DUP2"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "MSTORE"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "ADD"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "DUP3"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "DUP1"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "SLOAD"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "DUP2"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "AND"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "ISZERO"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "MUL"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "SUB"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "AND"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "SWAP1"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "DIV"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "DUP1"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "ISZERO"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "PUSH [tag]",
											"value": "130"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "JUMPI"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "DUP1"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "LT"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "PUSH [tag]",
											"value": "131"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "JUMPI"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "DUP1"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "DUP4"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "SLOAD"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "DIV"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "MUL"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "DUP4"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "MSTORE"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "SWAP2"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "ADD"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "SWAP2"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "PUSH [tag]",
											"value": "130"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "JUMP"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "tag",
											"value": "131"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "JUMPDEST"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "DUP3"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "ADD"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "SWAP2"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "SWAP1"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "MSTORE"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "KECCAK256"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "SWAP1"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "tag",
											"value": "132"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "JUMPDEST"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "DUP2"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "SLOAD"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "DUP2"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "MSTORE"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "SWAP1"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "ADD"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "SWAP1"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "ADD"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "DUP1"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "DUP4"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "GT"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "PUSH [tag]",
											"value": "132"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "JUMPI"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "DUP3"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "SWAP1"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "SUB"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "AND"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "DUP3"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "ADD"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "SWAP2"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "tag",
											"value": "130"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "JUMPDEST"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "POP"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "POP"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "POP"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "POP"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "POP"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "SWAP1"
										},
										{
											"begin": 11929,
											"end": 11943,
											"name": "POP"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "SWAP1"
										},
										{
											"begin": 11867,
											"end": 11948,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 15310,
											"end": 15427,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 15310,
											"end": 15427,
											"name": "JUMPDEST"
										},
										{
											"begin": 15366,
											"end": 15370,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9943,
											"end": 9955,
											"name": "PUSH [tag]",
											"value": "134"
										},
										{
											"begin": 9943,
											"end": 9953,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 9943,
											"end": 9955,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9943,
											"end": 9955,
											"name": "tag",
											"value": "134"
										},
										{
											"begin": 9943,
											"end": 9955,
											"name": "JUMPDEST"
										},
										{
											"begin": 9933,
											"end": 9955,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9933,
											"end": 9955,
											"name": "AND"
										},
										{
											"begin": 9933,
											"end": 9939,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9933,
											"end": 9939,
											"name": "DUP1"
										},
										{
											"begin": 9933,
											"end": 9939,
											"name": "SWAP1"
										},
										{
											"begin": 9933,
											"end": 9939,
											"name": "SLOAD"
										},
										{
											"begin": 9933,
											"end": 9939,
											"name": "SWAP1"
										},
										{
											"begin": 9933,
											"end": 9939,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9933,
											"end": 9939,
											"name": "EXP"
										},
										{
											"begin": 9933,
											"end": 9939,
											"name": "SWAP1"
										},
										{
											"begin": 9933,
											"end": 9939,
											"name": "DIV"
										},
										{
											"begin": 9933,
											"end": 9939,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9933,
											"end": 9939,
											"name": "AND"
										},
										{
											"begin": 9933,
											"end": 9955,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9933,
											"end": 9955,
											"name": "AND"
										},
										{
											"begin": 9933,
											"end": 9955,
											"name": "EQ"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "JUMPI"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "MLOAD"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "DUP2"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "MSTORE"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "ADD"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "DUP1"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "DUP1"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "ADD"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "DUP3"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "DUP2"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "SUB"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "DUP3"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "MSTORE"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "DUP2"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "MSTORE"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "ADD"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "DUP1"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "DUP2"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "MSTORE"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "POP"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "ADD"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "SWAP2"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "POP"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "POP"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "MLOAD"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "DUP1"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "SWAP2"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "SUB"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "SWAP1"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "REVERT"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "tag",
											"value": "135"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "JUMPDEST"
										},
										{
											"begin": 15378,
											"end": 15405,
											"name": "PUSH [tag]",
											"value": "137"
										},
										{
											"begin": 15384,
											"end": 15396,
											"name": "PUSH [tag]",
											"value": "138"
										},
										{
											"begin": 15384,
											"end": 15394,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 15384,
											"end": 15396,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15384,
											"end": 15396,
											"name": "tag",
											"value": "138"
										},
										{
											"begin": 15384,
											"end": 15396,
											"name": "JUMPDEST"
										},
										{
											"begin": 15398,
											"end": 15404,
											"name": "DUP4"
										},
										{
											"begin": 15378,
											"end": 15383,
											"name": "PUSH [tag]",
											"value": "139"
										},
										{
											"begin": 15378,
											"end": 15405,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15378,
											"end": 15405,
											"name": "tag",
											"value": "137"
										},
										{
											"begin": 15378,
											"end": 15405,
											"name": "JUMPDEST"
										},
										{
											"begin": 15418,
											"end": 15422,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 15411,
											"end": 15422,
											"name": "SWAP1"
										},
										{
											"begin": 15411,
											"end": 15422,
											"name": "POP"
										},
										{
											"begin": 15310,
											"end": 15427,
											"name": "SWAP2"
										},
										{
											"begin": 15310,
											"end": 15427,
											"name": "SWAP1"
										},
										{
											"begin": 15310,
											"end": 15427,
											"name": "POP"
										},
										{
											"begin": 15310,
											"end": 15427,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14872,
											"end": 15120,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 14872,
											"end": 15120,
											"name": "JUMPDEST"
										},
										{
											"begin": 14957,
											"end": 14961,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14969,
											"end": 15098,
											"name": "PUSH [tag]",
											"value": "141"
										},
										{
											"begin": 14978,
											"end": 14990,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 14978,
											"end": 14988,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 14978,
											"end": 14990,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14978,
											"end": 14990,
											"name": "tag",
											"value": "142"
										},
										{
											"begin": 14978,
											"end": 14990,
											"name": "JUMPDEST"
										},
										{
											"begin": 14992,
											"end": 14999,
											"name": "DUP5"
										},
										{
											"begin": 15001,
											"end": 15097,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 15040,
											"end": 15055,
											"name": "DUP6"
										},
										{
											"begin": 15001,
											"end": 15097,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15001,
											"end": 15097,
											"name": "MLOAD"
										},
										{
											"begin": 15001,
											"end": 15097,
											"name": "DUP1"
										},
										{
											"begin": 15001,
											"end": 15097,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 15001,
											"end": 15097,
											"name": "ADD"
										},
										{
											"begin": 15001,
											"end": 15097,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15001,
											"end": 15097,
											"name": "MSTORE"
										},
										{
											"begin": 15001,
											"end": 15097,
											"name": "DUP1"
										},
										{
											"begin": 15001,
											"end": 15097,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 15001,
											"end": 15097,
											"name": "DUP2"
										},
										{
											"begin": 15001,
											"end": 15097,
											"name": "MSTORE"
										},
										{
											"begin": 15001,
											"end": 15097,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15001,
											"end": 15097,
											"name": "ADD"
										},
										{
											"begin": 15001,
											"end": 15097,
											"name": "PUSH data",
											"value": "B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22"
										},
										{
											"begin": 15001,
											"end": 15097,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 15001,
											"end": 15097,
											"name": "SWAP2"
										},
										{
											"begin": 15001,
											"end": 15097,
											"name": "CODECOPY"
										},
										{
											"begin": 15001,
											"end": 15012,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 15001,
											"end": 15026,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15013,
											"end": 15025,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 15013,
											"end": 15023,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 15013,
											"end": 15025,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15013,
											"end": 15025,
											"name": "tag",
											"value": "144"
										},
										{
											"begin": 15013,
											"end": 15025,
											"name": "JUMPDEST"
										},
										{
											"begin": 15001,
											"end": 15026,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15001,
											"end": 15026,
											"name": "AND"
										},
										{
											"begin": 15001,
											"end": 15026,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15001,
											"end": 15026,
											"name": "AND"
										},
										{
											"begin": 15001,
											"end": 15026,
											"name": "DUP2"
										},
										{
											"begin": 15001,
											"end": 15026,
											"name": "MSTORE"
										},
										{
											"begin": 15001,
											"end": 15026,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15001,
											"end": 15026,
											"name": "ADD"
										},
										{
											"begin": 15001,
											"end": 15026,
											"name": "SWAP1"
										},
										{
											"begin": 15001,
											"end": 15026,
											"name": "DUP2"
										},
										{
											"begin": 15001,
											"end": 15026,
											"name": "MSTORE"
										},
										{
											"begin": 15001,
											"end": 15026,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15001,
											"end": 15026,
											"name": "ADD"
										},
										{
											"begin": 15001,
											"end": 15026,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15001,
											"end": 15026,
											"name": "KECCAK256"
										},
										{
											"begin": 15001,
											"end": 15035,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15027,
											"end": 15034,
											"name": "DUP11"
										},
										{
											"begin": 15001,
											"end": 15035,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15001,
											"end": 15035,
											"name": "AND"
										},
										{
											"begin": 15001,
											"end": 15035,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15001,
											"end": 15035,
											"name": "AND"
										},
										{
											"begin": 15001,
											"end": 15035,
											"name": "DUP2"
										},
										{
											"begin": 15001,
											"end": 15035,
											"name": "MSTORE"
										},
										{
											"begin": 15001,
											"end": 15035,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15001,
											"end": 15035,
											"name": "ADD"
										},
										{
											"begin": 15001,
											"end": 15035,
											"name": "SWAP1"
										},
										{
											"begin": 15001,
											"end": 15035,
											"name": "DUP2"
										},
										{
											"begin": 15001,
											"end": 15035,
											"name": "MSTORE"
										},
										{
											"begin": 15001,
											"end": 15035,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15001,
											"end": 15035,
											"name": "ADD"
										},
										{
											"begin": 15001,
											"end": 15035,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15001,
											"end": 15035,
											"name": "KECCAK256"
										},
										{
											"begin": 15001,
											"end": 15035,
											"name": "SLOAD"
										},
										{
											"begin": 15001,
											"end": 15039,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 15001,
											"end": 15039,
											"name": "SWAP1"
										},
										{
											"begin": 15001,
											"end": 15097,
											"name": "SWAP3"
										},
										{
											"begin": 15001,
											"end": 15097,
											"name": "SWAP2"
										},
										{
											"begin": 15001,
											"end": 15097,
											"name": "SWAP1"
										},
										{
											"begin": 15001,
											"end": 15097,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 15001,
											"end": 15097,
											"name": "AND"
										},
										{
											"begin": 15001,
											"end": 15097,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15001,
											"end": 15097,
											"name": "tag",
											"value": "143"
										},
										{
											"begin": 15001,
											"end": 15097,
											"name": "JUMPDEST"
										},
										{
											"begin": 14969,
											"end": 14977,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 14969,
											"end": 15098,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14969,
											"end": 15098,
											"name": "tag",
											"value": "141"
										},
										{
											"begin": 14969,
											"end": 15098,
											"name": "JUMPDEST"
										},
										{
											"begin": 15111,
											"end": 15115,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 15104,
											"end": 15115,
											"name": "SWAP1"
										},
										{
											"begin": 15104,
											"end": 15115,
											"name": "POP"
										},
										{
											"begin": 14872,
											"end": 15120,
											"name": "SWAP3"
										},
										{
											"begin": 14872,
											"end": 15120,
											"name": "SWAP2"
										},
										{
											"begin": 14872,
											"end": 15120,
											"name": "POP"
										},
										{
											"begin": 14872,
											"end": 15120,
											"name": "POP"
										},
										{
											"begin": 14872,
											"end": 15120,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12546,
											"end": 12693,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 12546,
											"end": 12693,
											"name": "JUMPDEST"
										},
										{
											"begin": 12617,
											"end": 12621,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12629,
											"end": 12671,
											"name": "PUSH [tag]",
											"value": "146"
										},
										{
											"begin": 12639,
											"end": 12651,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 12639,
											"end": 12649,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 12639,
											"end": 12651,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12639,
											"end": 12651,
											"name": "tag",
											"value": "147"
										},
										{
											"begin": 12639,
											"end": 12651,
											"name": "JUMPDEST"
										},
										{
											"begin": 12653,
											"end": 12662,
											"name": "DUP5"
										},
										{
											"begin": 12664,
											"end": 12670,
											"name": "DUP5"
										},
										{
											"begin": 12629,
											"end": 12638,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 12629,
											"end": 12671,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12629,
											"end": 12671,
											"name": "tag",
											"value": "146"
										},
										{
											"begin": 12629,
											"end": 12671,
											"name": "JUMPDEST"
										},
										{
											"begin": 12684,
											"end": 12688,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12677,
											"end": 12688,
											"name": "SWAP1"
										},
										{
											"begin": 12677,
											"end": 12688,
											"name": "POP"
										},
										{
											"begin": 12546,
											"end": 12693,
											"name": "SWAP3"
										},
										{
											"begin": 12546,
											"end": 12693,
											"name": "SWAP2"
										},
										{
											"begin": 12546,
											"end": 12693,
											"name": "POP"
										},
										{
											"begin": 12546,
											"end": 12693,
											"name": "POP"
										},
										{
											"begin": 12546,
											"end": 12693,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "JUMPDEST"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "DUP1"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "SLOAD"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "DUP2"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "AND"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "ISZERO"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "MUL"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "SUB"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "AND"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "SWAP1"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "DIV"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "DUP1"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "ADD"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "DUP1"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "SWAP2"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "DIV"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "MUL"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "ADD"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "MLOAD"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "SWAP1"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "DUP2"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "ADD"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "MSTORE"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "DUP1"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "SWAP3"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "SWAP2"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "SWAP1"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "DUP2"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "DUP2"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "MSTORE"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "ADD"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "DUP3"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "DUP1"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "SLOAD"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "DUP2"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "AND"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "ISZERO"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "MUL"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "SUB"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "AND"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "SWAP1"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "DIV"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "DUP1"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "ISZERO"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "JUMPI"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "DUP1"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "LT"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "JUMPI"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "DUP1"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "DUP4"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "SLOAD"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "DIV"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "MUL"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "DUP4"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "MSTORE"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "SWAP2"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "ADD"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "SWAP2"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "JUMP"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "tag",
											"value": "149"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "JUMPDEST"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "DUP3"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "ADD"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "SWAP2"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "SWAP1"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "MSTORE"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "KECCAK256"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "SWAP1"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "tag",
											"value": "150"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "JUMPDEST"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "DUP2"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "SLOAD"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "DUP2"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "MSTORE"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "SWAP1"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "ADD"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "SWAP1"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "ADD"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "DUP1"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "DUP4"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "GT"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "PUSH [tag]",
											"value": "150"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "JUMPI"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "DUP3"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "SWAP1"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "SUB"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "AND"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "DUP3"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "ADD"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "SWAP2"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "tag",
											"value": "148"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "JUMPDEST"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "POP"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "POP"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "POP"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "POP"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "POP"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "DUP2"
										},
										{
											"begin": 11269,
											"end": 11290,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "JUMPDEST"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "DUP1"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "SLOAD"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "DUP2"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "AND"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "ISZERO"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "MUL"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "SUB"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "AND"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "SWAP1"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "DIV"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "DUP1"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "ADD"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "DUP1"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "SWAP2"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "DIV"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "MUL"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "ADD"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "MLOAD"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "SWAP1"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "DUP2"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "ADD"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "MSTORE"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "DUP1"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "SWAP3"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "SWAP2"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "SWAP1"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "DUP2"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "DUP2"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "MSTORE"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "ADD"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "DUP3"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "DUP1"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "SLOAD"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "DUP2"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "AND"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "ISZERO"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "MUL"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "SUB"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "AND"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "SWAP1"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "DIV"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "DUP1"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "ISZERO"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "PUSH [tag]",
											"value": "151"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "JUMPI"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "DUP1"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "LT"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "PUSH [tag]",
											"value": "152"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "JUMPI"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "DUP1"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "DUP4"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "SLOAD"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "DIV"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "MUL"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "DUP4"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "MSTORE"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "SWAP2"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "ADD"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "SWAP2"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "PUSH [tag]",
											"value": "151"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "JUMP"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "tag",
											"value": "152"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "JUMPDEST"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "DUP3"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "ADD"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "SWAP2"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "SWAP1"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "MSTORE"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "KECCAK256"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "SWAP1"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "tag",
											"value": "153"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "JUMPDEST"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "DUP2"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "SLOAD"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "DUP2"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "MSTORE"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "SWAP1"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "ADD"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "SWAP1"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "ADD"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "DUP1"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "DUP4"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "GT"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "PUSH [tag]",
											"value": "153"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "JUMPI"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "DUP3"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "SWAP1"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "SUB"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "AND"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "DUP3"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "ADD"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "SWAP2"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "tag",
											"value": "151"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "JUMPDEST"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "POP"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "POP"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "POP"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "POP"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "POP"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "DUP2"
										},
										{
											"begin": 11294,
											"end": 11313,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12742,
											"end": 12870,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 12742,
											"end": 12870,
											"name": "JUMPDEST"
										},
										{
											"begin": 12816,
											"end": 12823,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12838,
											"end": 12849,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 12838,
											"end": 12856,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12850,
											"end": 12855,
											"name": "DUP5"
										},
										{
											"begin": 12838,
											"end": 12856,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12838,
											"end": 12856,
											"name": "AND"
										},
										{
											"begin": 12838,
											"end": 12856,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12838,
											"end": 12856,
											"name": "AND"
										},
										{
											"begin": 12838,
											"end": 12856,
											"name": "DUP2"
										},
										{
											"begin": 12838,
											"end": 12856,
											"name": "MSTORE"
										},
										{
											"begin": 12838,
											"end": 12856,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12838,
											"end": 12856,
											"name": "ADD"
										},
										{
											"begin": 12838,
											"end": 12856,
											"name": "SWAP1"
										},
										{
											"begin": 12838,
											"end": 12856,
											"name": "DUP2"
										},
										{
											"begin": 12838,
											"end": 12856,
											"name": "MSTORE"
										},
										{
											"begin": 12838,
											"end": 12856,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12838,
											"end": 12856,
											"name": "ADD"
										},
										{
											"begin": 12838,
											"end": 12856,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12838,
											"end": 12856,
											"name": "KECCAK256"
										},
										{
											"begin": 12838,
											"end": 12865,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12857,
											"end": 12864,
											"name": "DUP4"
										},
										{
											"begin": 12838,
											"end": 12865,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12838,
											"end": 12865,
											"name": "AND"
										},
										{
											"begin": 12838,
											"end": 12865,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12838,
											"end": 12865,
											"name": "AND"
										},
										{
											"begin": 12838,
											"end": 12865,
											"name": "DUP2"
										},
										{
											"begin": 12838,
											"end": 12865,
											"name": "MSTORE"
										},
										{
											"begin": 12838,
											"end": 12865,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12838,
											"end": 12865,
											"name": "ADD"
										},
										{
											"begin": 12838,
											"end": 12865,
											"name": "SWAP1"
										},
										{
											"begin": 12838,
											"end": 12865,
											"name": "DUP2"
										},
										{
											"begin": 12838,
											"end": 12865,
											"name": "MSTORE"
										},
										{
											"begin": 12838,
											"end": 12865,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12838,
											"end": 12865,
											"name": "ADD"
										},
										{
											"begin": 12838,
											"end": 12865,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12838,
											"end": 12865,
											"name": "KECCAK256"
										},
										{
											"begin": 12838,
											"end": 12865,
											"name": "SLOAD"
										},
										{
											"begin": 12831,
											"end": 12865,
											"name": "SWAP1"
										},
										{
											"begin": 12831,
											"end": 12865,
											"name": "POP"
										},
										{
											"begin": 12742,
											"end": 12870,
											"name": "SWAP3"
										},
										{
											"begin": 12742,
											"end": 12870,
											"name": "SWAP2"
										},
										{
											"begin": 12742,
											"end": 12870,
											"name": "POP"
										},
										{
											"begin": 12742,
											"end": 12870,
											"name": "POP"
										},
										{
											"begin": 12742,
											"end": 12870,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10596,
											"end": 10697,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 10596,
											"end": 10697,
											"name": "JUMPDEST"
										},
										{
											"begin": 9943,
											"end": 9955,
											"name": "PUSH [tag]",
											"value": "156"
										},
										{
											"begin": 9943,
											"end": 9953,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 9943,
											"end": 9955,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9943,
											"end": 9955,
											"name": "tag",
											"value": "156"
										},
										{
											"begin": 9943,
											"end": 9955,
											"name": "JUMPDEST"
										},
										{
											"begin": 9933,
											"end": 9955,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9933,
											"end": 9955,
											"name": "AND"
										},
										{
											"begin": 9933,
											"end": 9939,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9933,
											"end": 9939,
											"name": "DUP1"
										},
										{
											"begin": 9933,
											"end": 9939,
											"name": "SWAP1"
										},
										{
											"begin": 9933,
											"end": 9939,
											"name": "SLOAD"
										},
										{
											"begin": 9933,
											"end": 9939,
											"name": "SWAP1"
										},
										{
											"begin": 9933,
											"end": 9939,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9933,
											"end": 9939,
											"name": "EXP"
										},
										{
											"begin": 9933,
											"end": 9939,
											"name": "SWAP1"
										},
										{
											"begin": 9933,
											"end": 9939,
											"name": "DIV"
										},
										{
											"begin": 9933,
											"end": 9939,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9933,
											"end": 9939,
											"name": "AND"
										},
										{
											"begin": 9933,
											"end": 9955,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9933,
											"end": 9955,
											"name": "AND"
										},
										{
											"begin": 9933,
											"end": 9955,
											"name": "EQ"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "PUSH [tag]",
											"value": "157"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "JUMPI"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "MLOAD"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "DUP2"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "MSTORE"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "ADD"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "DUP1"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "DUP1"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "ADD"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "DUP3"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "DUP2"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "SUB"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "DUP3"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "MSTORE"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "DUP2"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "MSTORE"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "ADD"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "DUP1"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "DUP2"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "MSTORE"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "POP"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "ADD"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "SWAP2"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "POP"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "POP"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "MLOAD"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "DUP1"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "SWAP2"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "SUB"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "SWAP1"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "REVERT"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "tag",
											"value": "157"
										},
										{
											"begin": 9925,
											"end": 9992,
											"name": "JUMPDEST"
										},
										{
											"begin": 10664,
											"end": 10692,
											"name": "PUSH [tag]",
											"value": "159"
										},
										{
											"begin": 10683,
											"end": 10691,
											"name": "DUP2"
										},
										{
											"begin": 10664,
											"end": 10682,
											"name": "PUSH [tag]",
											"value": "160"
										},
										{
											"begin": 10664,
											"end": 10692,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10664,
											"end": 10692,
											"name": "tag",
											"value": "159"
										},
										{
											"begin": 10664,
											"end": 10692,
											"name": "JUMPDEST"
										},
										{
											"begin": 10596,
											"end": 10697,
											"name": "POP"
										},
										{
											"begin": 10596,
											"end": 10697,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3632,
											"end": 3722,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 3632,
											"end": 3722,
											"name": "JUMPDEST"
										},
										{
											"begin": 3677,
											"end": 3692,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3707,
											"end": 3717,
											"name": "CALLER"
										},
										{
											"begin": 3700,
											"end": 3717,
											"name": "SWAP1"
										},
										{
											"begin": 3700,
											"end": 3717,
											"name": "POP"
										},
										{
											"begin": 3632,
											"end": 3722,
											"name": "SWAP1"
										},
										{
											"begin": 3632,
											"end": 3722,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 18050,
											"end": 18364,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 18050,
											"end": 18364,
											"name": "JUMPDEST"
										},
										{
											"begin": 18156,
											"end": 18157,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18139,
											"end": 18158,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18139,
											"end": 18158,
											"name": "AND"
										},
										{
											"begin": 18139,
											"end": 18144,
											"name": "DUP4"
										},
										{
											"begin": 18139,
											"end": 18158,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18139,
											"end": 18158,
											"name": "AND"
										},
										{
											"begin": 18139,
											"end": 18158,
											"name": "EQ"
										},
										{
											"begin": 18139,
											"end": 18158,
											"name": "ISZERO"
										},
										{
											"begin": 18131,
											"end": 18199,
											"name": "PUSH [tag]",
											"value": "163"
										},
										{
											"begin": 18131,
											"end": 18199,
											"name": "JUMPI"
										},
										{
											"begin": 18131,
											"end": 18199,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18131,
											"end": 18199,
											"name": "MLOAD"
										},
										{
											"begin": 18131,
											"end": 18199,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18131,
											"end": 18199,
											"name": "DUP2"
										},
										{
											"begin": 18131,
											"end": 18199,
											"name": "MSTORE"
										},
										{
											"begin": 18131,
											"end": 18199,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 18131,
											"end": 18199,
											"name": "ADD"
										},
										{
											"begin": 18131,
											"end": 18199,
											"name": "DUP1"
										},
										{
											"begin": 18131,
											"end": 18199,
											"name": "DUP1"
										},
										{
											"begin": 18131,
											"end": 18199,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18131,
											"end": 18199,
											"name": "ADD"
										},
										{
											"begin": 18131,
											"end": 18199,
											"name": "DUP3"
										},
										{
											"begin": 18131,
											"end": 18199,
											"name": "DUP2"
										},
										{
											"begin": 18131,
											"end": 18199,
											"name": "SUB"
										},
										{
											"begin": 18131,
											"end": 18199,
											"name": "DUP3"
										},
										{
											"begin": 18131,
											"end": 18199,
											"name": "MSTORE"
										},
										{
											"begin": 18131,
											"end": 18199,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 18131,
											"end": 18199,
											"name": "DUP2"
										},
										{
											"begin": 18131,
											"end": 18199,
											"name": "MSTORE"
										},
										{
											"begin": 18131,
											"end": 18199,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18131,
											"end": 18199,
											"name": "ADD"
										},
										{
											"begin": 18131,
											"end": 18199,
											"name": "DUP1"
										},
										{
											"begin": 18131,
											"end": 18199,
											"name": "PUSH data",
											"value": "1441CFBEF485DE93BEDECC35B3D10FA2992DB382C4C9C583A6E423A140ABE4A4"
										},
										{
											"begin": 18131,
											"end": 18199,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 18131,
											"end": 18199,
											"name": "SWAP2"
										},
										{
											"begin": 18131,
											"end": 18199,
											"name": "CODECOPY"
										},
										{
											"begin": 18131,
											"end": 18199,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18131,
											"end": 18199,
											"name": "ADD"
										},
										{
											"begin": 18131,
											"end": 18199,
											"name": "SWAP2"
										},
										{
											"begin": 18131,
											"end": 18199,
											"name": "POP"
										},
										{
											"begin": 18131,
											"end": 18199,
											"name": "POP"
										},
										{
											"begin": 18131,
											"end": 18199,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18131,
											"end": 18199,
											"name": "MLOAD"
										},
										{
											"begin": 18131,
											"end": 18199,
											"name": "DUP1"
										},
										{
											"begin": 18131,
											"end": 18199,
											"name": "SWAP2"
										},
										{
											"begin": 18131,
											"end": 18199,
											"name": "SUB"
										},
										{
											"begin": 18131,
											"end": 18199,
											"name": "SWAP1"
										},
										{
											"begin": 18131,
											"end": 18199,
											"name": "REVERT"
										},
										{
											"begin": 18131,
											"end": 18199,
											"name": "tag",
											"value": "163"
										},
										{
											"begin": 18131,
											"end": 18199,
											"name": "JUMPDEST"
										},
										{
											"begin": 18232,
											"end": 18233,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18213,
											"end": 18234,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18213,
											"end": 18234,
											"name": "AND"
										},
										{
											"begin": 18213,
											"end": 18220,
											"name": "DUP3"
										},
										{
											"begin": 18213,
											"end": 18234,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18213,
											"end": 18234,
											"name": "AND"
										},
										{
											"begin": 18213,
											"end": 18234,
											"name": "EQ"
										},
										{
											"begin": 18213,
											"end": 18234,
											"name": "ISZERO"
										},
										{
											"begin": 18205,
											"end": 18273,
											"name": "PUSH [tag]",
											"value": "164"
										},
										{
											"begin": 18205,
											"end": 18273,
											"name": "JUMPI"
										},
										{
											"begin": 18205,
											"end": 18273,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18205,
											"end": 18273,
											"name": "MLOAD"
										},
										{
											"begin": 18205,
											"end": 18273,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18205,
											"end": 18273,
											"name": "DUP2"
										},
										{
											"begin": 18205,
											"end": 18273,
											"name": "MSTORE"
										},
										{
											"begin": 18205,
											"end": 18273,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 18205,
											"end": 18273,
											"name": "ADD"
										},
										{
											"begin": 18205,
											"end": 18273,
											"name": "DUP1"
										},
										{
											"begin": 18205,
											"end": 18273,
											"name": "DUP1"
										},
										{
											"begin": 18205,
											"end": 18273,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18205,
											"end": 18273,
											"name": "ADD"
										},
										{
											"begin": 18205,
											"end": 18273,
											"name": "DUP3"
										},
										{
											"begin": 18205,
											"end": 18273,
											"name": "DUP2"
										},
										{
											"begin": 18205,
											"end": 18273,
											"name": "SUB"
										},
										{
											"begin": 18205,
											"end": 18273,
											"name": "DUP3"
										},
										{
											"begin": 18205,
											"end": 18273,
											"name": "MSTORE"
										},
										{
											"begin": 18205,
											"end": 18273,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 18205,
											"end": 18273,
											"name": "DUP2"
										},
										{
											"begin": 18205,
											"end": 18273,
											"name": "MSTORE"
										},
										{
											"begin": 18205,
											"end": 18273,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18205,
											"end": 18273,
											"name": "ADD"
										},
										{
											"begin": 18205,
											"end": 18273,
											"name": "DUP1"
										},
										{
											"begin": 18205,
											"end": 18273,
											"name": "PUSH data",
											"value": "F10E7571E18B354270DEE950932FB6A745EFC79414B2B2556185A4ED6A1AF0D5"
										},
										{
											"begin": 18205,
											"end": 18273,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 18205,
											"end": 18273,
											"name": "SWAP2"
										},
										{
											"begin": 18205,
											"end": 18273,
											"name": "CODECOPY"
										},
										{
											"begin": 18205,
											"end": 18273,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18205,
											"end": 18273,
											"name": "ADD"
										},
										{
											"begin": 18205,
											"end": 18273,
											"name": "SWAP2"
										},
										{
											"begin": 18205,
											"end": 18273,
											"name": "POP"
										},
										{
											"begin": 18205,
											"end": 18273,
											"name": "POP"
										},
										{
											"begin": 18205,
											"end": 18273,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18205,
											"end": 18273,
											"name": "MLOAD"
										},
										{
											"begin": 18205,
											"end": 18273,
											"name": "DUP1"
										},
										{
											"begin": 18205,
											"end": 18273,
											"name": "SWAP2"
										},
										{
											"begin": 18205,
											"end": 18273,
											"name": "SUB"
										},
										{
											"begin": 18205,
											"end": 18273,
											"name": "SWAP1"
										},
										{
											"begin": 18205,
											"end": 18273,
											"name": "REVERT"
										},
										{
											"begin": 18205,
											"end": 18273,
											"name": "tag",
											"value": "164"
										},
										{
											"begin": 18205,
											"end": 18273,
											"name": "JUMPDEST"
										},
										{
											"begin": 18310,
											"end": 18316,
											"name": "DUP1"
										},
										{
											"begin": 18280,
											"end": 18291,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 18280,
											"end": 18298,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18292,
											"end": 18297,
											"name": "DUP6"
										},
										{
											"begin": 18280,
											"end": 18298,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18280,
											"end": 18298,
											"name": "AND"
										},
										{
											"begin": 18280,
											"end": 18298,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18280,
											"end": 18298,
											"name": "AND"
										},
										{
											"begin": 18280,
											"end": 18298,
											"name": "DUP2"
										},
										{
											"begin": 18280,
											"end": 18298,
											"name": "MSTORE"
										},
										{
											"begin": 18280,
											"end": 18298,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18280,
											"end": 18298,
											"name": "ADD"
										},
										{
											"begin": 18280,
											"end": 18298,
											"name": "SWAP1"
										},
										{
											"begin": 18280,
											"end": 18298,
											"name": "DUP2"
										},
										{
											"begin": 18280,
											"end": 18298,
											"name": "MSTORE"
										},
										{
											"begin": 18280,
											"end": 18298,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18280,
											"end": 18298,
											"name": "ADD"
										},
										{
											"begin": 18280,
											"end": 18298,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18280,
											"end": 18298,
											"name": "KECCAK256"
										},
										{
											"begin": 18280,
											"end": 18307,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18299,
											"end": 18306,
											"name": "DUP5"
										},
										{
											"begin": 18280,
											"end": 18307,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18280,
											"end": 18307,
											"name": "AND"
										},
										{
											"begin": 18280,
											"end": 18307,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18280,
											"end": 18307,
											"name": "AND"
										},
										{
											"begin": 18280,
											"end": 18307,
											"name": "DUP2"
										},
										{
											"begin": 18280,
											"end": 18307,
											"name": "MSTORE"
										},
										{
											"begin": 18280,
											"end": 18307,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18280,
											"end": 18307,
											"name": "ADD"
										},
										{
											"begin": 18280,
											"end": 18307,
											"name": "SWAP1"
										},
										{
											"begin": 18280,
											"end": 18307,
											"name": "DUP2"
										},
										{
											"begin": 18280,
											"end": 18307,
											"name": "MSTORE"
										},
										{
											"begin": 18280,
											"end": 18307,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18280,
											"end": 18307,
											"name": "ADD"
										},
										{
											"begin": 18280,
											"end": 18307,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18280,
											"end": 18307,
											"name": "KECCAK256"
										},
										{
											"begin": 18280,
											"end": 18316,
											"name": "DUP2"
										},
										{
											"begin": 18280,
											"end": 18316,
											"name": "SWAP1"
										},
										{
											"begin": 18280,
											"end": 18316,
											"name": "SSTORE"
										},
										{
											"begin": 18280,
											"end": 18316,
											"name": "POP"
										},
										{
											"begin": 18343,
											"end": 18350,
											"name": "DUP2"
										},
										{
											"begin": 18327,
											"end": 18359,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18327,
											"end": 18359,
											"name": "AND"
										},
										{
											"begin": 18336,
											"end": 18341,
											"name": "DUP4"
										},
										{
											"begin": 18327,
											"end": 18359,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18327,
											"end": 18359,
											"name": "AND"
										},
										{
											"begin": 18327,
											"end": 18359,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 18352,
											"end": 18358,
											"name": "DUP4"
										},
										{
											"begin": 18327,
											"end": 18359,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18327,
											"end": 18359,
											"name": "MLOAD"
										},
										{
											"begin": 18327,
											"end": 18359,
											"name": "DUP1"
										},
										{
											"begin": 18327,
											"end": 18359,
											"name": "DUP3"
										},
										{
											"begin": 18327,
											"end": 18359,
											"name": "DUP2"
										},
										{
											"begin": 18327,
											"end": 18359,
											"name": "MSTORE"
										},
										{
											"begin": 18327,
											"end": 18359,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18327,
											"end": 18359,
											"name": "ADD"
										},
										{
											"begin": 18327,
											"end": 18359,
											"name": "SWAP2"
										},
										{
											"begin": 18327,
											"end": 18359,
											"name": "POP"
										},
										{
											"begin": 18327,
											"end": 18359,
											"name": "POP"
										},
										{
											"begin": 18327,
											"end": 18359,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18327,
											"end": 18359,
											"name": "MLOAD"
										},
										{
											"begin": 18327,
											"end": 18359,
											"name": "DUP1"
										},
										{
											"begin": 18327,
											"end": 18359,
											"name": "SWAP2"
										},
										{
											"begin": 18327,
											"end": 18359,
											"name": "SUB"
										},
										{
											"begin": 18327,
											"end": 18359,
											"name": "SWAP1"
										},
										{
											"begin": 18327,
											"end": 18359,
											"name": "LOG3"
										},
										{
											"begin": 18050,
											"end": 18364,
											"name": "POP"
										},
										{
											"begin": 18050,
											"end": 18364,
											"name": "POP"
										},
										{
											"begin": 18050,
											"end": 18364,
											"name": "POP"
										},
										{
											"begin": 18050,
											"end": 18364,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 16058,
											"end": 16500,
											"name": "tag",
											"value": "104"
										},
										{
											"begin": 16058,
											"end": 16500,
											"name": "JUMPDEST"
										},
										{
											"begin": 16169,
											"end": 16170,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16151,
											"end": 16171,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16151,
											"end": 16171,
											"name": "AND"
										},
										{
											"begin": 16151,
											"end": 16157,
											"name": "DUP4"
										},
										{
											"begin": 16151,
											"end": 16171,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16151,
											"end": 16171,
											"name": "AND"
										},
										{
											"begin": 16151,
											"end": 16171,
											"name": "EQ"
										},
										{
											"begin": 16151,
											"end": 16171,
											"name": "ISZERO"
										},
										{
											"begin": 16143,
											"end": 16213,
											"name": "PUSH [tag]",
											"value": "166"
										},
										{
											"begin": 16143,
											"end": 16213,
											"name": "JUMPI"
										},
										{
											"begin": 16143,
											"end": 16213,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16143,
											"end": 16213,
											"name": "MLOAD"
										},
										{
											"begin": 16143,
											"end": 16213,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16143,
											"end": 16213,
											"name": "DUP2"
										},
										{
											"begin": 16143,
											"end": 16213,
											"name": "MSTORE"
										},
										{
											"begin": 16143,
											"end": 16213,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16143,
											"end": 16213,
											"name": "ADD"
										},
										{
											"begin": 16143,
											"end": 16213,
											"name": "DUP1"
										},
										{
											"begin": 16143,
											"end": 16213,
											"name": "DUP1"
										},
										{
											"begin": 16143,
											"end": 16213,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16143,
											"end": 16213,
											"name": "ADD"
										},
										{
											"begin": 16143,
											"end": 16213,
											"name": "DUP3"
										},
										{
											"begin": 16143,
											"end": 16213,
											"name": "DUP2"
										},
										{
											"begin": 16143,
											"end": 16213,
											"name": "SUB"
										},
										{
											"begin": 16143,
											"end": 16213,
											"name": "DUP3"
										},
										{
											"begin": 16143,
											"end": 16213,
											"name": "MSTORE"
										},
										{
											"begin": 16143,
											"end": 16213,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 16143,
											"end": 16213,
											"name": "DUP2"
										},
										{
											"begin": 16143,
											"end": 16213,
											"name": "MSTORE"
										},
										{
											"begin": 16143,
											"end": 16213,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16143,
											"end": 16213,
											"name": "ADD"
										},
										{
											"begin": 16143,
											"end": 16213,
											"name": "DUP1"
										},
										{
											"begin": 16143,
											"end": 16213,
											"name": "PUSH data",
											"value": "D26CF302D50B28DE74BE656B11D67092B32131E5712D1BCF08C4E976DACDA57"
										},
										{
											"begin": 16143,
											"end": 16213,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 16143,
											"end": 16213,
											"name": "SWAP2"
										},
										{
											"begin": 16143,
											"end": 16213,
											"name": "CODECOPY"
										},
										{
											"begin": 16143,
											"end": 16213,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16143,
											"end": 16213,
											"name": "ADD"
										},
										{
											"begin": 16143,
											"end": 16213,
											"name": "SWAP2"
										},
										{
											"begin": 16143,
											"end": 16213,
											"name": "POP"
										},
										{
											"begin": 16143,
											"end": 16213,
											"name": "POP"
										},
										{
											"begin": 16143,
											"end": 16213,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16143,
											"end": 16213,
											"name": "MLOAD"
										},
										{
											"begin": 16143,
											"end": 16213,
											"name": "DUP1"
										},
										{
											"begin": 16143,
											"end": 16213,
											"name": "SWAP2"
										},
										{
											"begin": 16143,
											"end": 16213,
											"name": "SUB"
										},
										{
											"begin": 16143,
											"end": 16213,
											"name": "SWAP1"
										},
										{
											"begin": 16143,
											"end": 16213,
											"name": "REVERT"
										},
										{
											"begin": 16143,
											"end": 16213,
											"name": "tag",
											"value": "166"
										},
										{
											"begin": 16143,
											"end": 16213,
											"name": "JUMPDEST"
										},
										{
											"begin": 16248,
											"end": 16249,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16227,
											"end": 16250,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16227,
											"end": 16250,
											"name": "AND"
										},
										{
											"begin": 16227,
											"end": 16236,
											"name": "DUP3"
										},
										{
											"begin": 16227,
											"end": 16250,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16227,
											"end": 16250,
											"name": "AND"
										},
										{
											"begin": 16227,
											"end": 16250,
											"name": "EQ"
										},
										{
											"begin": 16227,
											"end": 16250,
											"name": "ISZERO"
										},
										{
											"begin": 16219,
											"end": 16290,
											"name": "PUSH [tag]",
											"value": "167"
										},
										{
											"begin": 16219,
											"end": 16290,
											"name": "JUMPI"
										},
										{
											"begin": 16219,
											"end": 16290,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16219,
											"end": 16290,
											"name": "MLOAD"
										},
										{
											"begin": 16219,
											"end": 16290,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16219,
											"end": 16290,
											"name": "DUP2"
										},
										{
											"begin": 16219,
											"end": 16290,
											"name": "MSTORE"
										},
										{
											"begin": 16219,
											"end": 16290,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16219,
											"end": 16290,
											"name": "ADD"
										},
										{
											"begin": 16219,
											"end": 16290,
											"name": "DUP1"
										},
										{
											"begin": 16219,
											"end": 16290,
											"name": "DUP1"
										},
										{
											"begin": 16219,
											"end": 16290,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16219,
											"end": 16290,
											"name": "ADD"
										},
										{
											"begin": 16219,
											"end": 16290,
											"name": "DUP3"
										},
										{
											"begin": 16219,
											"end": 16290,
											"name": "DUP2"
										},
										{
											"begin": 16219,
											"end": 16290,
											"name": "SUB"
										},
										{
											"begin": 16219,
											"end": 16290,
											"name": "DUP3"
										},
										{
											"begin": 16219,
											"end": 16290,
											"name": "MSTORE"
										},
										{
											"begin": 16219,
											"end": 16290,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 16219,
											"end": 16290,
											"name": "DUP2"
										},
										{
											"begin": 16219,
											"end": 16290,
											"name": "MSTORE"
										},
										{
											"begin": 16219,
											"end": 16290,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16219,
											"end": 16290,
											"name": "ADD"
										},
										{
											"begin": 16219,
											"end": 16290,
											"name": "DUP1"
										},
										{
											"begin": 16219,
											"end": 16290,
											"name": "PUSH data",
											"value": "ADE9EFCB59E42E439FFE61509B352B1AF56D64CCB68D80B039B7B69578F371D2"
										},
										{
											"begin": 16219,
											"end": 16290,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 16219,
											"end": 16290,
											"name": "SWAP2"
										},
										{
											"begin": 16219,
											"end": 16290,
											"name": "CODECOPY"
										},
										{
											"begin": 16219,
											"end": 16290,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16219,
											"end": 16290,
											"name": "ADD"
										},
										{
											"begin": 16219,
											"end": 16290,
											"name": "SWAP2"
										},
										{
											"begin": 16219,
											"end": 16290,
											"name": "POP"
										},
										{
											"begin": 16219,
											"end": 16290,
											"name": "POP"
										},
										{
											"begin": 16219,
											"end": 16290,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16219,
											"end": 16290,
											"name": "MLOAD"
										},
										{
											"begin": 16219,
											"end": 16290,
											"name": "DUP1"
										},
										{
											"begin": 16219,
											"end": 16290,
											"name": "SWAP2"
										},
										{
											"begin": 16219,
											"end": 16290,
											"name": "SUB"
										},
										{
											"begin": 16219,
											"end": 16290,
											"name": "SWAP1"
										},
										{
											"begin": 16219,
											"end": 16290,
											"name": "REVERT"
										},
										{
											"begin": 16219,
											"end": 16290,
											"name": "tag",
											"value": "167"
										},
										{
											"begin": 16219,
											"end": 16290,
											"name": "JUMPDEST"
										},
										{
											"begin": 16317,
											"end": 16388,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 16339,
											"end": 16345,
											"name": "DUP2"
										},
										{
											"begin": 16317,
											"end": 16388,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16317,
											"end": 16388,
											"name": "MLOAD"
										},
										{
											"begin": 16317,
											"end": 16388,
											"name": "DUP1"
										},
										{
											"begin": 16317,
											"end": 16388,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 16317,
											"end": 16388,
											"name": "ADD"
										},
										{
											"begin": 16317,
											"end": 16388,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16317,
											"end": 16388,
											"name": "MSTORE"
										},
										{
											"begin": 16317,
											"end": 16388,
											"name": "DUP1"
										},
										{
											"begin": 16317,
											"end": 16388,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 16317,
											"end": 16388,
											"name": "DUP2"
										},
										{
											"begin": 16317,
											"end": 16388,
											"name": "MSTORE"
										},
										{
											"begin": 16317,
											"end": 16388,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16317,
											"end": 16388,
											"name": "ADD"
										},
										{
											"begin": 16317,
											"end": 16388,
											"name": "PUSH data",
											"value": "A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73"
										},
										{
											"begin": 16317,
											"end": 16388,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 16317,
											"end": 16388,
											"name": "SWAP2"
										},
										{
											"begin": 16317,
											"end": 16388,
											"name": "CODECOPY"
										},
										{
											"begin": 16317,
											"end": 16326,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16317,
											"end": 16334,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16327,
											"end": 16333,
											"name": "DUP8"
										},
										{
											"begin": 16317,
											"end": 16334,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16317,
											"end": 16334,
											"name": "AND"
										},
										{
											"begin": 16317,
											"end": 16334,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16317,
											"end": 16334,
											"name": "AND"
										},
										{
											"begin": 16317,
											"end": 16334,
											"name": "DUP2"
										},
										{
											"begin": 16317,
											"end": 16334,
											"name": "MSTORE"
										},
										{
											"begin": 16317,
											"end": 16334,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16317,
											"end": 16334,
											"name": "ADD"
										},
										{
											"begin": 16317,
											"end": 16334,
											"name": "SWAP1"
										},
										{
											"begin": 16317,
											"end": 16334,
											"name": "DUP2"
										},
										{
											"begin": 16317,
											"end": 16334,
											"name": "MSTORE"
										},
										{
											"begin": 16317,
											"end": 16334,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16317,
											"end": 16334,
											"name": "ADD"
										},
										{
											"begin": 16317,
											"end": 16334,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16317,
											"end": 16334,
											"name": "KECCAK256"
										},
										{
											"begin": 16317,
											"end": 16334,
											"name": "SLOAD"
										},
										{
											"begin": 16317,
											"end": 16338,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 16317,
											"end": 16338,
											"name": "SWAP1"
										},
										{
											"begin": 16317,
											"end": 16388,
											"name": "SWAP3"
										},
										{
											"begin": 16317,
											"end": 16388,
											"name": "SWAP2"
										},
										{
											"begin": 16317,
											"end": 16388,
											"name": "SWAP1"
										},
										{
											"begin": 16317,
											"end": 16388,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 16317,
											"end": 16388,
											"name": "AND"
										},
										{
											"begin": 16317,
											"end": 16388,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16317,
											"end": 16388,
											"name": "tag",
											"value": "168"
										},
										{
											"begin": 16317,
											"end": 16388,
											"name": "JUMPDEST"
										},
										{
											"begin": 16297,
											"end": 16306,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16297,
											"end": 16314,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16307,
											"end": 16313,
											"name": "DUP6"
										},
										{
											"begin": 16297,
											"end": 16314,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16297,
											"end": 16314,
											"name": "AND"
										},
										{
											"begin": 16297,
											"end": 16314,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16297,
											"end": 16314,
											"name": "AND"
										},
										{
											"begin": 16297,
											"end": 16314,
											"name": "DUP2"
										},
										{
											"begin": 16297,
											"end": 16314,
											"name": "MSTORE"
										},
										{
											"begin": 16297,
											"end": 16314,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16297,
											"end": 16314,
											"name": "ADD"
										},
										{
											"begin": 16297,
											"end": 16314,
											"name": "SWAP1"
										},
										{
											"begin": 16297,
											"end": 16314,
											"name": "DUP2"
										},
										{
											"begin": 16297,
											"end": 16314,
											"name": "MSTORE"
										},
										{
											"begin": 16297,
											"end": 16314,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16297,
											"end": 16314,
											"name": "ADD"
										},
										{
											"begin": 16297,
											"end": 16314,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16297,
											"end": 16314,
											"name": "KECCAK256"
										},
										{
											"begin": 16297,
											"end": 16388,
											"name": "DUP2"
										},
										{
											"begin": 16297,
											"end": 16388,
											"name": "SWAP1"
										},
										{
											"begin": 16297,
											"end": 16388,
											"name": "SSTORE"
										},
										{
											"begin": 16297,
											"end": 16388,
											"name": "POP"
										},
										{
											"begin": 16417,
											"end": 16449,
											"name": "PUSH [tag]",
											"value": "169"
										},
										{
											"begin": 16442,
											"end": 16448,
											"name": "DUP2"
										},
										{
											"begin": 16417,
											"end": 16426,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16417,
											"end": 16437,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16427,
											"end": 16436,
											"name": "DUP6"
										},
										{
											"begin": 16417,
											"end": 16437,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16417,
											"end": 16437,
											"name": "AND"
										},
										{
											"begin": 16417,
											"end": 16437,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16417,
											"end": 16437,
											"name": "AND"
										},
										{
											"begin": 16417,
											"end": 16437,
											"name": "DUP2"
										},
										{
											"begin": 16417,
											"end": 16437,
											"name": "MSTORE"
										},
										{
											"begin": 16417,
											"end": 16437,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16417,
											"end": 16437,
											"name": "ADD"
										},
										{
											"begin": 16417,
											"end": 16437,
											"name": "SWAP1"
										},
										{
											"begin": 16417,
											"end": 16437,
											"name": "DUP2"
										},
										{
											"begin": 16417,
											"end": 16437,
											"name": "MSTORE"
										},
										{
											"begin": 16417,
											"end": 16437,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16417,
											"end": 16437,
											"name": "ADD"
										},
										{
											"begin": 16417,
											"end": 16437,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16417,
											"end": 16437,
											"name": "KECCAK256"
										},
										{
											"begin": 16417,
											"end": 16437,
											"name": "SLOAD"
										},
										{
											"begin": 16417,
											"end": 16441,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 16417,
											"end": 16441,
											"name": "SWAP1"
										},
										{
											"begin": 16417,
											"end": 16449,
											"name": "SWAP2"
										},
										{
											"begin": 16417,
											"end": 16449,
											"name": "SWAP1"
										},
										{
											"begin": 16417,
											"end": 16449,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 16417,
											"end": 16449,
											"name": "AND"
										},
										{
											"begin": 16417,
											"end": 16449,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16417,
											"end": 16449,
											"name": "tag",
											"value": "169"
										},
										{
											"begin": 16417,
											"end": 16449,
											"name": "JUMPDEST"
										},
										{
											"begin": 16394,
											"end": 16403,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16394,
											"end": 16414,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16404,
											"end": 16413,
											"name": "DUP5"
										},
										{
											"begin": 16394,
											"end": 16414,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16394,
											"end": 16414,
											"name": "AND"
										},
										{
											"begin": 16394,
											"end": 16414,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16394,
											"end": 16414,
											"name": "AND"
										},
										{
											"begin": 16394,
											"end": 16414,
											"name": "DUP2"
										},
										{
											"begin": 16394,
											"end": 16414,
											"name": "MSTORE"
										},
										{
											"begin": 16394,
											"end": 16414,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16394,
											"end": 16414,
											"name": "ADD"
										},
										{
											"begin": 16394,
											"end": 16414,
											"name": "SWAP1"
										},
										{
											"begin": 16394,
											"end": 16414,
											"name": "DUP2"
										},
										{
											"begin": 16394,
											"end": 16414,
											"name": "MSTORE"
										},
										{
											"begin": 16394,
											"end": 16414,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16394,
											"end": 16414,
											"name": "ADD"
										},
										{
											"begin": 16394,
											"end": 16414,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16394,
											"end": 16414,
											"name": "KECCAK256"
										},
										{
											"begin": 16394,
											"end": 16449,
											"name": "DUP2"
										},
										{
											"begin": 16394,
											"end": 16449,
											"name": "SWAP1"
										},
										{
											"begin": 16394,
											"end": 16449,
											"name": "SSTORE"
										},
										{
											"begin": 16394,
											"end": 16449,
											"name": "POP"
										},
										{
											"begin": 16477,
											"end": 16486,
											"name": "DUP2"
										},
										{
											"begin": 16460,
											"end": 16495,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16460,
											"end": 16495,
											"name": "AND"
										},
										{
											"begin": 16469,
											"end": 16475,
											"name": "DUP4"
										},
										{
											"begin": 16460,
											"end": 16495,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16460,
											"end": 16495,
											"name": "AND"
										},
										{
											"begin": 16460,
											"end": 16495,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 16488,
											"end": 16494,
											"name": "DUP4"
										},
										{
											"begin": 16460,
											"end": 16495,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16460,
											"end": 16495,
											"name": "MLOAD"
										},
										{
											"begin": 16460,
											"end": 16495,
											"name": "DUP1"
										},
										{
											"begin": 16460,
											"end": 16495,
											"name": "DUP3"
										},
										{
											"begin": 16460,
											"end": 16495,
											"name": "DUP2"
										},
										{
											"begin": 16460,
											"end": 16495,
											"name": "MSTORE"
										},
										{
											"begin": 16460,
											"end": 16495,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16460,
											"end": 16495,
											"name": "ADD"
										},
										{
											"begin": 16460,
											"end": 16495,
											"name": "SWAP2"
										},
										{
											"begin": 16460,
											"end": 16495,
											"name": "POP"
										},
										{
											"begin": 16460,
											"end": 16495,
											"name": "POP"
										},
										{
											"begin": 16460,
											"end": 16495,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16460,
											"end": 16495,
											"name": "MLOAD"
										},
										{
											"begin": 16460,
											"end": 16495,
											"name": "DUP1"
										},
										{
											"begin": 16460,
											"end": 16495,
											"name": "SWAP2"
										},
										{
											"begin": 16460,
											"end": 16495,
											"name": "SUB"
										},
										{
											"begin": 16460,
											"end": 16495,
											"name": "SWAP1"
										},
										{
											"begin": 16460,
											"end": 16495,
											"name": "LOG3"
										},
										{
											"begin": 16058,
											"end": 16500,
											"name": "POP"
										},
										{
											"begin": 16058,
											"end": 16500,
											"name": "POP"
										},
										{
											"begin": 16058,
											"end": 16500,
											"name": "POP"
										},
										{
											"begin": 16058,
											"end": 16500,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5529,
											"end": 5702,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 5529,
											"end": 5702,
											"name": "JUMPDEST"
										},
										{
											"begin": 5615,
											"end": 5622,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5643,
											"end": 5644,
											"name": "DUP4"
										},
										{
											"begin": 5638,
											"end": 5639,
											"name": "DUP4"
										},
										{
											"begin": 5638,
											"end": 5644,
											"name": "GT"
										},
										{
											"begin": 5638,
											"end": 5644,
											"name": "ISZERO"
										},
										{
											"begin": 5646,
											"end": 5658,
											"name": "DUP3"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "SWAP1"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "PUSH [tag]",
											"value": "171"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "JUMPI"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "MLOAD"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "DUP2"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "MSTORE"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "ADD"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "DUP1"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "DUP1"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "ADD"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "DUP3"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "DUP2"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "SUB"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "DUP3"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "MSTORE"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "DUP4"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "DUP2"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "DUP2"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "MLOAD"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "DUP2"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "MSTORE"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "ADD"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "SWAP2"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "POP"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "DUP1"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "MLOAD"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "SWAP1"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "ADD"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "SWAP1"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "DUP1"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "DUP4"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "172"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "174"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "172"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "174"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "POP"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "POP"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "POP"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "SWAP1"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "POP"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "SWAP1"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "DUP2"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "ADD"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "SWAP1"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "AND"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "DUP1"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "ISZERO"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "JUMPI"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "DUP1"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "DUP3"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "SUB"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "DUP1"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "MLOAD"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "DUP4"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "SUB"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "EXP"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "SUB"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "NOT"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "AND"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "DUP2"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "MSTORE"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "ADD"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "SWAP2"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "POP"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "tag",
											"value": "175"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "JUMPDEST"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "POP"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "SWAP3"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "POP"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "POP"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "POP"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "MLOAD"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "DUP1"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "SWAP2"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "SUB"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "SWAP1"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "REVERT"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "tag",
											"value": "171"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "JUMPDEST"
										},
										{
											"begin": 5630,
											"end": 5659,
											"name": "POP"
										},
										{
											"begin": 5665,
											"end": 5674,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5681,
											"end": 5682,
											"name": "DUP4"
										},
										{
											"begin": 5677,
											"end": 5678,
											"name": "DUP6"
										},
										{
											"begin": 5677,
											"end": 5682,
											"name": "SUB"
										},
										{
											"begin": 5665,
											"end": 5682,
											"name": "SWAP1"
										},
										{
											"begin": 5665,
											"end": 5682,
											"name": "POP"
										},
										{
											"begin": 5696,
											"end": 5697,
											"name": "DUP1"
										},
										{
											"begin": 5689,
											"end": 5697,
											"name": "SWAP2"
										},
										{
											"begin": 5689,
											"end": 5697,
											"name": "POP"
										},
										{
											"begin": 5689,
											"end": 5697,
											"name": "POP"
										},
										{
											"begin": 5529,
											"end": 5702,
											"name": "SWAP4"
										},
										{
											"begin": 5529,
											"end": 5702,
											"name": "SWAP3"
										},
										{
											"begin": 5529,
											"end": 5702,
											"name": "POP"
										},
										{
											"begin": 5529,
											"end": 5702,
											"name": "POP"
										},
										{
											"begin": 5529,
											"end": 5702,
											"name": "POP"
										},
										{
											"begin": 5529,
											"end": 5702,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4731,
											"end": 4893,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 4731,
											"end": 4893,
											"name": "JUMPDEST"
										},
										{
											"begin": 4789,
											"end": 4796,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4804,
											"end": 4813,
											"name": "DUP1"
										},
										{
											"begin": 4820,
											"end": 4821,
											"name": "DUP3"
										},
										{
											"begin": 4816,
											"end": 4817,
											"name": "DUP5"
										},
										{
											"begin": 4816,
											"end": 4821,
											"name": "ADD"
										},
										{
											"begin": 4804,
											"end": 4821,
											"name": "SWAP1"
										},
										{
											"begin": 4804,
											"end": 4821,
											"name": "POP"
										},
										{
											"begin": 4840,
											"end": 4841,
											"name": "DUP4"
										},
										{
											"begin": 4835,
											"end": 4836,
											"name": "DUP2"
										},
										{
											"begin": 4835,
											"end": 4841,
											"name": "LT"
										},
										{
											"begin": 4835,
											"end": 4841,
											"name": "ISZERO"
										},
										{
											"begin": 4827,
											"end": 4873,
											"name": "PUSH [tag]",
											"value": "177"
										},
										{
											"begin": 4827,
											"end": 4873,
											"name": "JUMPI"
										},
										{
											"begin": 4827,
											"end": 4873,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4827,
											"end": 4873,
											"name": "MLOAD"
										},
										{
											"begin": 4827,
											"end": 4873,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4827,
											"end": 4873,
											"name": "DUP2"
										},
										{
											"begin": 4827,
											"end": 4873,
											"name": "MSTORE"
										},
										{
											"begin": 4827,
											"end": 4873,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4827,
											"end": 4873,
											"name": "ADD"
										},
										{
											"begin": 4827,
											"end": 4873,
											"name": "DUP1"
										},
										{
											"begin": 4827,
											"end": 4873,
											"name": "DUP1"
										},
										{
											"begin": 4827,
											"end": 4873,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4827,
											"end": 4873,
											"name": "ADD"
										},
										{
											"begin": 4827,
											"end": 4873,
											"name": "DUP3"
										},
										{
											"begin": 4827,
											"end": 4873,
											"name": "DUP2"
										},
										{
											"begin": 4827,
											"end": 4873,
											"name": "SUB"
										},
										{
											"begin": 4827,
											"end": 4873,
											"name": "DUP3"
										},
										{
											"begin": 4827,
											"end": 4873,
											"name": "MSTORE"
										},
										{
											"begin": 4827,
											"end": 4873,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 4827,
											"end": 4873,
											"name": "DUP2"
										},
										{
											"begin": 4827,
											"end": 4873,
											"name": "MSTORE"
										},
										{
											"begin": 4827,
											"end": 4873,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4827,
											"end": 4873,
											"name": "ADD"
										},
										{
											"begin": 4827,
											"end": 4873,
											"name": "DUP1"
										},
										{
											"begin": 4827,
											"end": 4873,
											"name": "PUSH",
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 4827,
											"end": 4873,
											"name": "DUP2"
										},
										{
											"begin": 4827,
											"end": 4873,
											"name": "MSTORE"
										},
										{
											"begin": 4827,
											"end": 4873,
											"name": "POP"
										},
										{
											"begin": 4827,
											"end": 4873,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4827,
											"end": 4873,
											"name": "ADD"
										},
										{
											"begin": 4827,
											"end": 4873,
											"name": "SWAP2"
										},
										{
											"begin": 4827,
											"end": 4873,
											"name": "POP"
										},
										{
											"begin": 4827,
											"end": 4873,
											"name": "POP"
										},
										{
											"begin": 4827,
											"end": 4873,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4827,
											"end": 4873,
											"name": "MLOAD"
										},
										{
											"begin": 4827,
											"end": 4873,
											"name": "DUP1"
										},
										{
											"begin": 4827,
											"end": 4873,
											"name": "SWAP2"
										},
										{
											"begin": 4827,
											"end": 4873,
											"name": "SUB"
										},
										{
											"begin": 4827,
											"end": 4873,
											"name": "SWAP1"
										},
										{
											"begin": 4827,
											"end": 4873,
											"name": "REVERT"
										},
										{
											"begin": 4827,
											"end": 4873,
											"name": "tag",
											"value": "177"
										},
										{
											"begin": 4827,
											"end": 4873,
											"name": "JUMPDEST"
										},
										{
											"begin": 4887,
											"end": 4888,
											"name": "DUP1"
										},
										{
											"begin": 4880,
											"end": 4888,
											"name": "SWAP2"
										},
										{
											"begin": 4880,
											"end": 4888,
											"name": "POP"
										},
										{
											"begin": 4880,
											"end": 4888,
											"name": "POP"
										},
										{
											"begin": 4731,
											"end": 4893,
											"name": "SWAP3"
										},
										{
											"begin": 4731,
											"end": 4893,
											"name": "SWAP2"
										},
										{
											"begin": 4731,
											"end": 4893,
											"name": "POP"
										},
										{
											"begin": 4731,
											"end": 4893,
											"name": "POP"
										},
										{
											"begin": 4731,
											"end": 4893,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 17329,
											"end": 17653,
											"name": "tag",
											"value": "120"
										},
										{
											"begin": 17329,
											"end": 17653,
											"name": "JUMPDEST"
										},
										{
											"begin": 17419,
											"end": 17420,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17400,
											"end": 17421,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17400,
											"end": 17421,
											"name": "AND"
										},
										{
											"begin": 17400,
											"end": 17407,
											"name": "DUP3"
										},
										{
											"begin": 17400,
											"end": 17421,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17400,
											"end": 17421,
											"name": "AND"
										},
										{
											"begin": 17400,
											"end": 17421,
											"name": "EQ"
										},
										{
											"begin": 17400,
											"end": 17421,
											"name": "ISZERO"
										},
										{
											"begin": 17392,
											"end": 17459,
											"name": "PUSH [tag]",
											"value": "179"
										},
										{
											"begin": 17392,
											"end": 17459,
											"name": "JUMPI"
										},
										{
											"begin": 17392,
											"end": 17459,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17392,
											"end": 17459,
											"name": "MLOAD"
										},
										{
											"begin": 17392,
											"end": 17459,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17392,
											"end": 17459,
											"name": "DUP2"
										},
										{
											"begin": 17392,
											"end": 17459,
											"name": "MSTORE"
										},
										{
											"begin": 17392,
											"end": 17459,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17392,
											"end": 17459,
											"name": "ADD"
										},
										{
											"begin": 17392,
											"end": 17459,
											"name": "DUP1"
										},
										{
											"begin": 17392,
											"end": 17459,
											"name": "DUP1"
										},
										{
											"begin": 17392,
											"end": 17459,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17392,
											"end": 17459,
											"name": "ADD"
										},
										{
											"begin": 17392,
											"end": 17459,
											"name": "DUP3"
										},
										{
											"begin": 17392,
											"end": 17459,
											"name": "DUP2"
										},
										{
											"begin": 17392,
											"end": 17459,
											"name": "SUB"
										},
										{
											"begin": 17392,
											"end": 17459,
											"name": "DUP3"
										},
										{
											"begin": 17392,
											"end": 17459,
											"name": "MSTORE"
										},
										{
											"begin": 17392,
											"end": 17459,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 17392,
											"end": 17459,
											"name": "DUP2"
										},
										{
											"begin": 17392,
											"end": 17459,
											"name": "MSTORE"
										},
										{
											"begin": 17392,
											"end": 17459,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17392,
											"end": 17459,
											"name": "ADD"
										},
										{
											"begin": 17392,
											"end": 17459,
											"name": "DUP1"
										},
										{
											"begin": 17392,
											"end": 17459,
											"name": "PUSH data",
											"value": "B81EDBF10508D9B81724F18FF8F3D8BFBA9790734CE1F1C54DFE1030B4914855"
										},
										{
											"begin": 17392,
											"end": 17459,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 17392,
											"end": 17459,
											"name": "SWAP2"
										},
										{
											"begin": 17392,
											"end": 17459,
											"name": "CODECOPY"
										},
										{
											"begin": 17392,
											"end": 17459,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17392,
											"end": 17459,
											"name": "ADD"
										},
										{
											"begin": 17392,
											"end": 17459,
											"name": "SWAP2"
										},
										{
											"begin": 17392,
											"end": 17459,
											"name": "POP"
										},
										{
											"begin": 17392,
											"end": 17459,
											"name": "POP"
										},
										{
											"begin": 17392,
											"end": 17459,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17392,
											"end": 17459,
											"name": "MLOAD"
										},
										{
											"begin": 17392,
											"end": 17459,
											"name": "DUP1"
										},
										{
											"begin": 17392,
											"end": 17459,
											"name": "SWAP2"
										},
										{
											"begin": 17392,
											"end": 17459,
											"name": "SUB"
										},
										{
											"begin": 17392,
											"end": 17459,
											"name": "SWAP1"
										},
										{
											"begin": 17392,
											"end": 17459,
											"name": "REVERT"
										},
										{
											"begin": 17392,
											"end": 17459,
											"name": "tag",
											"value": "179"
										},
										{
											"begin": 17392,
											"end": 17459,
											"name": "JUMPDEST"
										},
										{
											"begin": 17487,
											"end": 17555,
											"name": "PUSH [tag]",
											"value": "180"
										},
										{
											"begin": 17510,
											"end": 17516,
											"name": "DUP2"
										},
										{
											"begin": 17487,
											"end": 17555,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17487,
											"end": 17555,
											"name": "MLOAD"
										},
										{
											"begin": 17487,
											"end": 17555,
											"name": "DUP1"
										},
										{
											"begin": 17487,
											"end": 17555,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 17487,
											"end": 17555,
											"name": "ADD"
										},
										{
											"begin": 17487,
											"end": 17555,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17487,
											"end": 17555,
											"name": "MSTORE"
										},
										{
											"begin": 17487,
											"end": 17555,
											"name": "DUP1"
										},
										{
											"begin": 17487,
											"end": 17555,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 17487,
											"end": 17555,
											"name": "DUP2"
										},
										{
											"begin": 17487,
											"end": 17555,
											"name": "MSTORE"
										},
										{
											"begin": 17487,
											"end": 17555,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17487,
											"end": 17555,
											"name": "ADD"
										},
										{
											"begin": 17487,
											"end": 17555,
											"name": "PUSH data",
											"value": "DEAA84B30175FD0578812C46240362B7914652A35E6707AD7E1556891E4AE032"
										},
										{
											"begin": 17487,
											"end": 17555,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 17487,
											"end": 17555,
											"name": "SWAP2"
										},
										{
											"begin": 17487,
											"end": 17555,
											"name": "CODECOPY"
										},
										{
											"begin": 17487,
											"end": 17496,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 17487,
											"end": 17505,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17497,
											"end": 17504,
											"name": "DUP7"
										},
										{
											"begin": 17487,
											"end": 17505,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17487,
											"end": 17505,
											"name": "AND"
										},
										{
											"begin": 17487,
											"end": 17505,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17487,
											"end": 17505,
											"name": "AND"
										},
										{
											"begin": 17487,
											"end": 17505,
											"name": "DUP2"
										},
										{
											"begin": 17487,
											"end": 17505,
											"name": "MSTORE"
										},
										{
											"begin": 17487,
											"end": 17505,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17487,
											"end": 17505,
											"name": "ADD"
										},
										{
											"begin": 17487,
											"end": 17505,
											"name": "SWAP1"
										},
										{
											"begin": 17487,
											"end": 17505,
											"name": "DUP2"
										},
										{
											"begin": 17487,
											"end": 17505,
											"name": "MSTORE"
										},
										{
											"begin": 17487,
											"end": 17505,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17487,
											"end": 17505,
											"name": "ADD"
										},
										{
											"begin": 17487,
											"end": 17505,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17487,
											"end": 17505,
											"name": "KECCAK256"
										},
										{
											"begin": 17487,
											"end": 17505,
											"name": "SLOAD"
										},
										{
											"begin": 17487,
											"end": 17509,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 17487,
											"end": 17509,
											"name": "SWAP1"
										},
										{
											"begin": 17487,
											"end": 17555,
											"name": "SWAP3"
										},
										{
											"begin": 17487,
											"end": 17555,
											"name": "SWAP2"
										},
										{
											"begin": 17487,
											"end": 17555,
											"name": "SWAP1"
										},
										{
											"begin": 17487,
											"end": 17555,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 17487,
											"end": 17555,
											"name": "AND"
										},
										{
											"begin": 17487,
											"end": 17555,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17487,
											"end": 17555,
											"name": "tag",
											"value": "180"
										},
										{
											"begin": 17487,
											"end": 17555,
											"name": "JUMPDEST"
										},
										{
											"begin": 17466,
											"end": 17475,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 17466,
											"end": 17484,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17476,
											"end": 17483,
											"name": "DUP5"
										},
										{
											"begin": 17466,
											"end": 17484,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17466,
											"end": 17484,
											"name": "AND"
										},
										{
											"begin": 17466,
											"end": 17484,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17466,
											"end": 17484,
											"name": "AND"
										},
										{
											"begin": 17466,
											"end": 17484,
											"name": "DUP2"
										},
										{
											"begin": 17466,
											"end": 17484,
											"name": "MSTORE"
										},
										{
											"begin": 17466,
											"end": 17484,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17466,
											"end": 17484,
											"name": "ADD"
										},
										{
											"begin": 17466,
											"end": 17484,
											"name": "SWAP1"
										},
										{
											"begin": 17466,
											"end": 17484,
											"name": "DUP2"
										},
										{
											"begin": 17466,
											"end": 17484,
											"name": "MSTORE"
										},
										{
											"begin": 17466,
											"end": 17484,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17466,
											"end": 17484,
											"name": "ADD"
										},
										{
											"begin": 17466,
											"end": 17484,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17466,
											"end": 17484,
											"name": "KECCAK256"
										},
										{
											"begin": 17466,
											"end": 17555,
											"name": "DUP2"
										},
										{
											"begin": 17466,
											"end": 17555,
											"name": "SWAP1"
										},
										{
											"begin": 17466,
											"end": 17555,
											"name": "SSTORE"
										},
										{
											"begin": 17466,
											"end": 17555,
											"name": "POP"
										},
										{
											"begin": 17576,
											"end": 17600,
											"name": "PUSH [tag]",
											"value": "181"
										},
										{
											"begin": 17593,
											"end": 17599,
											"name": "DUP2"
										},
										{
											"begin": 17576,
											"end": 17588,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 17576,
											"end": 17588,
											"name": "SLOAD"
										},
										{
											"begin": 17576,
											"end": 17592,
											"name": "PUSH [tag]",
											"value": "182"
										},
										{
											"begin": 17576,
											"end": 17592,
											"name": "SWAP1"
										},
										{
											"begin": 17576,
											"end": 17600,
											"name": "SWAP2"
										},
										{
											"begin": 17576,
											"end": 17600,
											"name": "SWAP1"
										},
										{
											"begin": 17576,
											"end": 17600,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 17576,
											"end": 17600,
											"name": "AND"
										},
										{
											"begin": 17576,
											"end": 17600,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17576,
											"end": 17600,
											"name": "tag",
											"value": "181"
										},
										{
											"begin": 17576,
											"end": 17600,
											"name": "JUMPDEST"
										},
										{
											"begin": 17561,
											"end": 17573,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 17561,
											"end": 17600,
											"name": "DUP2"
										},
										{
											"begin": 17561,
											"end": 17600,
											"name": "SWAP1"
										},
										{
											"begin": 17561,
											"end": 17600,
											"name": "SSTORE"
										},
										{
											"begin": 17561,
											"end": 17600,
											"name": "POP"
										},
										{
											"begin": 17637,
											"end": 17638,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17611,
											"end": 17648,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17611,
											"end": 17648,
											"name": "AND"
										},
										{
											"begin": 17620,
											"end": 17627,
											"name": "DUP3"
										},
										{
											"begin": 17611,
											"end": 17648,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17611,
											"end": 17648,
											"name": "AND"
										},
										{
											"begin": 17611,
											"end": 17648,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 17641,
											"end": 17647,
											"name": "DUP4"
										},
										{
											"begin": 17611,
											"end": 17648,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17611,
											"end": 17648,
											"name": "MLOAD"
										},
										{
											"begin": 17611,
											"end": 17648,
											"name": "DUP1"
										},
										{
											"begin": 17611,
											"end": 17648,
											"name": "DUP3"
										},
										{
											"begin": 17611,
											"end": 17648,
											"name": "DUP2"
										},
										{
											"begin": 17611,
											"end": 17648,
											"name": "MSTORE"
										},
										{
											"begin": 17611,
											"end": 17648,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17611,
											"end": 17648,
											"name": "ADD"
										},
										{
											"begin": 17611,
											"end": 17648,
											"name": "SWAP2"
										},
										{
											"begin": 17611,
											"end": 17648,
											"name": "POP"
										},
										{
											"begin": 17611,
											"end": 17648,
											"name": "POP"
										},
										{
											"begin": 17611,
											"end": 17648,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17611,
											"end": 17648,
											"name": "MLOAD"
										},
										{
											"begin": 17611,
											"end": 17648,
											"name": "DUP1"
										},
										{
											"begin": 17611,
											"end": 17648,
											"name": "SWAP2"
										},
										{
											"begin": 17611,
											"end": 17648,
											"name": "SUB"
										},
										{
											"begin": 17611,
											"end": 17648,
											"name": "SWAP1"
										},
										{
											"begin": 17611,
											"end": 17648,
											"name": "LOG3"
										},
										{
											"begin": 17329,
											"end": 17653,
											"name": "POP"
										},
										{
											"begin": 17329,
											"end": 17653,
											"name": "POP"
										},
										{
											"begin": 17329,
											"end": 17653,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 16750,
											"end": 17034,
											"name": "tag",
											"value": "139"
										},
										{
											"begin": 16750,
											"end": 17034,
											"name": "JUMPDEST"
										},
										{
											"begin": 16840,
											"end": 16841,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16821,
											"end": 16842,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16821,
											"end": 16842,
											"name": "AND"
										},
										{
											"begin": 16821,
											"end": 16828,
											"name": "DUP3"
										},
										{
											"begin": 16821,
											"end": 16842,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16821,
											"end": 16842,
											"name": "AND"
										},
										{
											"begin": 16821,
											"end": 16842,
											"name": "EQ"
										},
										{
											"begin": 16821,
											"end": 16842,
											"name": "ISZERO"
										},
										{
											"begin": 16813,
											"end": 16878,
											"name": "PUSH [tag]",
											"value": "184"
										},
										{
											"begin": 16813,
											"end": 16878,
											"name": "JUMPI"
										},
										{
											"begin": 16813,
											"end": 16878,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16813,
											"end": 16878,
											"name": "MLOAD"
										},
										{
											"begin": 16813,
											"end": 16878,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16813,
											"end": 16878,
											"name": "DUP2"
										},
										{
											"begin": 16813,
											"end": 16878,
											"name": "MSTORE"
										},
										{
											"begin": 16813,
											"end": 16878,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16813,
											"end": 16878,
											"name": "ADD"
										},
										{
											"begin": 16813,
											"end": 16878,
											"name": "DUP1"
										},
										{
											"begin": 16813,
											"end": 16878,
											"name": "DUP1"
										},
										{
											"begin": 16813,
											"end": 16878,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16813,
											"end": 16878,
											"name": "ADD"
										},
										{
											"begin": 16813,
											"end": 16878,
											"name": "DUP3"
										},
										{
											"begin": 16813,
											"end": 16878,
											"name": "DUP2"
										},
										{
											"begin": 16813,
											"end": 16878,
											"name": "SUB"
										},
										{
											"begin": 16813,
											"end": 16878,
											"name": "DUP3"
										},
										{
											"begin": 16813,
											"end": 16878,
											"name": "MSTORE"
										},
										{
											"begin": 16813,
											"end": 16878,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 16813,
											"end": 16878,
											"name": "DUP2"
										},
										{
											"begin": 16813,
											"end": 16878,
											"name": "MSTORE"
										},
										{
											"begin": 16813,
											"end": 16878,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16813,
											"end": 16878,
											"name": "ADD"
										},
										{
											"begin": 16813,
											"end": 16878,
											"name": "DUP1"
										},
										{
											"begin": 16813,
											"end": 16878,
											"name": "PUSH",
											"value": "42455032303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 16813,
											"end": 16878,
											"name": "DUP2"
										},
										{
											"begin": 16813,
											"end": 16878,
											"name": "MSTORE"
										},
										{
											"begin": 16813,
											"end": 16878,
											"name": "POP"
										},
										{
											"begin": 16813,
											"end": 16878,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16813,
											"end": 16878,
											"name": "ADD"
										},
										{
											"begin": 16813,
											"end": 16878,
											"name": "SWAP2"
										},
										{
											"begin": 16813,
											"end": 16878,
											"name": "POP"
										},
										{
											"begin": 16813,
											"end": 16878,
											"name": "POP"
										},
										{
											"begin": 16813,
											"end": 16878,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16813,
											"end": 16878,
											"name": "MLOAD"
										},
										{
											"begin": 16813,
											"end": 16878,
											"name": "DUP1"
										},
										{
											"begin": 16813,
											"end": 16878,
											"name": "SWAP2"
										},
										{
											"begin": 16813,
											"end": 16878,
											"name": "SUB"
										},
										{
											"begin": 16813,
											"end": 16878,
											"name": "SWAP1"
										},
										{
											"begin": 16813,
											"end": 16878,
											"name": "REVERT"
										},
										{
											"begin": 16813,
											"end": 16878,
											"name": "tag",
											"value": "184"
										},
										{
											"begin": 16813,
											"end": 16878,
											"name": "JUMPDEST"
										},
										{
											"begin": 16900,
											"end": 16924,
											"name": "PUSH [tag]",
											"value": "185"
										},
										{
											"begin": 16917,
											"end": 16923,
											"name": "DUP2"
										},
										{
											"begin": 16900,
											"end": 16912,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 16900,
											"end": 16912,
											"name": "SLOAD"
										},
										{
											"begin": 16900,
											"end": 16916,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 16900,
											"end": 16916,
											"name": "SWAP1"
										},
										{
											"begin": 16900,
											"end": 16924,
											"name": "SWAP2"
										},
										{
											"begin": 16900,
											"end": 16924,
											"name": "SWAP1"
										},
										{
											"begin": 16900,
											"end": 16924,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 16900,
											"end": 16924,
											"name": "AND"
										},
										{
											"begin": 16900,
											"end": 16924,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16900,
											"end": 16924,
											"name": "tag",
											"value": "185"
										},
										{
											"begin": 16900,
											"end": 16924,
											"name": "JUMPDEST"
										},
										{
											"begin": 16885,
											"end": 16897,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 16885,
											"end": 16924,
											"name": "DUP2"
										},
										{
											"begin": 16885,
											"end": 16924,
											"name": "SWAP1"
										},
										{
											"begin": 16885,
											"end": 16924,
											"name": "SSTORE"
										},
										{
											"begin": 16885,
											"end": 16924,
											"name": "POP"
										},
										{
											"begin": 16951,
											"end": 16981,
											"name": "PUSH [tag]",
											"value": "186"
										},
										{
											"begin": 16974,
											"end": 16980,
											"name": "DUP2"
										},
										{
											"begin": 16951,
											"end": 16960,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16951,
											"end": 16969,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16961,
											"end": 16968,
											"name": "DUP6"
										},
										{
											"begin": 16951,
											"end": 16969,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16951,
											"end": 16969,
											"name": "AND"
										},
										{
											"begin": 16951,
											"end": 16969,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16951,
											"end": 16969,
											"name": "AND"
										},
										{
											"begin": 16951,
											"end": 16969,
											"name": "DUP2"
										},
										{
											"begin": 16951,
											"end": 16969,
											"name": "MSTORE"
										},
										{
											"begin": 16951,
											"end": 16969,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16951,
											"end": 16969,
											"name": "ADD"
										},
										{
											"begin": 16951,
											"end": 16969,
											"name": "SWAP1"
										},
										{
											"begin": 16951,
											"end": 16969,
											"name": "DUP2"
										},
										{
											"begin": 16951,
											"end": 16969,
											"name": "MSTORE"
										},
										{
											"begin": 16951,
											"end": 16969,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16951,
											"end": 16969,
											"name": "ADD"
										},
										{
											"begin": 16951,
											"end": 16969,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16951,
											"end": 16969,
											"name": "KECCAK256"
										},
										{
											"begin": 16951,
											"end": 16969,
											"name": "SLOAD"
										},
										{
											"begin": 16951,
											"end": 16973,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 16951,
											"end": 16973,
											"name": "SWAP1"
										},
										{
											"begin": 16951,
											"end": 16981,
											"name": "SWAP2"
										},
										{
											"begin": 16951,
											"end": 16981,
											"name": "SWAP1"
										},
										{
											"begin": 16951,
											"end": 16981,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 16951,
											"end": 16981,
											"name": "AND"
										},
										{
											"begin": 16951,
											"end": 16981,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16951,
											"end": 16981,
											"name": "tag",
											"value": "186"
										},
										{
											"begin": 16951,
											"end": 16981,
											"name": "JUMPDEST"
										},
										{
											"begin": 16930,
											"end": 16939,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16930,
											"end": 16948,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16940,
											"end": 16947,
											"name": "DUP5"
										},
										{
											"begin": 16930,
											"end": 16948,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16930,
											"end": 16948,
											"name": "AND"
										},
										{
											"begin": 16930,
											"end": 16948,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16930,
											"end": 16948,
											"name": "AND"
										},
										{
											"begin": 16930,
											"end": 16948,
											"name": "DUP2"
										},
										{
											"begin": 16930,
											"end": 16948,
											"name": "MSTORE"
										},
										{
											"begin": 16930,
											"end": 16948,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16930,
											"end": 16948,
											"name": "ADD"
										},
										{
											"begin": 16930,
											"end": 16948,
											"name": "SWAP1"
										},
										{
											"begin": 16930,
											"end": 16948,
											"name": "DUP2"
										},
										{
											"begin": 16930,
											"end": 16948,
											"name": "MSTORE"
										},
										{
											"begin": 16930,
											"end": 16948,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16930,
											"end": 16948,
											"name": "ADD"
										},
										{
											"begin": 16930,
											"end": 16948,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16930,
											"end": 16948,
											"name": "KECCAK256"
										},
										{
											"begin": 16930,
											"end": 16981,
											"name": "DUP2"
										},
										{
											"begin": 16930,
											"end": 16981,
											"name": "SWAP1"
										},
										{
											"begin": 16930,
											"end": 16981,
											"name": "SSTORE"
										},
										{
											"begin": 16930,
											"end": 16981,
											"name": "POP"
										},
										{
											"begin": 17013,
											"end": 17020,
											"name": "DUP2"
										},
										{
											"begin": 16992,
											"end": 17029,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16992,
											"end": 17029,
											"name": "AND"
										},
										{
											"begin": 17009,
											"end": 17010,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16992,
											"end": 17029,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16992,
											"end": 17029,
											"name": "AND"
										},
										{
											"begin": 16992,
											"end": 17029,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 17022,
											"end": 17028,
											"name": "DUP4"
										},
										{
											"begin": 16992,
											"end": 17029,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16992,
											"end": 17029,
											"name": "MLOAD"
										},
										{
											"begin": 16992,
											"end": 17029,
											"name": "DUP1"
										},
										{
											"begin": 16992,
											"end": 17029,
											"name": "DUP3"
										},
										{
											"begin": 16992,
											"end": 17029,
											"name": "DUP2"
										},
										{
											"begin": 16992,
											"end": 17029,
											"name": "MSTORE"
										},
										{
											"begin": 16992,
											"end": 17029,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16992,
											"end": 17029,
											"name": "ADD"
										},
										{
											"begin": 16992,
											"end": 17029,
											"name": "SWAP2"
										},
										{
											"begin": 16992,
											"end": 17029,
											"name": "POP"
										},
										{
											"begin": 16992,
											"end": 17029,
											"name": "POP"
										},
										{
											"begin": 16992,
											"end": 17029,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16992,
											"end": 17029,
											"name": "MLOAD"
										},
										{
											"begin": 16992,
											"end": 17029,
											"name": "DUP1"
										},
										{
											"begin": 16992,
											"end": 17029,
											"name": "SWAP2"
										},
										{
											"begin": 16992,
											"end": 17029,
											"name": "SUB"
										},
										{
											"begin": 16992,
											"end": 17029,
											"name": "SWAP1"
										},
										{
											"begin": 16992,
											"end": 17029,
											"name": "LOG3"
										},
										{
											"begin": 16750,
											"end": 17034,
											"name": "POP"
										},
										{
											"begin": 16750,
											"end": 17034,
											"name": "POP"
										},
										{
											"begin": 16750,
											"end": 17034,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10790,
											"end": 11001,
											"name": "tag",
											"value": "160"
										},
										{
											"begin": 10790,
											"end": 11001,
											"name": "JUMPDEST"
										},
										{
											"begin": 10879,
											"end": 10880,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10859,
											"end": 10881,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10859,
											"end": 10881,
											"name": "AND"
										},
										{
											"begin": 10859,
											"end": 10867,
											"name": "DUP2"
										},
										{
											"begin": 10859,
											"end": 10881,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10859,
											"end": 10881,
											"name": "AND"
										},
										{
											"begin": 10859,
											"end": 10881,
											"name": "EQ"
										},
										{
											"begin": 10859,
											"end": 10881,
											"name": "ISZERO"
										},
										{
											"begin": 10851,
											"end": 10924,
											"name": "PUSH [tag]",
											"value": "188"
										},
										{
											"begin": 10851,
											"end": 10924,
											"name": "JUMPI"
										},
										{
											"begin": 10851,
											"end": 10924,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10851,
											"end": 10924,
											"name": "MLOAD"
										},
										{
											"begin": 10851,
											"end": 10924,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10851,
											"end": 10924,
											"name": "DUP2"
										},
										{
											"begin": 10851,
											"end": 10924,
											"name": "MSTORE"
										},
										{
											"begin": 10851,
											"end": 10924,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10851,
											"end": 10924,
											"name": "ADD"
										},
										{
											"begin": 10851,
											"end": 10924,
											"name": "DUP1"
										},
										{
											"begin": 10851,
											"end": 10924,
											"name": "DUP1"
										},
										{
											"begin": 10851,
											"end": 10924,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10851,
											"end": 10924,
											"name": "ADD"
										},
										{
											"begin": 10851,
											"end": 10924,
											"name": "DUP3"
										},
										{
											"begin": 10851,
											"end": 10924,
											"name": "DUP2"
										},
										{
											"begin": 10851,
											"end": 10924,
											"name": "SUB"
										},
										{
											"begin": 10851,
											"end": 10924,
											"name": "DUP3"
										},
										{
											"begin": 10851,
											"end": 10924,
											"name": "MSTORE"
										},
										{
											"begin": 10851,
											"end": 10924,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 10851,
											"end": 10924,
											"name": "DUP2"
										},
										{
											"begin": 10851,
											"end": 10924,
											"name": "MSTORE"
										},
										{
											"begin": 10851,
											"end": 10924,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10851,
											"end": 10924,
											"name": "ADD"
										},
										{
											"begin": 10851,
											"end": 10924,
											"name": "DUP1"
										},
										{
											"begin": 10851,
											"end": 10924,
											"name": "PUSH data",
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 10851,
											"end": 10924,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 10851,
											"end": 10924,
											"name": "SWAP2"
										},
										{
											"begin": 10851,
											"end": 10924,
											"name": "CODECOPY"
										},
										{
											"begin": 10851,
											"end": 10924,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10851,
											"end": 10924,
											"name": "ADD"
										},
										{
											"begin": 10851,
											"end": 10924,
											"name": "SWAP2"
										},
										{
											"begin": 10851,
											"end": 10924,
											"name": "POP"
										},
										{
											"begin": 10851,
											"end": 10924,
											"name": "POP"
										},
										{
											"begin": 10851,
											"end": 10924,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10851,
											"end": 10924,
											"name": "MLOAD"
										},
										{
											"begin": 10851,
											"end": 10924,
											"name": "DUP1"
										},
										{
											"begin": 10851,
											"end": 10924,
											"name": "SWAP2"
										},
										{
											"begin": 10851,
											"end": 10924,
											"name": "SUB"
										},
										{
											"begin": 10851,
											"end": 10924,
											"name": "SWAP1"
										},
										{
											"begin": 10851,
											"end": 10924,
											"name": "REVERT"
										},
										{
											"begin": 10851,
											"end": 10924,
											"name": "tag",
											"value": "188"
										},
										{
											"begin": 10851,
											"end": 10924,
											"name": "JUMPDEST"
										},
										{
											"begin": 10964,
											"end": 10972,
											"name": "DUP1"
										},
										{
											"begin": 10935,
											"end": 10973,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10935,
											"end": 10973,
											"name": "AND"
										},
										{
											"begin": 10956,
											"end": 10962,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10956,
											"end": 10962,
											"name": "DUP1"
										},
										{
											"begin": 10956,
											"end": 10962,
											"name": "SWAP1"
										},
										{
											"begin": 10956,
											"end": 10962,
											"name": "SLOAD"
										},
										{
											"begin": 10956,
											"end": 10962,
											"name": "SWAP1"
										},
										{
											"begin": 10956,
											"end": 10962,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10956,
											"end": 10962,
											"name": "EXP"
										},
										{
											"begin": 10956,
											"end": 10962,
											"name": "SWAP1"
										},
										{
											"begin": 10956,
											"end": 10962,
											"name": "DIV"
										},
										{
											"begin": 10956,
											"end": 10962,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10956,
											"end": 10962,
											"name": "AND"
										},
										{
											"begin": 10935,
											"end": 10973,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10935,
											"end": 10973,
											"name": "AND"
										},
										{
											"begin": 10935,
											"end": 10973,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 10935,
											"end": 10973,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10935,
											"end": 10973,
											"name": "MLOAD"
										},
										{
											"begin": 10935,
											"end": 10973,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10935,
											"end": 10973,
											"name": "MLOAD"
										},
										{
											"begin": 10935,
											"end": 10973,
											"name": "DUP1"
										},
										{
											"begin": 10935,
											"end": 10973,
											"name": "SWAP2"
										},
										{
											"begin": 10935,
											"end": 10973,
											"name": "SUB"
										},
										{
											"begin": 10935,
											"end": 10973,
											"name": "SWAP1"
										},
										{
											"begin": 10935,
											"end": 10973,
											"name": "LOG3"
										},
										{
											"begin": 10988,
											"end": 10996,
											"name": "DUP1"
										},
										{
											"begin": 10979,
											"end": 10985,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10979,
											"end": 10985,
											"name": "DUP1"
										},
										{
											"begin": 10979,
											"end": 10996,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10979,
											"end": 10996,
											"name": "EXP"
										},
										{
											"begin": 10979,
											"end": 10996,
											"name": "DUP2"
										},
										{
											"begin": 10979,
											"end": 10996,
											"name": "SLOAD"
										},
										{
											"begin": 10979,
											"end": 10996,
											"name": "DUP2"
										},
										{
											"begin": 10979,
											"end": 10996,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10979,
											"end": 10996,
											"name": "MUL"
										},
										{
											"begin": 10979,
											"end": 10996,
											"name": "NOT"
										},
										{
											"begin": 10979,
											"end": 10996,
											"name": "AND"
										},
										{
											"begin": 10979,
											"end": 10996,
											"name": "SWAP1"
										},
										{
											"begin": 10979,
											"end": 10996,
											"name": "DUP4"
										},
										{
											"begin": 10979,
											"end": 10996,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10979,
											"end": 10996,
											"name": "AND"
										},
										{
											"begin": 10979,
											"end": 10996,
											"name": "MUL"
										},
										{
											"begin": 10979,
											"end": 10996,
											"name": "OR"
										},
										{
											"begin": 10979,
											"end": 10996,
											"name": "SWAP1"
										},
										{
											"begin": 10979,
											"end": 10996,
											"name": "SSTORE"
										},
										{
											"begin": 10979,
											"end": 10996,
											"name": "POP"
										},
										{
											"begin": 10790,
											"end": 11001,
											"name": "POP"
										},
										{
											"begin": 10790,
											"end": 11001,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5137,
											"end": 5265,
											"name": "tag",
											"value": "182"
										},
										{
											"begin": 5137,
											"end": 5265,
											"name": "JUMPDEST"
										},
										{
											"begin": 5195,
											"end": 5202,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5217,
											"end": 5260,
											"name": "PUSH [tag]",
											"value": "190"
										},
										{
											"begin": 5221,
											"end": 5222,
											"name": "DUP4"
										},
										{
											"begin": 5224,
											"end": 5225,
											"name": "DUP4"
										},
										{
											"begin": 5217,
											"end": 5260,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5217,
											"end": 5260,
											"name": "MLOAD"
										},
										{
											"begin": 5217,
											"end": 5260,
											"name": "DUP1"
										},
										{
											"begin": 5217,
											"end": 5260,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5217,
											"end": 5260,
											"name": "ADD"
										},
										{
											"begin": 5217,
											"end": 5260,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5217,
											"end": 5260,
											"name": "MSTORE"
										},
										{
											"begin": 5217,
											"end": 5260,
											"name": "DUP1"
										},
										{
											"begin": 5217,
											"end": 5260,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 5217,
											"end": 5260,
											"name": "DUP2"
										},
										{
											"begin": 5217,
											"end": 5260,
											"name": "MSTORE"
										},
										{
											"begin": 5217,
											"end": 5260,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5217,
											"end": 5260,
											"name": "ADD"
										},
										{
											"begin": 5217,
											"end": 5260,
											"name": "PUSH",
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 5217,
											"end": 5260,
											"name": "DUP2"
										},
										{
											"begin": 5217,
											"end": 5260,
											"name": "MSTORE"
										},
										{
											"begin": 5217,
											"end": 5260,
											"name": "POP"
										},
										{
											"begin": 5217,
											"end": 5220,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 5217,
											"end": 5260,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5217,
											"end": 5260,
											"name": "tag",
											"value": "190"
										},
										{
											"begin": 5217,
											"end": 5260,
											"name": "JUMPDEST"
										},
										{
											"begin": 5210,
											"end": 5260,
											"name": "SWAP1"
										},
										{
											"begin": 5210,
											"end": 5260,
											"name": "POP"
										},
										{
											"begin": 5137,
											"end": 5265,
											"name": "SWAP3"
										},
										{
											"begin": 5137,
											"end": 5265,
											"name": "SWAP2"
										},
										{
											"begin": 5137,
											"end": 5265,
											"name": "POP"
										},
										{
											"begin": 5137,
											"end": 5265,
											"name": "POP"
										},
										{
											"begin": 5137,
											"end": 5265,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"1441CFBEF485DE93BEDECC35B3D10FA2992DB382C4C9C583A6E423A140ABE4A4": "42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"ADE9EFCB59E42E439FFE61509B352B1AF56D64CCB68D80B039B7B69578F371D2": "42455032303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
										"B81EDBF10508D9B81724F18FF8F3D8BFBA9790734CE1F1C54DFE1030B4914855": "42455032303a206275726e2066726f6d20746865207a65726f2061646472657373",
										"D26CF302D50B28DE74BE656B11D67092B32131E5712D1BCF08C4E976DACDA57": "42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"DEAA84B30175FD0578812C46240362B7914652A35E6707AD7E1556891E4AE032": "42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365",
										"F10E7571E18B354270DEE950932FB6A745EFC79414B2B2556185A4ED6A1AF0D5": "42455032303a20617070726f766520746f20746865207a65726f2061646472657373"
									}
								}
							}
						},
						"methodIdentifiers": {
							"_decimals()": "32424aa3",
							"_name()": "d28d8852",
							"_symbol()": "b09f1266",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"getOwner()": "893d20e8",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(uint256)": "a0712d68",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"_decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"See {BEP20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {BEP20-approve}.   * Requirements:   * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {BEP20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burn `amount` tokens and decreasing the total supply.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.   * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.   * Emits an {Approval} event indicating the updated allowance.   * Requirements:   * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.   * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.   * Emits an {Approval} event indicating the updated allowance.   * Requirements:   * - `spender` cannot be the zero address.\"},\"mint(uint256)\":{\"details\":\"Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply.   * Requirements   * - `msg.sender` must be the token owner\"},\"name()\":{\"details\":\"Returns the token name.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.   * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"See {BEP20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {BEP20-transfer}.   * Requirements:   * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {BEP20-transferFrom}.   * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20};   * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contract.sol\":\"BEP20TGK\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract.sol\":{\"keccak256\":\"0x3abf28a72ca5bcaa519f068100134ef603486a866aa85356e02194f66dae6341\",\"urls\":[\"bzz-raw://f4fdc08516633a5662ecfaf57e8942cd72013d28c6c2933390e9a51fed2c89ae\",\"dweb:/ipfs/QmQKiptgbmvSYLyH7MhEaz9vrbnaEYrhJMy6GWzVuzjYX2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 302,
								"contract": "contract.sol:BEP20TGK",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 417,
								"contract": "contract.sol:BEP20TGK",
								"label": "_balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 423,
								"contract": "contract.sol:BEP20TGK",
								"label": "_allowances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 425,
								"contract": "contract.sol:BEP20TGK",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 427,
								"contract": "contract.sol:BEP20TGK",
								"label": "_decimals",
								"offset": 0,
								"slot": "4",
								"type": "t_uint8"
							},
							{
								"astId": 429,
								"contract": "contract.sol:BEP20TGK",
								"label": "_symbol",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 431,
								"contract": "contract.sol:BEP20TGK",
								"label": "_name",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				},
				"Context": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contract.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract.sol\":{\"keccak256\":\"0x3abf28a72ca5bcaa519f068100134ef603486a866aa85356e02194f66dae6341\",\"urls\":[\"bzz-raw://f4fdc08516633a5662ecfaf57e8942cd72013d28c6c2933390e9a51fed2c89ae\",\"dweb:/ipfs/QmQKiptgbmvSYLyH7MhEaz9vrbnaEYrhJMy6GWzVuzjYX2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"IBEP20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.   * This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens.   * Returns a boolean value indicating whether the operation succeeded.   * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729   * Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`.   * Returns a boolean value indicating whether the operation succeeded.   * Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.   * Returns a boolean value indicating whether the operation succeeded.   * Emits a {Transfer} event."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.   * This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens.   * Returns a boolean value indicating whether the operation succeeded.   * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729   * Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.   * Returns a boolean value indicating whether the operation succeeded.   * Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.   * Returns a boolean value indicating whether the operation succeeded.   * Emits a {Transfer} event.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contract.sol\":\"IBEP20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract.sol\":{\"keccak256\":\"0x3abf28a72ca5bcaa519f068100134ef603486a866aa85356e02194f66dae6341\",\"urls\":[\"bzz-raw://f4fdc08516633a5662ecfaf57e8942cd72013d28c6c2933390e9a51fed2c89ae\",\"dweb:/ipfs/QmQKiptgbmvSYLyH7MhEaz9vrbnaEYrhJMy6GWzVuzjYX2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. * By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. * This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.   * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. * By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. * This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.   * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contract.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract.sol\":{\"keccak256\":\"0x3abf28a72ca5bcaa519f068100134ef603486a866aa85356e02194f66dae6341\",\"urls\":[\"bzz-raw://f4fdc08516633a5662ecfaf57e8942cd72013d28c6c2933390e9a51fed2c89ae\",\"dweb:/ipfs/QmQKiptgbmvSYLyH7MhEaz9vrbnaEYrhJMy6GWzVuzjYX2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 302,
								"contract": "contract.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contract.sol\":4506:8800  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"contract.sol\":4506:8800  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a72315820bf055ed96d050603bc19854d0cf182115fdc0e4a27b9b3f063c111b99014b7b764736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820bf055ed96d050603bc19854d0cf182115fdc0e4a27b9b3f063c111b99014b7b764736f6c63430005100032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xBF SDIV 0x5E 0xD9 PUSH14 0x50603BC19854D0CF182115FDC0E 0x4A 0x27 0xB9 0xB3 CREATE PUSH4 0xC111B990 EQ 0xB7 0xB7 PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "4506:4294:0:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820bf055ed96d050603bc19854d0cf182115fdc0e4a27b9b3f063c111b99014b7b764736f6c63430005100032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xBF SDIV 0x5E 0xD9 PUSH14 0x50603BC19854D0CF182115FDC0E 0x4A 0x27 0xB9 0xB3 CREATE PUSH4 0xC111B990 EQ 0xB7 0xB7 PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "4506:4294:0:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 4506,
									"end": 8800,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4506,
									"end": 8800,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820bf055ed96d050603bc19854d0cf182115fdc0e4a27b9b3f063c111b99014b7b764736f6c63430005100032",
									".code": [
										{
											"begin": 4506,
											"end": 8800,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 4506,
											"end": 8800,
											"name": "ADDRESS"
										},
										{
											"begin": 4506,
											"end": 8800,
											"name": "EQ"
										},
										{
											"begin": 4506,
											"end": 8800,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 4506,
											"end": 8800,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4506,
											"end": 8800,
											"name": "MSTORE"
										},
										{
											"begin": 4506,
											"end": 8800,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4506,
											"end": 8800,
											"name": "DUP1"
										},
										{
											"begin": 4506,
											"end": 8800,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contract.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract.sol\":{\"keccak256\":\"0x3abf28a72ca5bcaa519f068100134ef603486a866aa85356e02194f66dae6341\",\"urls\":[\"bzz-raw://f4fdc08516633a5662ecfaf57e8942cd72013d28c6c2933390e9a51fed2c89ae\",\"dweb:/ipfs/QmQKiptgbmvSYLyH7MhEaz9vrbnaEYrhJMy6GWzVuzjYX2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contract.sol": {
				"ast": {
					"absolutePath": "contract.sol",
					"exportedSymbols": {
						"BEP20TGK": [
							919
						],
						"Context": [
							113
						],
						"IBEP20": [
							88
						],
						"Ownable": [
							404
						],
						"SafeMath": [
							298
						]
					},
					"id": 920,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 88,
							"linearizedBaseContracts": [
								88
							],
							"name": "IBEP20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens in existence.",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "168:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "194:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "194:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "193:9:0"
									},
									"scope": 88,
									"src": "148:55:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the token decimals.",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "274:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "300:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 8,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "300:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "299:7:0"
									},
									"scope": 88,
									"src": "257:50:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the token symbol.",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "374:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "400:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 13,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "400:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "399:15:0"
									},
									"scope": 88,
									"src": "359:56:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the token name.",
									"id": 21,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "476:2:0"
									},
									"returnParameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "502:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 18,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "502:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "501:15:0"
									},
									"scope": 88,
									"src": "463:54:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the bep token owner.",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "589:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "615:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "615:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "614:9:0"
									},
									"scope": 88,
									"src": "572:52:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens owned by `account`.",
									"id": 33,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "718:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "718:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "717:17:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "758:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "758:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "757:9:0"
									},
									"scope": 88,
									"src": "699:68:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from the caller's account to `recipient`.\n   * Returns a boolean value indicating whether the operation succeeded.\n   * Emits a {Transfer} event.",
									"id": 42,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "989:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1008:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1008:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "988:35:0"
									},
									"returnParameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1042:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 39,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1042:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1041:6:0"
									},
									"scope": 88,
									"src": "971:77:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the remaining number of tokens that `spender` will be\nallowed to spend on behalf of `owner` through {transferFrom}. This is\nzero by default.\n   * This value changes when {approve} or {transferFrom} are called.",
									"id": 51,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1326:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1326:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1342:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1342:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1325:33:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1382:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 48,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1382:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1381:9:0"
									},
									"scope": 88,
									"src": "1307:84:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n   * Returns a boolean value indicating whether the operation succeeded.\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\nthat someone may use both the old and the new allowance by unfortunate\ntransaction ordering. One possible solution to mitigate this race\ncondition is to first reduce the spender's allowance to 0 and set the\ndesired value afterwards:\nhttps://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   * Emits an {Approval} event.",
									"id": 60,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2031:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2031:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2048:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 54,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2030:33:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2082:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 57,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2082:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2081:6:0"
									},
									"scope": 88,
									"src": "2014:74:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from `sender` to `recipient` using the\nallowance mechanism. `amount` is then deducted from the caller's\nallowance.\n   * Returns a boolean value indicating whether the operation succeeded.\n   * Emits a {Transfer} event.",
									"id": 71,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2397:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2413:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2413:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2432:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 65,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2432:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2396:51:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2466:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 68,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2466:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2465:6:0"
									},
									"scope": 88,
									"src": "2375:97:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when `value` tokens are moved from one account (`from`) to\nanother (`to`).\n   * Note that `value` may be zero.",
									"id": 79,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2642:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2642:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2664:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2664:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2684:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2684:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2641:57:0"
									},
									"src": "2627:72:0"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when the allowance of a `spender` for an `owner` is set by\na call to {approve}. `value` is the new allowance.",
									"id": 87,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "2863:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2863:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 83,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "2886:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2886:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "2911:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2911:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2862:63:0"
									},
									"src": "2848:78:0"
								}
							],
							"scope": 920,
							"src": "62:2866:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 113,
							"linearizedBaseContracts": [
								113
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "3625:3:0",
										"statements": []
									},
									"documentation": null,
									"id": 92,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3613:2:0"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3625:0:0"
									},
									"scope": 113,
									"src": "3601:27:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 100,
										"nodeType": "Block",
										"src": "3694:28:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 97,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 934,
														"src": "3707:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "3707:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 96,
												"id": 99,
												"nodeType": "Return",
												"src": "3700:17:0"
											}
										]
									},
									"documentation": null,
									"id": 101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3651:2:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "3677:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3677:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3676:17:0"
									},
									"scope": 113,
									"src": "3632:90:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 111,
										"nodeType": "Block",
										"src": "3783:155:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 106,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 950,
													"src": "3789:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$113",
														"typeString": "contract Context"
													}
												},
												"id": 107,
												"nodeType": "ExpressionStatement",
												"src": "3789:4:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 108,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 934,
														"src": "3925:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "3925:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 105,
												"id": 110,
												"nodeType": "Return",
												"src": "3918:15:0"
											}
										]
									},
									"documentation": null,
									"id": 112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3743:2:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "3769:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 103,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3769:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3768:14:0"
									},
									"scope": 113,
									"src": "3726:212:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 920,
							"src": "3430:510:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@dev Wrappers over Solidity's arithmetic operations with added overflow\nchecks.\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\nin bugs, because programmers usually assume that an overflow raises an\nerror, which is the standard behavior in high level programming languages.\n`SafeMath` restores this intuition by reverting the transaction when an\noperation overflows.\n * Using this library instead of the unchecked operations eliminates an entire\nclass of bugs, so it's recommended to use it always.",
							"fullyImplemented": true,
							"id": 298,
							"linearizedBaseContracts": [
								298
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 137,
										"nodeType": "Block",
										"src": "4798:95:0",
										"statements": [
											{
												"assignments": [
													123
												],
												"declarations": [
													{
														"constant": false,
														"id": 123,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 137,
														"src": "4804:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 122,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4804:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 127,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 124,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "4816:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 125,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 117,
														"src": "4820:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4816:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4804:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 129,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 123,
																"src": "4835:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 130,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "4840:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4835:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4843:29:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 128,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															937,
															938
														],
														"referencedDeclaration": 938,
														"src": "4827:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4827:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "4827:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 135,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 123,
													"src": "4887:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 121,
												"id": 136,
												"nodeType": "Return",
												"src": "4880:8:0"
											}
										]
									},
									"documentation": "@dev Returns the addition of two unsigned integers, reverting on\noverflow.\n   * Counterpart to Solidity's `+` operator.\n   * Requirements:\n- Addition cannot overflow.",
									"id": 138,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "4744:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4744:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "4755:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4755:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4743:22:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "4789:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4789:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4788:9:0"
									},
									"scope": 298,
									"src": "4731:162:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 153,
										"nodeType": "Block",
										"src": "5204:61:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 148,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 140,
															"src": "5221:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 149,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 142,
															"src": "5224:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 150,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5227:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 147,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															154,
															181
														],
														"referencedDeclaration": 181,
														"src": "5217:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5217:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 146,
												"id": 152,
												"nodeType": "Return",
												"src": "5210:50:0"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting on\noverflow (when the result is negative).\n   * Counterpart to Solidity's `-` operator.\n   * Requirements:\n- Subtraction cannot overflow.",
									"id": 154,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "5150:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5150:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "5161:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5161:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5149:22:0"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "5195:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5195:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5194:9:0"
									},
									"scope": 298,
									"src": "5137:128:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 180,
										"nodeType": "Block",
										"src": "5624:78:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 166,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 158,
																"src": "5638:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 167,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 156,
																"src": "5643:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5638:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 169,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 160,
															"src": "5646:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 165,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															937,
															938
														],
														"referencedDeclaration": 938,
														"src": "5630:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5630:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "5630:29:0"
											},
											{
												"assignments": [
													173
												],
												"declarations": [
													{
														"constant": false,
														"id": 173,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 180,
														"src": "5665:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 172,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5665:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 177,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 174,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "5677:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 175,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "5681:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5677:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5665:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 178,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 173,
													"src": "5696:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 164,
												"id": 179,
												"nodeType": "Return",
												"src": "5689:8:0"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting with custom message on\noverflow (when the result is negative).\n   * Counterpart to Solidity's `-` operator.\n   * Requirements:\n- Subtraction cannot overflow.",
									"id": 181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5542:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5542:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5553:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5553:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5564:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 159,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5564:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5541:50:0"
									},
									"returnParameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5615:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5615:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5614:9:0"
									},
									"scope": 298,
									"src": "5529:173:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "5989:352:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 190,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "6205:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 191,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6210:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6205:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 196,
												"nodeType": "IfStatement",
												"src": "6201:35:0",
												"trueBody": {
													"id": 195,
													"nodeType": "Block",
													"src": "6213:23:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 193,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6228:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 189,
															"id": 194,
															"nodeType": "Return",
															"src": "6221:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 214,
														"src": "6242:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 197,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6242:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 199,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "6254:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 200,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 185,
														"src": "6258:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6254:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6242:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 206,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 204,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 198,
																	"src": "6273:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 205,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "6277:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6273:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 207,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 185,
																"src": "6282:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6273:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 209,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6285:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 203,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															937,
															938
														],
														"referencedDeclaration": 938,
														"src": "6265:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6265:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 211,
												"nodeType": "ExpressionStatement",
												"src": "6265:56:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 212,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 198,
													"src": "6335:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 189,
												"id": 213,
												"nodeType": "Return",
												"src": "6328:8:0"
											}
										]
									},
									"documentation": "@dev Returns the multiplication of two unsigned integers, reverting on\noverflow.\n   * Counterpart to Solidity's `*` operator.\n   * Requirements:\n- Multiplication cannot overflow.",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "5935:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5935:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "5946:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5946:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5934:22:0"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "5980:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5980:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5979:9:0"
									},
									"scope": 298,
									"src": "5922:419:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 230,
										"nodeType": "Block",
										"src": "6839:57:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 225,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "6856:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 226,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "6859:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 227,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6862:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 224,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															231,
															258
														],
														"referencedDeclaration": 258,
														"src": "6852:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6852:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 223,
												"id": 229,
												"nodeType": "Return",
												"src": "6845:46:0"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts on\ndivision by zero. The result is rounded towards zero.\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "6785:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6785:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "6796:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6796:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6784:22:0"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "6830:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6830:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6829:9:0"
									},
									"scope": 298,
									"src": "6772:124:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 257,
										"nodeType": "Block",
										"src": "7442:221:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 243,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 235,
																"src": "7518:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 244,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7522:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7518:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 246,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "7525:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 242,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															937,
															938
														],
														"referencedDeclaration": 938,
														"src": "7510:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7510:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 248,
												"nodeType": "ExpressionStatement",
												"src": "7510:28:0"
											},
											{
												"assignments": [
													250
												],
												"declarations": [
													{
														"constant": false,
														"id": 250,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 257,
														"src": "7544:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 249,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7544:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 254,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 251,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 233,
														"src": "7556:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 252,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 235,
														"src": "7560:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7556:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7544:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 255,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 250,
													"src": "7657:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 241,
												"id": 256,
												"nodeType": "Return",
												"src": "7650:8:0"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts with custom message on\ndivision by zero. The result is rounded towards zero.\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "7360:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7360:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "7371:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7371:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "7382:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 236,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7382:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7359:50:0"
									},
									"returnParameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "7433:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7433:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7432:9:0"
									},
									"scope": 298,
									"src": "7347:316:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 273,
										"nodeType": "Block",
										"src": "8150:55:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 268,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "8167:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 269,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "8170:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 270,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8173:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 267,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															274,
															297
														],
														"referencedDeclaration": 297,
														"src": "8163:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8163:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 266,
												"id": 272,
												"nodeType": "Return",
												"src": "8156:44:0"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts when dividing by zero.\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 274,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "8096:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8096:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "8107:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8107:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8095:22:0"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "8141:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8141:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8140:9:0"
									},
									"scope": 298,
									"src": "8083:122:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 296,
										"nodeType": "Block",
										"src": "8740:58:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 286,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 278,
																"src": "8754:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8759:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8754:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 289,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 280,
															"src": "8762:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 285,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															937,
															938
														],
														"referencedDeclaration": 938,
														"src": "8746:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8746:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 291,
												"nodeType": "ExpressionStatement",
												"src": "8746:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 292,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 276,
														"src": "8788:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 293,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "8792:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8788:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 284,
												"id": 295,
												"nodeType": "Return",
												"src": "8781:12:0"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts with custom message when dividing by zero.\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "8658:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8658:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "8669:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8669:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 280,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "8680:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 279,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8680:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8657:50:0"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "8731:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8731:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8730:9:0"
									},
									"scope": 298,
									"src": "8645:153:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 920,
							"src": "4506:4294:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 299,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 113,
										"src": "9317:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$113",
											"typeString": "contract Context"
										}
									},
									"id": 300,
									"nodeType": "InheritanceSpecifier",
									"src": "9317:7:0"
								}
							],
							"contractDependencies": [
								113
							],
							"contractKind": "contract",
							"documentation": "@dev Contract module which provides a basic access control mechanism, where\nthere is an account (an owner) that can be granted exclusive access to\nspecific functions.\n * By default, the owner account will be the one that deploys the contract. This\ncan later be changed with {transferOwnership}.\n * This module is used through inheritance. It will make available the modifier\n`onlyOwner`, which can be applied to your functions to restrict their use to\nthe owner.",
							"fullyImplemented": true,
							"id": 404,
							"linearizedBaseContracts": [
								404,
								113
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 302,
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 404,
									"src": "9329:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 301,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "9329:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 308,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"indexed": true,
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "9383:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9383:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"indexed": true,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "9414:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9414:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9382:57:0"
									},
									"src": "9356:84:0"
								},
								{
									"body": {
										"id": 327,
										"nodeType": "Block",
										"src": "9558:121:0",
										"statements": [
											{
												"assignments": [
													312
												],
												"declarations": [
													{
														"constant": false,
														"id": 312,
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"scope": 327,
														"src": "9564:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 311,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9564:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 315,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 313,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "9584:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9584:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9564:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 316,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "9602:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 317,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 312,
														"src": "9611:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9602:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 319,
												"nodeType": "ExpressionStatement",
												"src": "9602:18:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9660:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9652:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9652:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 324,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "9664:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 320,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "9631:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9631:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 326,
												"nodeType": "EmitStatement",
												"src": "9626:48:0"
											}
										]
									},
									"documentation": "@dev Initializes the contract setting the deployer as the initial owner.",
									"id": 328,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9546:2:0"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9558:0:0"
									},
									"scope": 404,
									"src": "9534:145:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "9794:24:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 333,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 302,
													"src": "9807:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 332,
												"id": 334,
												"nodeType": "Return",
												"src": "9800:13:0"
											}
										]
									},
									"documentation": "@dev Returns the address of the current owner.",
									"id": 336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9761:2:0"
									},
									"returnParameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "9785:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9785:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9784:9:0"
									},
									"scope": 404,
									"src": "9747:71:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "9919:85:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 339,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 302,
																"src": "9933:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 340,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 101,
																	"src": "9943:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 341,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9943:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9933:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9957:34:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 338,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															937,
															938
														],
														"referencedDeclaration": 938,
														"src": "9925:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9925:67:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 345,
												"nodeType": "ExpressionStatement",
												"src": "9925:67:0"
											},
											{
												"id": 346,
												"nodeType": "PlaceholderStatement",
												"src": "9998:1:0"
											}
										]
									},
									"documentation": "@dev Throws if called by any account other than the owner.",
									"id": 348,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9916:2:0"
									},
									"src": "9898:106:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 366,
										"nodeType": "Block",
										"src": "10376:81:0",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 354,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "10408:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 356,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10424:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10416:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10416:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 353,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "10387:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10387:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 359,
												"nodeType": "EmitStatement",
												"src": "10382:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 360,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "10433:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10450:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10442:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10442:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "10433:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 365,
												"nodeType": "ExpressionStatement",
												"src": "10433:19:0"
											}
										]
									},
									"documentation": "@dev Leaves the contract without owner. It will not be possible to call\n`onlyOwner` functions anymore. Can only be called by the current owner.\n   * NOTE: Renouncing ownership will leave the contract without an owner,\nthereby removing any functionality that is only available to the owner.",
									"id": 367,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 351,
											"modifierName": {
												"argumentTypes": null,
												"id": 350,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 348,
												"src": "10366:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "10366:9:0"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10356:2:0"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10376:0:0"
									},
									"scope": 404,
									"src": "10330:127:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 378,
										"nodeType": "Block",
										"src": "10658:39:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 375,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 369,
															"src": "10683:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 374,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "10664:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10664:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "10664:28:0"
											}
										]
									},
									"documentation": "@dev Transfers ownership of the contract to a new account (`newOwner`).\nCan only be called by the current owner.",
									"id": 379,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 372,
											"modifierName": {
												"argumentTypes": null,
												"id": 371,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 348,
												"src": "10648:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "10648:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "10623:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10623:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10622:18:0"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10658:0:0"
									},
									"scope": 404,
									"src": "10596:101:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "10845:156:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 385,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 381,
																"src": "10859:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10879:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10871:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 388,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10871:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "10859:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10883:40:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 384,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															937,
															938
														],
														"referencedDeclaration": 938,
														"src": "10851:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10851:73:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 392,
												"nodeType": "ExpressionStatement",
												"src": "10851:73:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 394,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "10956:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 395,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "10964:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 393,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "10935:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10935:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 397,
												"nodeType": "EmitStatement",
												"src": "10930:43:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 398,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "10979:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 399,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "10988:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10979:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "10979:17:0"
											}
										]
									},
									"documentation": "@dev Transfers ownership of the contract to a new account (`newOwner`).",
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "10818:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10818:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10817:18:0"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10845:0:0"
									},
									"scope": 404,
									"src": "10790:211:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 920,
							"src": "9297:1706:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 405,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 113,
										"src": "11026:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$113",
											"typeString": "contract Context"
										}
									},
									"id": 406,
									"nodeType": "InheritanceSpecifier",
									"src": "11026:7:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 407,
										"name": "IBEP20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 88,
										"src": "11035:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$88",
											"typeString": "contract IBEP20"
										}
									},
									"id": 408,
									"nodeType": "InheritanceSpecifier",
									"src": "11035:6:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 409,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 404,
										"src": "11043:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$404",
											"typeString": "contract Ownable"
										}
									},
									"id": 410,
									"nodeType": "InheritanceSpecifier",
									"src": "11043:7:0"
								}
							],
							"contractDependencies": [
								88,
								113,
								404
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 919,
							"linearizedBaseContracts": [
								919,
								404,
								88,
								113
							],
							"name": "BEP20TGK",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 413,
									"libraryName": {
										"contractScope": null,
										"id": 411,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 298,
										"src": "11061:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$298",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "11055:27:0",
									"typeName": {
										"id": 412,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11074:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 417,
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"scope": 919,
									"src": "11086:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 416,
										"keyType": {
											"id": 414,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "11095:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "11086:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 415,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "11106:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 423,
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"scope": 919,
									"src": "11137:69:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 422,
										"keyType": {
											"id": 418,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "11146:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "11137:49:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 421,
											"keyType": {
												"id": 419,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "11166:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "11157:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 420,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "11177:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 425,
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 919,
									"src": "11211:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 424,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11211:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 427,
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"scope": 919,
									"src": "11243:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 426,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "11243:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 429,
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"scope": 919,
									"src": "11269:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 428,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "11269:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 431,
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"scope": 919,
									"src": "11294:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 430,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "11294:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 470,
										"nodeType": "Block",
										"src": "11339:213:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 434,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 431,
														"src": "11345:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "6b79756e676d696e636f696e",
														"id": 435,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11353:14:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_441fc1389aa256686a6eb0b8e7afa1a0244b747a91100fc7a993fec337ff43b0",
															"typeString": "literal_string \"kyungmincoin\""
														},
														"value": "kyungmincoin"
													},
													"src": "11345:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 437,
												"nodeType": "ExpressionStatement",
												"src": "11345:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 438,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "11373:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "4b4d43",
														"id": 439,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11383:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_59b1a8c8fb3c714b795209096635ce2eb96ead235db63ad4ef92a3f56828a58f",
															"typeString": "literal_string \"KMC\""
														},
														"value": "KMC"
													},
													"src": "11373:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 441,
												"nodeType": "ExpressionStatement",
												"src": "11373:15:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 442,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "11394:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "3138",
														"id": 443,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11406:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "11394:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 445,
												"nodeType": "ExpressionStatement",
												"src": "11394:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 446,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "11414:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_rational_300000000000000000000000000_by_1",
															"typeString": "int_const 300000000000000000000000000"
														},
														"id": 451,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"hexValue": "333030303030303030",
															"id": 447,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11429:9:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_300000000_by_1",
																"typeString": "int_const 300000000"
															},
															"value": "300000000"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"id": 450,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"hexValue": "3130",
																"id": 448,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11441:2:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3138",
																"id": 449,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11445:2:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18_by_1",
																	"typeString": "int_const 18"
																},
																"value": "18"
															},
															"src": "11441:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														},
														"src": "11429:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_300000000000000000000000000_by_1",
															"typeString": "int_const 300000000000000000000000000"
														}
													},
													"src": "11414:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 453,
												"nodeType": "ExpressionStatement",
												"src": "11414:33:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 454,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "11453:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 457,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 455,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 934,
																"src": "11463:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 456,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "11463:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11453:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 458,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "11477:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11453:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 460,
												"nodeType": "ExpressionStatement",
												"src": "11453:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 463,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11518:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 462,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11510:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 464,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11510:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 465,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 934,
																"src": "11522:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "11522:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 467,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "11534:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 461,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "11501:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11501:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 469,
												"nodeType": "EmitStatement",
												"src": "11496:51:0"
											}
										]
									},
									"documentation": null,
									"id": 471,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11329:2:0"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11339:0:0"
									},
									"scope": 919,
									"src": "11318:234:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 479,
										"nodeType": "Block",
										"src": "11659:25:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 476,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 336,
														"src": "11672:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11672:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 475,
												"id": 478,
												"nodeType": "Return",
												"src": "11665:14:0"
											}
										]
									},
									"documentation": "@dev Returns the bep token owner.",
									"id": 480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11624:2:0"
									},
									"returnParameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "11650:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11650:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11649:9:0"
									},
									"scope": 919,
									"src": "11607:77:0",
									"stateMutability": "view",
									"superFunction": 26,
									"visibility": "external"
								},
								{
									"body": {
										"id": 487,
										"nodeType": "Block",
										"src": "11788:27:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 485,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 427,
													"src": "11801:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 484,
												"id": 486,
												"nodeType": "Return",
												"src": "11794:16:0"
											}
										]
									},
									"documentation": "@dev Returns the token decimals.",
									"id": 488,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11755:2:0"
									},
									"returnParameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "11781:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 482,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "11781:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11780:7:0"
									},
									"scope": 919,
									"src": "11738:77:0",
									"stateMutability": "view",
									"superFunction": 11,
									"visibility": "external"
								},
								{
									"body": {
										"id": 495,
										"nodeType": "Block",
										"src": "11923:25:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 493,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 429,
													"src": "11936:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 492,
												"id": 494,
												"nodeType": "Return",
												"src": "11929:14:0"
											}
										]
									},
									"documentation": "@dev Returns the token symbol.",
									"id": 496,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11882:2:0"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "11908:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 490,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11908:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11907:15:0"
									},
									"scope": 919,
									"src": "11867:81:0",
									"stateMutability": "view",
									"superFunction": 16,
									"visibility": "external"
								},
								{
									"body": {
										"id": 503,
										"nodeType": "Block",
										"src": "12050:23:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 501,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 431,
													"src": "12063:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 500,
												"id": 502,
												"nodeType": "Return",
												"src": "12056:12:0"
											}
										]
									},
									"documentation": "@dev Returns the token name.",
									"id": 504,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12009:2:0"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "12035:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 498,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12035:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12034:15:0"
									},
									"scope": 919,
									"src": "11996:77:0",
									"stateMutability": "view",
									"superFunction": 21,
									"visibility": "external"
								},
								{
									"body": {
										"id": 511,
										"nodeType": "Block",
										"src": "12179:30:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 509,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 425,
													"src": "12192:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 508,
												"id": 510,
												"nodeType": "Return",
												"src": "12185:19:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-totalSupply}.",
									"id": 512,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12144:2:0"
									},
									"returnParameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 507,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "12170:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12170:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12169:9:0"
									},
									"scope": 919,
									"src": "12124:85:0",
									"stateMutability": "view",
									"superFunction": 6,
									"visibility": "external"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "12326:36:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 519,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 417,
														"src": "12339:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 521,
													"indexExpression": {
														"argumentTypes": null,
														"id": 520,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "12349:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12339:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 518,
												"id": 522,
												"nodeType": "Return",
												"src": "12332:25:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-balanceOf}.",
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "12277:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12277:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12276:17:0"
									},
									"returnParameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 517,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "12317:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 516,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12317:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12316:9:0"
									},
									"scope": 919,
									"src": "12258:104:0",
									"stateMutability": "view",
									"superFunction": 33,
									"visibility": "external"
								},
								{
									"body": {
										"id": 542,
										"nodeType": "Block",
										"src": "12623:70:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 534,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "12639:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12639:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 536,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "12653:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 537,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "12664:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 533,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "12629:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12629:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 539,
												"nodeType": "ExpressionStatement",
												"src": "12629:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12684:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 532,
												"id": 541,
												"nodeType": "Return",
												"src": "12677:11:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-transfer}.\n   * Requirements:\n   * - `recipient` cannot be the zero address.\n- the caller must have a balance of at least `amount`.",
									"id": 543,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "12564:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12564:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "12583:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12583:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12563:35:0"
									},
									"returnParameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "12617:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 530,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12617:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12616:6:0"
									},
									"scope": 919,
									"src": "12546:147:0",
									"stateMutability": "nonpayable",
									"superFunction": 42,
									"visibility": "external"
								},
								{
									"body": {
										"id": 558,
										"nodeType": "Block",
										"src": "12825:45:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 552,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "12838:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 554,
														"indexExpression": {
															"argumentTypes": null,
															"id": 553,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 545,
															"src": "12850:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "12838:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 556,
													"indexExpression": {
														"argumentTypes": null,
														"id": 555,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "12857:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12838:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 551,
												"id": 557,
												"nodeType": "Return",
												"src": "12831:34:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-allowance}.",
									"id": 559,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "12761:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12761:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "12776:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12776:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12760:32:0"
									},
									"returnParameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "12816:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12816:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12815:9:0"
									},
									"scope": 919,
									"src": "12742:128:0",
									"stateMutability": "view",
									"superFunction": 51,
									"visibility": "external"
								},
								{
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "13065:67:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 569,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "13080:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 570,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13080:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 571,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "13094:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 572,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "13103:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 568,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 889,
														"src": "13071:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13071:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 574,
												"nodeType": "ExpressionStatement",
												"src": "13071:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13123:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 567,
												"id": 576,
												"nodeType": "Return",
												"src": "13116:11:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-approve}.\n   * Requirements:\n   * - `spender` cannot be the zero address.",
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "13008:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13008:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "13025:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13025:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13007:33:0"
									},
									"returnParameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "13059:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 565,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13059:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13058:6:0"
									},
									"scope": 919,
									"src": "12991:141:0",
									"stateMutability": "nonpayable",
									"superFunction": 60,
									"visibility": "external"
								},
								{
									"body": {
										"id": 613,
										"nodeType": "Block",
										"src": "13660:191:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 590,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 580,
															"src": "13676:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 591,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 582,
															"src": "13684:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 592,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "13695:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 589,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "13666:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13666:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 594,
												"nodeType": "ExpressionStatement",
												"src": "13666:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 596,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 580,
															"src": "13717:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 597,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "13725:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13725:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 606,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 584,
																	"src": "13777:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 607,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13785:42:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	},
																	"value": "BEP20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 599,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "13739:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 601,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 600,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 580,
																			"src": "13751:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "13739:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 604,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 602,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 101,
																			"src": "13759:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 603,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13759:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "13739:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 605,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 181,
																"src": "13739:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13739:89:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 595,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 889,
														"src": "13708:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13708:121:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 610,
												"nodeType": "ExpressionStatement",
												"src": "13708:121:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 611,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13842:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 588,
												"id": 612,
												"nodeType": "Return",
												"src": "13835:11:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-transferFrom}.\n   * Emits an {Approval} event indicating the updated allowance. This is not\nrequired by the EIP. See the note at the beginning of {BEP20};\n   * Requirements:\n- `sender` and `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`.\n- the caller must have allowance for `sender`'s tokens of at least\n`amount`.",
									"id": 614,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "13585:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 579,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13585:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "13601:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13601:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 584,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "13620:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13620:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13584:51:0"
									},
									"returnParameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "13654:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 586,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13654:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13653:6:0"
									},
									"scope": 919,
									"src": "13563:288:0",
									"stateMutability": "nonpayable",
									"superFunction": 71,
									"visibility": "external"
								},
								{
									"body": {
										"id": 640,
										"nodeType": "Block",
										"src": "14305:111:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 624,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "14320:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 625,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14320:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 626,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "14334:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 634,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 618,
																	"src": "14382:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 627,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "14343:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 630,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 628,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 101,
																				"src": "14355:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 629,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14355:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "14343:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 632,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 631,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 616,
																		"src": "14369:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "14343:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 633,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 138,
																"src": "14343:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 635,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14343:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 623,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 889,
														"src": "14311:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14311:83:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "14311:83:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 638,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14407:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 622,
												"id": 639,
												"nodeType": "Return",
												"src": "14400:11:0"
											}
										]
									},
									"documentation": "@dev Atomically increases the allowance granted to `spender` by the caller.\n   * This is an alternative to {approve} that can be used as a mitigation for\nproblems described in {BEP20-approve}.\n   * Emits an {Approval} event indicating the updated allowance.\n   * Requirements:\n   * - `spender` cannot be the zero address.",
									"id": 641,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "14246:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14246:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 618,
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "14263:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14263:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14245:37:0"
									},
									"returnParameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "14299:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 620,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14299:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14298:6:0"
									},
									"scope": 919,
									"src": "14219:197:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 668,
										"nodeType": "Block",
										"src": "14963:157:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 651,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "14978:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14978:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 653,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 643,
															"src": "14992:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 661,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 645,
																	"src": "15040:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 662,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15057:39:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	},
																	"value": "BEP20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 654,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "15001:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 657,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 655,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 101,
																				"src": "15013:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 656,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15013:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "15001:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 659,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 658,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 643,
																		"src": "15027:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "15001:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 660,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 181,
																"src": "15001:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 663,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15001:96:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 650,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 889,
														"src": "14969:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14969:129:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 665,
												"nodeType": "ExpressionStatement",
												"src": "14969:129:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 666,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15111:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 649,
												"id": 667,
												"nodeType": "Return",
												"src": "15104:11:0"
											}
										]
									},
									"documentation": "@dev Atomically decreases the allowance granted to `spender` by the caller.\n   * This is an alternative to {approve} that can be used as a mitigation for\nproblems described in {BEP20-approve}.\n   * Emits an {Approval} event indicating the updated allowance.\n   * Requirements:\n   * - `spender` cannot be the zero address.\n- `spender` must have allowance for the caller of at least\n`subtractedValue`.",
									"id": 669,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "14899:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14899:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "14916:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14916:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14898:42:0"
									},
									"returnParameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "14957:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 647,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14957:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14956:6:0"
									},
									"scope": 919,
									"src": "14872:248:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 686,
										"nodeType": "Block",
										"src": "15372:55:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 679,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "15384:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15384:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 681,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 671,
															"src": "15398:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 678,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 803,
														"src": "15378:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15378:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 683,
												"nodeType": "ExpressionStatement",
												"src": "15378:27:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15418:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 677,
												"id": 685,
												"nodeType": "Return",
												"src": "15411:11:0"
											}
										]
									},
									"documentation": "@dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\nthe total supply.\n   * Requirements\n   * - `msg.sender` must be the token owner",
									"id": 687,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 674,
											"modifierName": {
												"argumentTypes": null,
												"id": 673,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 348,
												"src": "15347:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "15347:9:0"
										}
									],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "15324:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15324:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15323:16:0"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "15366:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 675,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15366:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15365:6:0"
									},
									"scope": 919,
									"src": "15310:117:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 702,
										"nodeType": "Block",
										"src": "15559:55:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 695,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "15571:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 696,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15571:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 697,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "15585:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 694,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 847,
														"src": "15565:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15565:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 699,
												"nodeType": "ExpressionStatement",
												"src": "15565:27:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15605:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 693,
												"id": 701,
												"nodeType": "Return",
												"src": "15598:11:0"
											}
										]
									},
									"documentation": "@dev Burn `amount` tokens and decreasing the total supply.",
									"id": 703,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "15521:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 688,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15521:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15520:16:0"
									},
									"returnParameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 692,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "15553:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 691,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15553:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15552:6:0"
									},
									"scope": 919,
									"src": "15507:107:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 759,
										"nodeType": "Block",
										"src": "16137:363:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 713,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 705,
																"src": "16151:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 715,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16169:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 714,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16161:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 716,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16161:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "16151:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 718,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16173:39:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															},
															"value": "BEP20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															}
														],
														"id": 712,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															937,
															938
														],
														"referencedDeclaration": 938,
														"src": "16143:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16143:70:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 720,
												"nodeType": "ExpressionStatement",
												"src": "16143:70:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 726,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 722,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 707,
																"src": "16227:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 724,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16248:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 723,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16240:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 725,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16240:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "16227:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 727,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16252:37:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															},
															"value": "BEP20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															}
														],
														"id": 721,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															937,
															938
														],
														"referencedDeclaration": 938,
														"src": "16219:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16219:71:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 729,
												"nodeType": "ExpressionStatement",
												"src": "16219:71:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 730,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "16297:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 732,
														"indexExpression": {
															"argumentTypes": null,
															"id": 731,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "16307:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16297:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 737,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 709,
																"src": "16339:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 738,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16347:40:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																},
																"value": "BEP20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 733,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "16317:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 735,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 734,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 705,
																	"src": "16327:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "16317:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 736,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 181,
															"src": "16317:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 739,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16317:71:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16297:91:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 741,
												"nodeType": "ExpressionStatement",
												"src": "16297:91:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 742,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "16394:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 744,
														"indexExpression": {
															"argumentTypes": null,
															"id": 743,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "16404:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16394:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 749,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 709,
																"src": "16442:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 745,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "16417:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 747,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 746,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 707,
																	"src": "16427:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "16417:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 748,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 138,
															"src": "16417:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 750,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16417:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16394:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 752,
												"nodeType": "ExpressionStatement",
												"src": "16394:55:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 754,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "16469:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 755,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "16477:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 756,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "16488:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 753,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "16460:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16460:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 758,
												"nodeType": "EmitStatement",
												"src": "16455:40:0"
											}
										]
									},
									"documentation": "@dev Moves tokens `amount` from `sender` to `recipient`.\n   * This is internal function is equivalent to {transfer}, and can be used to\ne.g. implement automatic token fees, slashing mechanisms, etc.\n   * Emits a {Transfer} event.\n   * Requirements:\n   * - `sender` cannot be the zero address.\n- `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`.",
									"id": 760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "16077:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16077:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "16093:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16093:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "16112:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16112:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16076:51:0"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16137:0:0"
									},
									"scope": 919,
									"src": "16058:442:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 802,
										"nodeType": "Block",
										"src": "16807:227:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 772,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 768,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 762,
																"src": "16821:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 770,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16840:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 769,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16832:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 771,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16832:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "16821:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 773,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16844:33:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															},
															"value": "BEP20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															}
														],
														"id": 767,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															937,
															938
														],
														"referencedDeclaration": 938,
														"src": "16813:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16813:65:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 775,
												"nodeType": "ExpressionStatement",
												"src": "16813:65:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 776,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "16885:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 779,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 764,
																"src": "16917:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 777,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "16900:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 778,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 138,
															"src": "16900:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 780,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16900:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16885:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 782,
												"nodeType": "ExpressionStatement",
												"src": "16885:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 783,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "16930:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 785,
														"indexExpression": {
															"argumentTypes": null,
															"id": 784,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 762,
															"src": "16940:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16930:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 790,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 764,
																"src": "16974:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 786,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "16951:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 788,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 787,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 762,
																	"src": "16961:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "16951:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 789,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 138,
															"src": "16951:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 791,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16951:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16930:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 793,
												"nodeType": "ExpressionStatement",
												"src": "16930:51:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 796,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17009:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 795,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17001:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 797,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17001:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 798,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 762,
															"src": "17013:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 799,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 764,
															"src": "17022:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 794,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "16992:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16992:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 801,
												"nodeType": "EmitStatement",
												"src": "16987:42:0"
											}
										]
									},
									"documentation": "@dev Creates `amount` tokens and assigns them to `account`, increasing\nthe total supply.\n   * Emits a {Transfer} event with `from` set to the zero address.\n   * Requirements\n   * - `to` cannot be the zero address.",
									"id": 803,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "16765:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 761,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16765:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "16782:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 763,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16782:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16764:33:0"
									},
									"returnParameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16807:0:0"
									},
									"scope": 919,
									"src": "16750:284:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 846,
										"nodeType": "Block",
										"src": "17386:267:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 811,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 805,
																"src": "17400:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 813,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17419:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 812,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "17411:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 814,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17411:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "17400:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 816,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17423:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															},
															"value": "BEP20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															}
														],
														"id": 810,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															937,
															938
														],
														"referencedDeclaration": 938,
														"src": "17392:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17392:67:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 818,
												"nodeType": "ExpressionStatement",
												"src": "17392:67:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 819,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "17466:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 821,
														"indexExpression": {
															"argumentTypes": null,
															"id": 820,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "17476:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "17466:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 826,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 807,
																"src": "17510:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 827,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17518:36:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																},
																"value": "BEP20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 822,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "17487:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 824,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 823,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 805,
																	"src": "17497:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17487:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 825,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 181,
															"src": "17487:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 828,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17487:68:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17466:89:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 830,
												"nodeType": "ExpressionStatement",
												"src": "17466:89:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 831,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "17561:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 834,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 807,
																"src": "17593:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 832,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "17576:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 833,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 154,
															"src": "17576:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 835,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17576:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17561:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 837,
												"nodeType": "ExpressionStatement",
												"src": "17561:39:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 839,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "17620:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 841,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17637:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 840,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17629:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 842,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17629:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 843,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 807,
															"src": "17641:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 838,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "17611:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17611:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 845,
												"nodeType": "EmitStatement",
												"src": "17606:42:0"
											}
										]
									},
									"documentation": "@dev Destroys `amount` tokens from `account`, reducing the\ntotal supply.\n   * Emits a {Transfer} event with `to` set to the zero address.\n   * Requirements\n   * - `account` cannot be the zero address.\n- `account` must have at least `amount` tokens.",
									"id": 847,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "17344:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17344:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "17361:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 806,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17361:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17343:33:0"
									},
									"returnParameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17386:0:0"
									},
									"scope": 919,
									"src": "17329:324:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 888,
										"nodeType": "Block",
										"src": "18125:239:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 861,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 857,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 849,
																"src": "18139:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 859,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18156:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 858,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "18148:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 860,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18148:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "18139:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 862,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18160:38:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															},
															"value": "BEP20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															}
														],
														"id": 856,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															937,
															938
														],
														"referencedDeclaration": 938,
														"src": "18131:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18131:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 864,
												"nodeType": "ExpressionStatement",
												"src": "18131:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 870,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 866,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 851,
																"src": "18213:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 868,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18232:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 867,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "18224:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 869,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18224:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "18213:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 871,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18236:36:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															},
															"value": "BEP20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															}
														],
														"id": 865,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															937,
															938
														],
														"referencedDeclaration": 938,
														"src": "18205:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18205:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 873,
												"nodeType": "ExpressionStatement",
												"src": "18205:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 874,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 423,
																"src": "18280:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 877,
															"indexExpression": {
																"argumentTypes": null,
																"id": 875,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 849,
																"src": "18292:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "18280:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 878,
														"indexExpression": {
															"argumentTypes": null,
															"id": 876,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 851,
															"src": "18299:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "18280:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 879,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 853,
														"src": "18310:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18280:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 881,
												"nodeType": "ExpressionStatement",
												"src": "18280:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 883,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 849,
															"src": "18336:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 884,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 851,
															"src": "18343:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 885,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "18352:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 882,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "18327:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18327:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 887,
												"nodeType": "EmitStatement",
												"src": "18322:37:0"
											}
										]
									},
									"documentation": "@dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n   * This is internal function is equivalent to `approve`, and can be used to\ne.g. set automatic allowances for certain subsystems, etc.\n   * Emits an {Approval} event.\n   * Requirements:\n   * - `owner` cannot be the zero address.\n- `spender` cannot be the zero address.",
									"id": 889,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 849,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "18068:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18068:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 851,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "18083:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 850,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18083:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 853,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "18100:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18100:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18067:48:0"
									},
									"returnParameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18125:0:0"
									},
									"scope": 919,
									"src": "18050:314:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 917,
										"nodeType": "Block",
										"src": "18589:158:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 897,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "18601:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 898,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "18610:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 896,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 847,
														"src": "18595:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18595:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 900,
												"nodeType": "ExpressionStatement",
												"src": "18595:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 902,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "18632:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 903,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "18641:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 904,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18641:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 912,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 893,
																	"src": "18694:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "42455032303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 913,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18702:38:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
																		"typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
																	},
																	"value": "BEP20: burn amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
																		"typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 905,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "18655:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 907,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 906,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 891,
																			"src": "18667:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "18655:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 910,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 908,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 101,
																			"src": "18676:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 909,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "18676:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "18655:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 911,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 181,
																"src": "18655:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 914,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18655:86:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 901,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 889,
														"src": "18623:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18623:119:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 916,
												"nodeType": "ExpressionStatement",
												"src": "18623:119:0"
											}
										]
									},
									"documentation": "@dev Destroys `amount` tokens from `account`.`amount` is then deducted\nfrom the caller's allowance.\n   * See {_burn} and {_approve}.",
									"id": 918,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "18547:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 890,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18547:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 893,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "18564:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18564:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18546:33:0"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18589:0:0"
									},
									"scope": 919,
									"src": "18528:219:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 920,
							"src": "11005:7744:0"
						}
					],
					"src": "37:18713:0"
				},
				"id": 0
			}
		}
	}
}